<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>韦伯的三位一体理论</title>
      <link href="/2025/07/13/2025-7-13%E9%9F%A6%E4%BC%AF%E7%9A%84%E4%B8%89%E4%BD%8D%E4%B8%80%E4%BD%93%E7%90%86%E8%AE%BA/"/>
      <url>/2025/07/13/2025-7-13%E9%9F%A6%E4%BC%AF%E7%9A%84%E4%B8%89%E4%BD%8D%E4%B8%80%E4%BD%93%E7%90%86%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="马克斯·韦伯（Max-Weber）三位一体有两类"><a href="#马克斯·韦伯（Max-Weber）三位一体有两类" class="headerlink" title="马克斯·韦伯（Max Weber）三位一体有两类:"></a>马克斯·韦伯（Max Weber）三位一体有两类:</h2><blockquote><p>国家治理的三位一体<br>社会分层的三位一体</p></blockquote><h1 id="一、国家治理“合法性基础—权威类型—支配方式”的三位一体"><a href="#一、国家治理“合法性基础—权威类型—支配方式”的三位一体" class="headerlink" title="一、国家治理“合法性基础—权威类型—支配方式”的三位一体"></a>一、国家治理“合法性基础—权威类型—支配方式”的三位一体</h1><p><img src="/2025/07/13/2025-7-13%E9%9F%A6%E4%BC%AF%E7%9A%84%E4%B8%89%E4%BD%8D%E4%B8%80%E4%BD%93%E7%90%86%E8%AE%BA/1.png" alt="栖木"></p><span id="more"></span><h2 id="1-传统型权威（Traditional-Authority）"><a href="#1-传统型权威（Traditional-Authority）" class="headerlink" title="1. 传统型权威（Traditional Authority）"></a>1. 传统型权威（Traditional Authority）</h2><p>  • 合法性基础：<br>依赖传统和习俗的神圣性，人们之所以服从，是因为“这就是一直以来的方式”。<br>  • 典型例子：<br>君主制、父权制社会、宗教长老制等。<br>  • 核心特点：<br>权力来自世代相传的习惯，统治者通常是世袭的。</p><h2 id="2-法理型权威（Legal-Rational-Authority）"><a href="#2-法理型权威（Legal-Rational-Authority）" class="headerlink" title="2. 法理型权威（Legal-Rational Authority）"></a>2. 法理型权威（Legal-Rational Authority）</h2><p>  • 合法性基础：<br>依赖于合法制定的规则和法律体系，以及规则赋予的职务权力。<br>  • 典型例子：<br>现代官僚制政府、公司、国家法律制度。<br>  • 核心特点：<br>统治权力来自于职位，而非个人，执行职能基于书面规则和程序。</p><h2 id="3-魅力型权威（Charismatic-Authority）"><a href="#3-魅力型权威（Charismatic-Authority）" class="headerlink" title="3. 魅力型权威（Charismatic Authority）"></a>3. 魅力型权威（Charismatic Authority）</h2><p>  • 合法性基础：<br>基于追随者对某个人非凡品质或魅力的信仰。<br>  • 典型例子：<br>宗教先知（如耶稣、穆罕默德）、革命领袖（如拿破仑、毛泽东）、宗教或政治运动领导人。<br>  • 核心特点：<br>权威来自个人魅力和感召力，而不是制度或传统。</p><table><thead><tr><th>权威类型</th><th>合法性基础</th><th>典型例子</th><th>关键词</th></tr></thead><tbody><tr><td>传统型权威</td><td>对传统和习俗的尊重</td><td>君主、家长制、部落酋长</td><td>世袭、亲属关系、传统习俗</td></tr><tr><td>法理型权威</td><td>合法制定的规则与制度</td><td>官僚体系、现代政府</td><td>法律、制度、职位规则、专业化</td></tr><tr><td>魅力型权威</td><td>对领导者个人魅力的信仰</td><td>革命领袖、宗教先知</td><td>感召力、非制度化、信仰、变革性</td></tr></tbody></table><hr><h1 id="二、社会分层“财富、权力与声望”的的三位一体"><a href="#二、社会分层“财富、权力与声望”的的三位一体" class="headerlink" title="二、社会分层“财富、权力与声望”的的三位一体"></a>二、社会分层“财富、权力与声望”的的三位一体</h1><p><img src="/2025/07/13/2025-7-13%E9%9F%A6%E4%BC%AF%E7%9A%84%E4%B8%89%E4%BD%8D%E4%B8%80%E4%BD%93%E7%90%86%E8%AE%BA/2.png" alt="栖木"></p><h2 id="1-财富（经济标准）"><a href="#1-财富（经济标准）" class="headerlink" title="1. 财富（经济标准）"></a>1. 财富（经济标准）</h2><p>◦ 定义：个人或群体在市场上的经济能力，包括收入、财产（货币、土地、资源等）及市场购买力。</p><p>◦ 作用：经济地位决定“阶级”，即具有相似市场机会的群体（如资本家与工人）。</p><p>◦ 与马克思的区别：韦伯强调“消费能力”而非生产资料占有（如工人可能因高收入跨越阶级）。</p><h2 id="2-权力（政治标准）"><a href="#2-权力（政治标准）" class="headerlink" title="2. 权力（政治标准）"></a>2. 权力（政治标准）</h2><p>◦ 定义：无视他人意愿实现自身意志的能力，体现为支配力。</p><p>◦ 来源：科层组织职位（如官僚）、传统地位（如世袭贵族）或卡理斯玛领袖。</p><p>◦ 分化结果：权力差异形成政党或利益集团。</p><h2 id="3-声望（社会标准）"><a href="#3-声望（社会标准）" class="headerlink" title="3. 声望（社会标准）"></a>3. 声望（社会标准）</h2><p>◦ 定义：社会认可与尊重程度，与身份、教育、生活方式相关。</p><p>◦ 作用：形成“身份群体”，如知识分子、贵族等，其社会地位可能独立于经济水平（如清贫学者仍受尊敬）。</p><h2 id="三者关系："><a href="#三者关系：" class="headerlink" title="三者关系："></a>三者关系：</h2><p>• 经济分化产生阶级，权力分化产生政党，社会分化形成身份群体。</p><p>• 例如，富豪（财富）可能通过政治献金获得权力，再以慈善提升声望，实现三者转化。</p>]]></content>
      
      
      <categories>
          
          <category> 社会学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社会学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo构建blog时渲染LaTeX数学公式的问题</title>
      <link href="/2024/11/20/2024-11-20Hexo%E6%9E%84%E5%BB%BAblog%E6%97%B6%E6%B8%B2%E6%9F%93LaTeX%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2024/11/20/2024-11-20Hexo%E6%9E%84%E5%BB%BAblog%E6%97%B6%E6%B8%B2%E6%9F%93LaTeX%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="1-在hexo-config-yml末尾添加一段代码"><a href="#1-在hexo-config-yml末尾添加一段代码" class="headerlink" title="1.在hexo&#x2F;_config.yml末尾添加一段代码"></a>1.在hexo&#x2F;_config.yml末尾添加一段代码</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="attr">engine:</span> <span class="string">&#x27;mathjax&#x27;</span> <span class="comment"># or &#x27;katex&#x27;</span></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="comment"># src: custom_mathjax_source</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="comment"># MathJax config</span></span><br></pre></td></tr></table></figure><hr><h2 id="2-修改next-config-yml中mathjax的设置"><a href="#2-修改next-config-yml中mathjax的设置" class="headerlink" title="2.修改next&#x2F;_config.yml中mathjax的设置"></a>2.修改next&#x2F;_config.yml中mathjax的设置</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Math Formulas Render Support</span></span><br><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="comment"># Default (true) will load mathjax / katex script on demand.</span></span><br><span class="line">  <span class="comment"># That is it only render those page which has `mathjax: true` in Front-matter.</span></span><br><span class="line">  <span class="comment"># If you set it to false, it will load mathjax / katex srcipt EVERY PAGE.</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># hexo-renderer-pandoc (or hexo-renderer-kramed) required for full MathJax support.</span></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># See: https://mhchem.github.io/MathJax-mhchem/</span></span><br><span class="line">    <span class="attr">mhchem:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">vendors:</span></span><br><span class="line">  <span class="attr">mathjax:</span> <span class="string">//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>注意：如果per_page:false则md文件前面要加上mathjax:true</p></blockquote><hr><h2 id="3-额外装hexo-filter-mathjax"><a href="#3-额外装hexo-filter-mathjax" class="headerlink" title="3.额外装hexo-filter-mathjax"></a>3.额外装hexo-filter-mathjax</h2><p><code>$ npm i hexo-filter-mathjax</code></p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>贝叶斯公式</title>
      <link href="/2024/11/20/2024-11-20%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%85%AC%E5%BC%8F/"/>
      <url>/2024/11/20/2024-11-20%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%85%AC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h1><p>叶斯公式（Bayes’ Theorem）是概率论中非常重要的一个公式，用来描述在已知某些条件下更新某个事件概率的方法。它的表达形式是：</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.172ex;" xmlns="http://www.w3.org/2000/svg" width="25.808ex" height="5.475ex" role="img" focusable="false" viewBox="0 -1460 11407 2420"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(1890,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2168,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(2927,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3593.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4649.6,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(1899,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2177,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(2927,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3538.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(4038.4,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(4789.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(5178.4,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(5928.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(2234.7,-710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(1899,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><rect width="6517.4" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></p><p>其中各符号的意义如下：</p><ul><li>P(A|B)：事件 A 在事件 B 已发生的条件下的概率，称为 后验概率。</li><li>P(B|A)：事件 B 在事件 A 已发生的条件下的概率，称为 似然。</li><li>P(A)：事件 A 的先验概率，表示在未考虑 B 的情况下 A 的概率。</li><li>P(B)：事件 B 的先验概率。</li></ul><p>贝叶斯公式的直观理解</p><p>贝叶斯公式的核心思想是“<code>通过已有证据更新对某个假设的信心</code>”。它结合了两个因素：</p><ol><li>先验知识（P(A)），即我们之前对事件 A 的理解。</li><li>新证据（P(B|A)），即在假设 A 成立的条件下观察到证据 B 的可能性。</li></ol><p>通过这两者，我们可以计算出事件 A 的 修正后概率，即 P(A|B)。</p><hr><p>如何理解“通过已有证据更新对某个假设的信心”</p><span id="more"></span><ol><li>假设和证据是什么？</li></ol><p>假设（Hypothesis）：你认为某件事情是真的可能性。例如，“我可能感冒了”是一个假设。<br>证据（Evidence）：新观察到的信息。例如，“我正在流鼻涕”是一个证据。</p><ol start="2"><li>先验信心（Prior Belief）</li></ol><p>在没有观察到任何新证据之前，你对假设 H 的信心用 先验概率 表示：P(H)<br>例如，假设感冒在普通人群中的患病率是 10%，那么：P(H) = 0.1</p><ol start="3"><li>证据的重要性</li></ol><p>假如你观察到了一条新证据 E：流鼻涕。<br>流鼻涕并不总是因为感冒，也可能是过敏导致。我们用如下概率描述证据：</p><ul><li><p>如果假设 H 为真（感冒了），观察到证据 E（流鼻涕）的可能性是：<br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="13.734ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 6070.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(1904,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2182,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(3070,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3736.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(4792.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(778,0)"></path></g></g></g></svg></mjx-container>（90% 的感冒患者会流鼻涕）</p></li><li><p>如果假设 H 为假（没有感冒），观察到 E（流鼻涕）的可能性是：<br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="15.243ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 6737.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(1904,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2182,0)"><path data-c="AC" d="M56 323T56 336T70 356H596Q603 353 611 343V102Q598 89 591 89Q587 89 584 90T579 94T575 98T572 102L571 209V316H70Q56 323 56 336Z"></path></g><g data-mml-node="mi" transform="translate(2849,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(3737,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4403.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(5459.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(778,0)"></path></g></g></g></svg></mjx-container>（10% 的非感冒人群也会流鼻涕）</p></li></ul><ol start="4"><li>用贝叶斯公式更新信心</li></ol><p>贝叶斯公式告诉我们，观察到新证据 E 后，假设 H 成立的修正概率（后验概率）是：</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.172ex;" xmlns="http://www.w3.org/2000/svg" width="26.767ex" height="5.475ex" role="img" focusable="false" viewBox="0 -1460 11831 2420"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(2028,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2306,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(3070,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3736.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4792.6,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(1904,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2182,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(3070,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3681.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(4181.4,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(4932.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(5321.4,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(6209.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(2372.7,-710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(1904,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><rect width="6798.4" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></p><p>  • P(H)：先验概率（感冒率）。<br>  • P(E|H)：似然，表示在假设 H 成立下，证据 E 发生的概率。<br>  • P(E)：证据 E 的总体概率，计算如下：</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="43.846ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 19379.9 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(1904,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2570.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3626.6,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(4377.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(4766.6,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(5530.6,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(5808.6,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(6696.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(7307.8,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(7808,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(8559,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(8948,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(9836,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10447.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(11447.4,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(12198.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(12587.4,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(13351.4,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(13629.4,0)"><path data-c="AC" d="M56 323T56 336T70 356H596Q603 353 611 343V102Q598 89 591 89Q587 89 584 90T579 94T575 98T572 102L571 209V316H70Q56 323 56 336Z"></path></g><g data-mml-node="mi" transform="translate(14296.4,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(15184.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(15795.7,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(16295.9,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(17046.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(17435.9,0)"><path data-c="AC" d="M56 323T56 336T70 356H596Q603 353 611 343V102Q598 89 591 89Q587 89 584 90T579 94T575 98T572 102L571 209V316H70Q56 323 56 336Z"></path></g><g data-mml-node="mi" transform="translate(18102.9,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(18990.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p><ol start="5"><li>实际计算示例</li></ol><p>我们代入数据：</p><blockquote><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="11.377ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5028.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(2028,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2694.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3750.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(778,0)"></path></g></g></g></svg></mjx-container>：感冒率。<br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="13.734ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 6070.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(1904,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2182,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(3070,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3736.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(4792.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(778,0)"></path></g></g></g></svg></mjx-container>：感冒者流鼻涕的概率。<br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="15.243ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 6737.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(1904,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2182,0)"><path data-c="AC" d="M56 323T56 336T70 356H596Q603 353 611 343V102Q598 89 591 89Q587 89 584 90T579 94T575 98T572 102L571 209V316H70Q56 323 56 336Z"></path></g><g data-mml-node="mi" transform="translate(2849,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(3737,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4403.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(5459.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(778,0)"></path></g></g></g></svg></mjx-container>：非感冒者流鼻涕的概率。<br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="25.268ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 11168.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="AC" d="M56 323T56 336T70 356H596Q603 353 611 343V102Q598 89 591 89Q587 89 584 90T579 94T575 98T572 102L571 209V316H70Q56 323 56 336Z"></path></g><g data-mml-node="mi" transform="translate(1807,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(2695,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3361.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(4417.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(5139.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(6140,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(6891,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(7280,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(8168,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(8834.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(9890.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(778,0)"></path></g></g></g></svg></mjx-container>：没有感冒的概率。</p></blockquote><p>计算 P(E)（流鼻涕的总概率）：</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="43.846ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 19379.9 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(1904,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2570.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3626.6,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(4377.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(4766.6,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(5530.6,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(5808.6,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(6696.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(7307.8,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(7808,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(8559,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(8948,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(9836,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10447.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(11447.4,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(12198.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(12587.4,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(13351.4,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(13629.4,0)"><path data-c="AC" d="M56 323T56 336T70 356H596Q603 353 611 343V102Q598 89 591 89Q587 89 584 90T579 94T575 98T572 102L571 209V316H70Q56 323 56 336Z"></path></g><g data-mml-node="mi" transform="translate(14296.4,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(15184.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(15795.7,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(16295.9,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(17046.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(17435.9,0)"><path data-c="AC" d="M56 323T56 336T70 356H596Q603 353 611 343V102Q598 89 591 89Q587 89 584 90T579 94T575 98T572 102L571 209V316H70Q56 323 56 336Z"></path></g><g data-mml-node="mi" transform="translate(18102.9,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(18990.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="46.673ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 20629.4 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(1904,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2570.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3626.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(5126.8,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mn" transform="translate(5627,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(7127.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(8127.4,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(9627.7,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mn" transform="translate(10127.9,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(11683.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(12739.4,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(778,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(1278,0)"></path></g><g data-mml-node="mo" transform="translate(14739.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(15739.9,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(778,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(1278,0)"></path></g><g data-mml-node="mo" transform="translate(17795.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(18851.4,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(778,0)"></path><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" transform="translate(1278,0)"></path></g></g></g></svg></mjx-container></p><p>套入贝叶斯公式计算 P(H|E)（观察到流鼻涕后感冒的概率）：</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.172ex;" xmlns="http://www.w3.org/2000/svg" width="26.767ex" height="5.475ex" role="img" focusable="false" viewBox="0 -1460 11831 2420"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(2028,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2306,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(3070,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3736.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4792.6,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(1904,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2182,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(3070,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3681.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(4181.4,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(4932.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(5321.4,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(6209.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(2372.7,-710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(1904,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><rect width="6798.4" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.602ex;" xmlns="http://www.w3.org/2000/svg" width="33.199ex" height="4.638ex" role="img" focusable="false" viewBox="0 -1342 14674.1 2050"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mo" transform="translate(2028,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2306,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(3070,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3736.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4792.6,0)"><g data-mml-node="mrow" transform="translate(220,676)"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(1500.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mn" transform="translate(2000.4,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(778,0)"></path></g></g><g data-mml-node="mn" transform="translate(970.2,-686)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(778,0)"></path><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" transform="translate(1278,0)"></path></g><rect width="3478.4" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(8788.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(9844.6,0)"><g data-mml-node="mn" transform="translate(220,676)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(778,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(1278,0)"></path></g><g data-mml-node="mn" transform="translate(220,-686)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(778,0)"></path><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" transform="translate(1278,0)"></path></g><rect width="1978" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(12340.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(13396.1,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(778,0)"></path></g></g></g></svg></mjx-container></p><ol start="6"><li>结果</li></ol><p>观察到证据 E（流鼻涕）后，感冒的概率从原来的 10%（先验概率）增加到 50%（后验概率）。<br>这就是贝叶斯公式“通过新证据更新假设信心”的过程。</p><hr><h1 id="二、公式推导"><a href="#二、公式推导" class="headerlink" title="二、公式推导"></a>二、公式推导</h1><p>条件概率的定义</p><p>条件概率表示在事件 B 已经发生的情况下，事件 A 发生的概率，用符号表示为：</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.172ex;" xmlns="http://www.w3.org/2000/svg" width="37.871ex" height="5.475ex" role="img" focusable="false" viewBox="0 -1460 16739 2420"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">　</text></g></g><g data-mml-node="mi" transform="translate(1000,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(1751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2140,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(2890,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(3168,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(3927,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4593.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(5649.6,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(2112.2,0)"><path data-c="2229" d="M88 -21T75 -21T55 -7V200Q55 231 55 280Q56 414 60 428Q61 430 61 431Q77 500 152 549T332 598Q443 598 522 544T610 405Q611 399 611 194V-7Q604 -22 591 -22Q582 -22 572 -9L570 405Q563 433 556 449T529 485Q498 519 445 538T334 558Q251 558 179 518T96 401Q95 396 95 193V-7Q88 -21 75 -21Z"></path></g><g data-mml-node="mi" transform="translate(3001.4,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(3760.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(1150.7,-710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(1899,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><rect width="4349.4" height="60" x="120" y="220"></rect></g><g data-mml-node="mstyle" transform="translate(10239,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mtext" transform="translate(11239,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">（</text><text data-variant="normal" transform="translate(1000,0) scale(1,-1)" font-size="884px" font-family="serif">定</text><text data-variant="normal" transform="translate(2000,0) scale(1,-1)" font-size="884px" font-family="serif">义</text><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(3000,0)"></path><text data-variant="normal" transform="translate(3500,0) scale(1,-1)" font-size="884px" font-family="serif">）</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(15739,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">　</text></g></g></g></g></svg></mjx-container><br><img src="/2024/11/20/2024-11-20%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%85%AC%E5%BC%8F/1.png" alt="栖木"><br>这里：</p><ul><li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="9.388ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4149.4 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(2112.2,0)"><path data-c="2229" d="M88 -21T75 -21T55 -7V200Q55 231 55 280Q56 414 60 428Q61 430 61 431Q77 500 152 549T332 598Q443 598 522 544T610 405Q611 399 611 194V-7Q604 -22 591 -22Q582 -22 572 -9L570 405Q563 433 556 449T529 485Q498 519 445 538T334 558Q251 558 179 518T96 401Q95 396 95 193V-7Q88 -21 75 -21Z"></path></g><g data-mml-node="mi" transform="translate(3001.4,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(3760.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>：表示 A 和 B 同时发生的概率。</li><li>P(B)：表示事件 B 发生的概率（假设 P(B) &gt; 0）。</li></ul><p>同样地，交换 A 和 B 的角色，我们也可以写出：</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.172ex;" xmlns="http://www.w3.org/2000/svg" width="33.346ex" height="5.475ex" role="img" focusable="false" viewBox="0 -1460 14739 2420"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(1899,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2177,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(2927,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3593.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4649.6,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(2112.2,0)"><path data-c="2229" d="M88 -21T75 -21T55 -7V200Q55 231 55 280Q56 414 60 428Q61 430 61 431Q77 500 152 549T332 598Q443 598 522 544T610 405Q611 399 611 194V-7Q604 -22 591 -22Q582 -22 572 -9L570 405Q563 433 556 449T529 485Q498 519 445 538T334 558Q251 558 179 518T96 401Q95 396 95 193V-7Q88 -21 75 -21Z"></path></g><g data-mml-node="mi" transform="translate(3001.4,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(3760.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(1155.2,-710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(1890,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><rect width="4349.4" height="60" x="120" y="220"></rect></g><g data-mml-node="mstyle" transform="translate(9239,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mtext" transform="translate(10239,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">（</text><text data-variant="normal" transform="translate(1000,0) scale(1,-1)" font-size="884px" font-family="serif">定</text><text data-variant="normal" transform="translate(2000,0) scale(1,-1)" font-size="884px" font-family="serif">义</text><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(3000,0)"></path><text data-variant="normal" transform="translate(3500,0) scale(1,-1)" font-size="884px" font-family="serif">）</text></g></g></g></svg></mjx-container></p><p>将两条公式联系起来</p><p>从条件概率的定义中，知道两式都含有 P(A \cap B)，所以可以写成：</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="26.718ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 11809.4 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(2112.2,0)"><path data-c="2229" d="M88 -21T75 -21T55 -7V200Q55 231 55 280Q56 414 60 428Q61 430 61 431Q77 500 152 549T332 598Q443 598 522 544T610 405Q611 399 611 194V-7Q604 -22 591 -22Q582 -22 572 -9L570 405Q563 433 556 449T529 485Q498 519 445 538T334 558Q251 558 179 518T96 401Q95 396 95 193V-7Q88 -21 75 -21Z"></path></g><g data-mml-node="mi" transform="translate(3001.4,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(3760.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4427.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(5483,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(6234,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(6623,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(7373,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(7651,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(8410,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9021.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(9521.4,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(10272.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(10661.4,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(11420.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="26.698ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 11800.4 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(2112.2,0)"><path data-c="2229" d="M88 -21T75 -21T55 -7V200Q55 231 55 280Q56 414 60 428Q61 430 61 431Q77 500 152 549T332 598Q443 598 522 544T610 405Q611 399 611 194V-7Q604 -22 591 -22Q582 -22 572 -9L570 405Q563 433 556 449T529 485Q498 519 445 538T334 558Q251 558 179 518T96 401Q95 396 95 193V-7Q88 -21 75 -21Z"></path></g><g data-mml-node="mi" transform="translate(3001.4,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(3760.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4427.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(5483,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(6234,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(6623,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(7382,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(7660,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(8410,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9021.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(9521.4,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(10272.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(10661.4,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(11411.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p><p>既然 P(A \cap B) 是相等的，把两式结合起来：</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="31.623ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 13977.4 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(1890,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2168,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(2927,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3538.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(4038.4,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(4789.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(5178.4,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(5937.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6604.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(7660,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(8411,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(8800,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(9559,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(9837,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(10587,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(11198.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(11698.4,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(12449.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(12838.4,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(13588.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p><p>整理得到贝叶斯公式：</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.172ex;" xmlns="http://www.w3.org/2000/svg" width="25.808ex" height="5.475ex" role="img" focusable="false" viewBox="0 -1460 11407 2420"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(1890,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2168,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(2927,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3593.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4649.6,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(1899,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2177,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(2927,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3538.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(4038.4,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(4789.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(5178.4,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(5928.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(2234.7,-710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(1899,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><rect width="6517.4" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></p><hr><h1 id="三、几个应用的实例"><a href="#三、几个应用的实例" class="headerlink" title="三、几个应用的实例"></a>三、几个应用的实例</h1><h2 id="1-疾病检测"><a href="#1-疾病检测" class="headerlink" title="1.疾病检测"></a>1.疾病检测</h2><p>问题：<br>某种疾病（事件 D）在总体人群中的患病率为 1%（即 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="12.372ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5468.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(1968,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2634.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3690.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(778,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1278,0)"></path></g></g></g></svg></mjx-container>）。一种检测方法的准确率如下：</p><ul><li>患者（有疾病）中，测试阳性（事件 T）的概率是 99%（即 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="14.594ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 6450.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mo" transform="translate(1844,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2122,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(2950,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3616.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(4672.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(778,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(1278,0)"></path></g></g></g></svg></mjx-container>）。</li><li>非患者（无疾病）中，测试阳性的概率是 5%（即 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="16.103ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7117.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mo" transform="translate(1844,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2122,0)"><path data-c="AC" d="M56 323T56 336T70 356H596Q603 353 611 343V102Q598 89 591 89Q587 89 584 90T579 94T575 98T572 102L571 209V316H70Q56 323 56 336Z"></path></g><g data-mml-node="mi" transform="translate(2789,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(3617,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4283.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(5339.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(778,0)"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(1278,0)"></path></g></g></g></svg></mjx-container>）。</li></ul><p>假如你随机抽到一个人，测试结果是阳性（T），问这个人真正患病（D）的概率是多少？</p><hr><p>解答：</p><p>我们要计算的是 P(D|T)（测试阳性的人患病的概率），用贝叶斯公式：</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.172ex;" xmlns="http://www.w3.org/2000/svg" width="26.088ex" height="5.475ex" role="img" focusable="false" viewBox="0 -1460 11531 2420"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(1968,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2246,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mo" transform="translate(2950,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3616.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4672.6,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mo" transform="translate(1844,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2122,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(2950,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3561.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(4061.4,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(4812.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(5201.4,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(6029.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(2312.7,-710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mo" transform="translate(1844,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><rect width="6618.4" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></p><p>数据:</p><ol><li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="12.372ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5468.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(1968,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2634.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3690.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(778,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1278,0)"></path></g></g></g></svg></mjx-container>：患病率。</li><li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="14.594ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 6450.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mo" transform="translate(1844,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2122,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(2950,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3616.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(4672.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(778,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(1278,0)"></path></g></g></g></svg></mjx-container>：患病者测试阳性的概率。</li><li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="26.128ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 11548.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="AC" d="M56 323T56 336T70 356H596Q603 353 611 343V102Q598 89 591 89Q587 89 584 90T579 94T575 98T572 102L571 209V316H70Q56 323 56 336Z"></path></g><g data-mml-node="mi" transform="translate(1807,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(2635,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3301.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(4357.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(5079.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(6080,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(6831,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(7220,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(8048,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(8714.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(9770.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(778,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(1278,0)"></path></g></g></g></svg></mjx-container>：不患病的概率。</li><li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="16.103ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7117.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mo" transform="translate(1844,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2122,0)"><path data-c="AC" d="M56 323T56 336T70 356H596Q603 353 611 343V102Q598 89 591 89Q587 89 584 90T579 94T575 98T572 102L571 209V316H70Q56 323 56 336Z"></path></g><g data-mml-node="mi" transform="translate(2789,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(3617,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4283.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(5339.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(778,0)"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(1278,0)"></path></g></g></g></svg></mjx-container>：不患病者测试阳性的概率。</li></ol><p>需要先计算 P(T)（测试阳性的总概率）：</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="42.896ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 18959.9 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mo" transform="translate(1844,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2510.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3566.6,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(4317.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(4706.6,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mo" transform="translate(5410.6,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(5688.6,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(6516.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(7127.8,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(7628,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(8379,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(8768,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(9596,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10207.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(11207.4,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(11958.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(12347.4,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mo" transform="translate(13051.4,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(13329.4,0)"><path data-c="AC" d="M56 323T56 336T70 356H596Q603 353 611 343V102Q598 89 591 89Q587 89 584 90T579 94T575 98T572 102L571 209V316H70Q56 323 56 336Z"></path></g><g data-mml-node="mi" transform="translate(13996.4,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(14824.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(15435.7,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(15935.9,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(16686.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(17075.9,0)"><path data-c="AC" d="M56 323T56 336T70 356H596Q603 353 611 343V102Q598 89 591 89Q587 89 584 90T579 94T575 98T572 102L571 209V316H70Q56 323 56 336Z"></path></g><g data-mml-node="mi" transform="translate(17742.9,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(18570.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="57.849ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 25569.4 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mo" transform="translate(1844,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2510.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3566.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(778,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(1278,0)"></path></g><g data-mml-node="mo" transform="translate(5566.8,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mn" transform="translate(6067,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(778,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1278,0)"></path></g><g data-mml-node="mo" transform="translate(8067.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(9067.4,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(778,0)"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(1278,0)"></path></g><g data-mml-node="mo" transform="translate(11067.7,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mn" transform="translate(11567.9,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(778,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(1278,0)"></path></g><g data-mml-node="mo" transform="translate(13623.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(14679.4,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(778,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1278,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(1778,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(2278,0)"></path></g><g data-mml-node="mo" transform="translate(17679.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(18679.9,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(778,0)"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(1278,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(1778,0)"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(2278,0)"></path></g><g data-mml-node="mo" transform="translate(21735.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(22791.4,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(778,0)"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(1278,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(1778,0)"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(2278,0)"></path></g></g></g></svg></mjx-container></p><p>套用公式：</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.172ex;" xmlns="http://www.w3.org/2000/svg" width="26.088ex" height="5.475ex" role="img" focusable="false" viewBox="0 -1460 11531 2420"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(1968,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2246,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mo" transform="translate(2950,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3616.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4672.6,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mo" transform="translate(1844,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2122,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(2950,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3561.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(4061.4,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(4812.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(5201.4,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(6029.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(2312.7,-710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mo" transform="translate(1844,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><rect width="6618.4" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></p><p>代入数据：</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.602ex;" xmlns="http://www.w3.org/2000/svg" width="39.715ex" height="4.638ex" role="img" focusable="false" viewBox="0 -1342 17554.1 2050"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(1968,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2246,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mo" transform="translate(2950,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3616.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4672.6,0)"><g data-mml-node="mrow" transform="translate(220,676)"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(778,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(1278,0)"></path></g><g data-mml-node="mo" transform="translate(2000.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mn" transform="translate(2500.4,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(778,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1278,0)"></path></g></g><g data-mml-node="mn" transform="translate(970.2,-686)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(778,0)"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(1278,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(1778,0)"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(2278,0)"></path></g><rect width="4478.4" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(9668.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(10724.6,0)"><g data-mml-node="mn" transform="translate(220,676)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(778,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1278,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(1778,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(2278,0)"></path></g><g data-mml-node="mn" transform="translate(220,-686)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(778,0)"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(1278,0)"></path><path data-c="39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z" transform="translate(1778,0)"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(2278,0)"></path></g><rect width="2978" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(14220.3,0)"><path data-c="2248" d="M55 319Q55 360 72 393T114 444T163 472T205 482Q207 482 213 482T223 483Q262 483 296 468T393 413L443 381Q502 346 553 346Q609 346 649 375T694 454Q694 465 698 474T708 483Q722 483 722 452Q722 386 675 338T555 289Q514 289 468 310T388 357T308 404T224 426Q164 426 125 393T83 318Q81 289 69 289Q55 289 55 319ZM55 85Q55 126 72 159T114 210T163 238T205 248Q207 248 213 248T223 249Q262 249 296 234T393 179L443 147Q502 112 553 112Q609 112 649 141T694 220Q694 249 708 249T722 217Q722 153 675 104T555 55Q514 55 468 76T388 123T308 170T224 192Q164 192 125 159T83 84Q80 55 69 55Q55 55 55 85Z"></path></g><g data-mml-node="mn" transform="translate(15276.1,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(778,0)"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(1278,0)"></path><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z" transform="translate(1778,0)"></path></g></g></g></svg></mjx-container></p><p>结果:</p><p>即便测试阳性，一个人真正患病的概率只有约 16.7%。</p><p>这个例子为什么重要？</p><p>它表明即使检测工具很准确，当患病率（先验概率）非常低时，阳性结果并不一定意味着高概率患病。这种现象在医学检测中非常常见。</p><hr><h2 id="2-袋子里抽球"><a href="#2-袋子里抽球" class="headerlink" title="2.袋子里抽球"></a>2.袋子里抽球</h2><p>一个袋子里有红球 (R) 和蓝球 (B)：</p><ul><li>P(R) = 0.4：红球占 40%。</li><li>P(B) = 0.6：蓝球占 60%。</li></ul><p>你戴着眼罩从袋子里摸到一个球，发现它是光滑的 (S)。已知：</p><ul><li>P(S|R) = 0.8：红球中有 80% 是光滑的。</li><li>P(S|B) = 0.3：蓝球中有 30% 是光滑的。</li></ul><p>问：在摸到光滑球 (S) 后，它是红球 (R) 的概率是多少？</p><hr><p>解答：</p><p>我们要求的是 P(R|S)（已知光滑的条件下是红球的概率）。公式是：</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.172ex;" xmlns="http://www.w3.org/2000/svg" width="25.353ex" height="5.475ex" role="img" focusable="false" viewBox="0 -1460 11206 2420"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mo" transform="translate(1899,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2177,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(2822,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3488.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4544.6,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(1785,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2063,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mo" transform="translate(2822,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3433.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(3933.4,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(4684.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(5073.4,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mo" transform="translate(5832.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(2243.7,-710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(1785,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><rect width="6421.4" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></p><p>数据准备：</p><p>我们已知：</p><ol><li>P(R) = 0.4：红球的先验概率。</li><li>P(S|R) = 0.8：红球中光滑的概率。</li><li>P(S|B) = 0.3：蓝球中光滑的概率。</li><li>P(B) = 0.6：蓝球的先验概率。</li></ol><p>但是我们还需要计算 P(S)，即抽到光滑球的总体概率。</p><p>计算 P(S)：</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="38.853ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 17172.9 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(1785,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2451.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3507.6,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(4258.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(4647.6,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(5292.6,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(5570.6,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mo" transform="translate(6329.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6940.8,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(7441,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(8192,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(8581,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mo" transform="translate(9340,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9951.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(10951.4,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(11702.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(12091.4,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(12736.4,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(13014.4,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(13773.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(14384.7,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(14884.9,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(15635.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(16024.9,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(16783.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p><p>代入数据：</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="45.272ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 20010.4 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(1785,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2451.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3507.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(5007.8,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mn" transform="translate(5508,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(7008.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(8008.4,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(9508.7,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mn" transform="translate(10008.9,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(11564.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(12620.4,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" transform="translate(778,0)"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(1278,0)"></path></g><g data-mml-node="mo" transform="translate(14620.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(15620.9,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(778,0)"></path><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" transform="translate(1278,0)"></path></g><g data-mml-node="mo" transform="translate(17676.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(18732.4,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(778,0)"></path></g></g></g></svg></mjx-container></p><p>套用贝叶斯公式：</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.172ex;" xmlns="http://www.w3.org/2000/svg" width="25.353ex" height="5.475ex" role="img" focusable="false" viewBox="0 -1460 11206 2420"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mo" transform="translate(1899,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2177,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(2822,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3488.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4544.6,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(1785,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2063,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mo" transform="translate(2822,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3433.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(3933.4,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(4684.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(5073.4,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mo" transform="translate(5832.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(2243.7,-710)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(1785,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><rect width="6421.4" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></p><p>代入数据：</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.602ex;" xmlns="http://www.w3.org/2000/svg" width="33.769ex" height="4.663ex" role="img" focusable="false" viewBox="0 -1353 14926.1 2061"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mo" transform="translate(1899,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(2177,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(2822,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3488.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4544.6,0)"><g data-mml-node="mrow" transform="translate(220,676)"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(1500.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mn" transform="translate(2000.4,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(778,0)"></path></g></g><g data-mml-node="mn" transform="translate(1220.2,-686)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(778,0)"></path></g><rect width="3478.4" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(8540.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(9596.6,0)"><g data-mml-node="mn" transform="translate(220,676)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" transform="translate(778,0)"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(1278,0)"></path></g><g data-mml-node="mn" transform="translate(470,-686)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(778,0)"></path></g><rect width="1978" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(12092.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(13148.1,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(778,0)"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(1278,0)"></path></g></g></g></svg></mjx-container></p><p>结果：</p><p>摸到光滑球后，它是红球的概率是 64%。</p><p>总结：</p><ol><li>P(R|S) 是在“摸到光滑球”这一新信息 (S) 后，更新的红球概率。</li><li>贝叶斯公式把“先验概率” (P(R)) 和“新证据” (P(S|R)) 结合起来，得出更准确的概率。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PTSD-创伤后应激障碍</title>
      <link href="/2023/03/29/2023-3-29ptsd/"/>
      <url>/2023/03/29/2023-3-29ptsd/</url>
      
        <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>创伤后应激障碍（ PTSD）是指个体经历、目睹或遭遇到一个或多个涉及自身或他人的实际死亡，或受到死亡的威胁，或严重的受伤，或躯体完整性受到威胁后，所导致的个体延迟出现和持续存在的精神障碍。</p><span id="more"></span><h1 id="症状"><a href="#症状" class="headerlink" title="症状"></a>症状</h1><p>人们在经历过创伤事件后，通常会出现以下几种症状：</p><ul><li><p>高度警觉（Hyper-arousal）<br>这是一种神经紧张的状况，经受过创伤事件的人会非常敏感。他们会因为一点“风吹草动”就非常害怕。人们常说的：一朝被蛇咬十年怕井绳，就是这种状态。科学家研究发现，这种症状的确和人的“神经”有关系。经历过创伤事件后，人们的神经敏感阈会发生改变，以至于神经敏感性提高。</p></li><li><p>回避性症状（Avoidance ）<br>经历过创伤事件的人一方面会回避参加各类社交活动；另一方面，他们也会主动的回避与创伤事件有关的记忆、思想、感觉或创伤性事件发生的地点等。</p></li><li><p>认知和情绪的负性改变（Negative Alterations in Cognitions and Moods ）<br>经历过创伤事件的人会持续性的产生很大的负性情绪，并且会无法记住创伤性事件的某个方面。比较严重的患者甚至会对自己产生极度负面的认知，例如：经历过战争并目睹战友死亡的人会认为自己的“幸存”是不应该的，认为自己不应该活着。</p></li><li><p>侵入性症状（Intrusion ）<br>这是一种重复性经历创伤事件的症状。重复经历创伤事件的方式有很多种，例如：不断的做噩梦、闪回（Flashback）、强迫性重复 (Repetitive Compulsion)等。</p></li><li><p>闪回（Flashback）<br>它指的是经历过创伤的人会在脑海中，不受自我控制的，反复出现创伤画面的一种现象。经历“闪回”的人会极其痛苦，因为“闪回”不会在特定的时间或者地点出现。也就是说，经历过创伤事件的人，无论在何时何地都有可能重新体验一遍创伤。这会是非常令人恐惧的一件事情，设想一下：如果有人告诉你，在未来的一年中会有一个人对你进行抢劫，但却无法预估时间和地点，那你这一年将会是怎么样的一种体验？很明显，你会担惊受怕的一直担心，并且一直处于惊恐中。</p></li><li><p>强迫性重复（Repetitive Compulsion）<br>是侵入性症状重最严重的一种，它包括思想上和行动上两种形式的重复。经历过创伤的人，一方面会尽量避免回忆或者再次经历创伤，以避免重新体验痛苦的感觉；而另一方面，经历过创伤的人却又会主动的去回忆创伤事件，甚至是用行来重现创伤情景。在他们的潜意识中，希望通过这样的方式重新回到自己“无能为力”的情境中，然后尝试着改变当时的情景，然后让自己变成一个可以控制伤痛发生的、有能力的人。他们其实并不情愿这么做，因为他们必须忍受重新经历创伤所带来的巨大痛苦。然而这种矛盾行为所带来的痛苦，就像症状名字中的“强迫”一样，患者自己并不能控制。</p></li><li><p>伴分离症状（Dissociative）<br>经历过创伤事件的人会失去基本的安全感，严重的甚至会失去对社会的安全感。所以对于他们来说，重新社交，与人建立亲密的关系是很难的一件事情。因而，他们会选择把自己“隔离”起来，同时也是与创伤事件“隔离”起来。他们会选择麻木的，解离（dissociative）的生活方式，或者是干脆把自己关起来不与他人和社会接触。</p></li></ul><p>以上是PTSD的典型症状而非诊断标准，一般状态持续1个月以上，就应当注意是否是PTSD（根据DSM 5）。</p><h1 id="影响"><a href="#影响" class="headerlink" title="影响"></a>影响</h1><p>患有PTSD的人，非常容易因为一些因素触发而进入糟糕的回忆，同时调动起自我的防御机制，以保障自己不受“伤害”。<br>例如：童年有遭受被人冤枉被一群人堵墙角经历的人，容易在成年后，遭受他人误解他之之时，歇斯底里的发脾气，以证明不是自己的错。<br>或许在他人看来他是反应过度，但是他早已经被记忆拉回到曾经的被堵墙角的状态中去。他表现出的情绪并不是对此时此刻遭受刺激的反应，发的脾气也早已不是针对此刻的对方，而是对于当年记忆中的场景的反应。他的血压，肾上腺素，肌肉只是对记忆中场景的重现。甚至不由他主观所控制。等他冷静下来之后，才会发觉似乎是有些过激了。但很快就会给自己找原因为自己的行为的正当性做辩护。因为反对自己&#x3D;伤害自己。<br>这样的人久而久之会有人格性障碍，阻碍社会关系的正常建立。并且如果不能得到缓解，情绪的不稳定会严重影响到孩子，让悲剧“遗传”下去。</p><p>对伤害拥有记忆并且做出反应是生物保护自己的原始本能，正是由于这种反应的存在，才让人类从残酷的自然环境中幸存下来。然而，时至今日，人类个体保有这种应激机制弊大于利，会严重影响到个人的幸福感。阻碍人格的成长和发展。</p><p>据我观测，患有PTSD的人数在总群体的比重不低，并且大多数不能得到有效的治疗，只能随着时间让创伤缓慢恢复，且往往恢复不到受刺激之前。所以，当突然有一些人在面对一些事时，突然做出意料之外的过激反应时，不要觉得他不可理喻。或许只是因为他经历过什么现在只是一个病人而已。</p>]]></content>
      
      
      <categories>
          
          <category> 心理学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心理学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域名到期了</title>
      <link href="/2023/02/04/2023-02-04%E5%9F%9F%E5%90%8D%E5%88%B0%E6%9C%9F%E4%BA%86/"/>
      <url>/2023/02/04/2023-02-04%E5%9F%9F%E5%90%8D%E5%88%B0%E6%9C%9F%E4%BA%86/</url>
      
        <content type="html"><![CDATA[<p>突然发现博客上不去了，检查一看才发现是域名到期了。<br>这个域名是5年前随便选的，不知不觉已经过去了5年。<br>……<br>5年发生了许多的事，现在应该很少有人玩博客了吧。<br>不过思考再三，还是决定续个费留下这片清净之地。<br>续域名的费用也上涨了2倍，通货膨胀的直接体现了。<br>懂得了人生无常，也不再追求诸事顺心。<br>只希望未来的人生，多一些有趣的人和事。</p><p>——栖木</p><span id="more"></span><p><img src="/2023/02/04/2023-02-04%E5%9F%9F%E5%90%8D%E5%88%B0%E6%9C%9F%E4%BA%86/1.jpg" alt="栖木"></p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂记</title>
      <link href="/2023/01/23/2023-1-23%E6%9D%82%E8%AE%B0/"/>
      <url>/2023/01/23/2023-1-23%E6%9D%82%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>运动是绝对的，静止是相对的。<br>万物不断发生变化，唯有变化是永恒。</p><span id="more"></span><p>人们追求永恒，永恒的生命，永恒的权利，永恒的财富，永恒的爱情。很可惜得到的注定只有无尽的痛苦。<br>物质世界由命运之力牵引，沿着“道”运转，是不随个人的主观意志影响。<br>我猜想，如果人具自由意识，那么精神的维度是比肉体高的，肉体遵循天道，但精神应当不受其束缚。<br>如果宇宙是个封闭的系统，那么搭乘着灵魂的肉体，即便分离也终有重逢的一天。<br>可惜现有物理学观测，宇宙是在不断膨胀，可能最终走向热寂。或许未来的分别就是永恒。</p>]]></content>
      
      
      <categories>
          
          <category> 哲学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 胡思乱想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>经济制度的思考</title>
      <link href="/2023/01/17/2023-01-17%E7%BB%8F%E6%B5%8E%E5%88%B6%E5%BA%A6%E6%80%9D%E8%80%83/"/>
      <url>/2023/01/17/2023-01-17%E7%BB%8F%E6%B5%8E%E5%88%B6%E5%BA%A6%E6%80%9D%E8%80%83/</url>
      
        <content type="html"><![CDATA[<h1 id="两种经济形势："><a href="#两种经济形势：" class="headerlink" title="两种经济形势："></a>两种经济形势：</h1><ol><li>计划经济(你的东西他人说了算)</li><li>市场经济(你的东西你说了算)</li></ol><h1 id="三种基本经济制度"><a href="#三种基本经济制度" class="headerlink" title="三种基本经济制度"></a>三种基本经济制度</h1><ol><li>公有制(代表国家:前苏联)</li><li>私有制(代表国家:瑞典)</li><li>公私混合制(代表国家:南斯拉夫)</li></ol><p>公有制相对于计划经济是手段，<code>计划经济相对于公有制是目的</code> —— 人为干预<br>市场经济是私有制社会的产物，私有制社会决定经济的私有性 —— 自然发展</p><p>因为出现市场失灵的情况，所以才推出计划经济的概念</p><span id="more"></span><h2 id="公有制"><a href="#公有制" class="headerlink" title="公有制"></a>公有制</h2><p>就是生产资料收归政府，所有人都听从政府的安排工作，并且听从政府分配。反对个体自由，推崇集体主义。<br>优点：<br>  集中力量办事<br>  照顾更广泛大众的利益<br>缺点：<br>  容易产生极权和腐败<br>  个人权利被忽略<br>  不利于促进个人奋斗和创新</p><h2 id="私有制"><a href="#私有制" class="headerlink" title="私有制"></a>私有制</h2><p>就是个人拥有生产资料，通过市场进行产品定价，物资分配。重视个人权利，私有财产，自由企业，和最小政府。<br>优点：<br>  促进社会生产力的大力发展<br>  提高人们的科学创造力和奋斗精神<br>  充分调动人的主观能动性，以及劳动热忱<br>  可最全面、最完善地实现自我以及自我价值，保证社会价值的全面升值<br>  私有财产神圣不可侵犯<br>缺点：<br>  个体容易形成唯利是图的价值观<br>  贫富分化</p><h2 id="公私混合制"><a href="#公私混合制" class="headerlink" title="公私混合制"></a>公私混合制</h2><p>介于两者之间，偏向于某一制度。</p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我不是我</title>
      <link href="/2023/01/08/2023-1-8%E6%88%91%E4%B8%8D%E6%98%AF%E6%88%91/"/>
      <url>/2023/01/08/2023-1-8%E6%88%91%E4%B8%8D%E6%98%AF%E6%88%91/</url>
      
        <content type="html"><![CDATA[<p>最近新看了两本书，彻底改变了我的世界观。一本是《臣服实验》，一本是《不羁的灵魂》。这两本书都是美国作家迈克•A. 辛格写的。</p><p>他的人生非常精彩，年轻是是经济学博士，也是位瑜伽披头士，还和朋友建立的房地产公司，又创建了医疗软件公司，后来公司还上市帮他成为了亿万富翁。看似非常精彩的人生全都靠冥想这个习惯联系起来。他用四十年的时间证明了一件事<code>万物皆有季,天下目标皆有时。向生命臣服就是通向自我实现的道路,毫无疑问它是有用的。</code></p><span id="more"></span><blockquote><p>当我快定放手自我、将生命奉献于服务眼前展现的一切时, 每年的收人还不足 5000 美元。以爱而筑成立后,它的年收人从几万美元增至几十万美元。在个性编程成立后,销售额和版税收人很快达到几百万,然后是几千万美元,如今我处理的已是上亿的资产了。让我感动的并不是金钱,而是主导我命运的隐形之手。——《臣服实验》</p></blockquote><p>如果说《臣服实验》是他的自传，是外在。那么《不羁的灵魂》就是这些年的他的内心活动，是他的世界观和方法论，是内在。</p><p>在《不羁的灵魂》这本书中他深刻的思考了自我意识的起源。遇到问题时的我们的内心变化。并且以全新的视角去解释这些问题。<br>例如：<code>你不是外部世界。你是那个在内心里看着这个外部世界的人。</code>这样的观点就非常具有哲学启发性。从而为我对接下来对佛，道，密宗等的研究提供了兴趣与助力。</p><p>我不是我，这个躯壳并不是我。那么无论发生在这个身体上的所有，包括伤害，痛苦，还是肉体的愉悦，都仅仅是我这个主体接收到的一个能量而已。他们并不能真正的伤害到我，而唯有之前的经历所造成的行业会影响到我的能量。过分沉溺于肉体，会让我误以为肉体就是我。我自然会因为只在此山中而看不清真正的东，为世间的生老病死，悲欢离合而心里憔悴。那真是一念嗔心起，百万障门开。成为那<code>迷失的灵魂</code>。</p><p>我学会了冥想。同时我感觉这个世界虽依旧是那个世界，但在我眼中完全不一样了。</p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>政治体系的思考</title>
      <link href="/2022/12/17/2022-12-17%E6%94%BF%E6%B2%BB%E4%BD%93%E7%B3%BB/"/>
      <url>/2022/12/17/2022-12-17%E6%94%BF%E6%B2%BB%E4%BD%93%E7%B3%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="三种基本政体"><a href="#三种基本政体" class="headerlink" title="三种基本政体"></a>三种基本政体</h1><p>人类历史出现过无数中政体，但如果深加思考可以将其分为如下的三种基本政体：</p><ol><li>君主制：君主一人掌权，多数人获益。</li><li>贵族制：少数人掌权，多数人获益。</li><li>共和制：多数人掌权，多数人获益。</li></ol><h1 id="三种基本政体腐败后的形式"><a href="#三种基本政体腐败后的形式" class="headerlink" title="三种基本政体腐败后的形式"></a>三种基本政体腐败后的形式</h1><p>柏拉图的哲学认为人类历经过的许多事，事实上在出现前已经有一个先念的概念存在于彼岸世界，但彼岸世界的所有事物都不是完美的，有缺陷的，是堕落的产物。人类生活最高理想是和彼岸世界的先进概念组合才能进入理想状态。现实和理想有差异，所以政体也是这样。每一种政体都对应着其腐败后的状态。<br><img src="/2022/12/17/2022-12-17%E6%94%BF%E6%B2%BB%E4%BD%93%E7%B3%BB/1.png" alt="栖木"></p><span id="more"></span><ol><li>僭主制：僭主一人掌权，少数人获益。</li><li>寡头制：少数人掌权，少数人获益。</li><li>暴民制：多数人掌权，少数人获益。</li></ol><p>僭主制的产生是由于   </p><ol><li>君主不再是为了公众利益而是为了一己私利进行统治时，君主制就会腐化成了僭主制</li><li>君权的没落，往往是由于血脉传承出现问题，例如后代能力底下或者没有后代，野心家通过政变或革命一人独享权力。</li></ol><p>寡头制的产生是由于<br>精英贵族不再心系国家、公正清廉，而是中饱私囊、垄断官爵时，贵族制也就堕落成了寡头制。此时王室贵族不愿再归政于王，增大的利益矛盾导致贵族们各自分家，各自为政，各自霸占资源。</p><p>暴民制的产生是由于<br>大量公民不再为公众利益而联合执政，政权落到底层穷人手中，并专门用来为他们服务时，共和制就转化成暴民制。亚里士多德说：“暴民制是一群贫民掌权的统治”，在这种制度下，杀富济贫、平均主义、践踏法制成为普遍现象。</p><p>我认为每种政体都不完美，都各有优缺点。<br>执行效率来说：君主制 &gt; 贵族制 &gt; 共和制<br>对抗腐败的稳定性来说：共和制 &gt; 贵族制 &gt; 君主制</p><p>君主制，对君主要求极高。一旦君主才能不能胜任，就会发生腐败。但若君主贤能，由于效率最高，往往能迅速发展后平定四方。历史上即便是僭主制的君主，在中央集权的加持下，也能在生产力低下的古代建立了很多奇观。这是民主制不可想象的。<br>贵族制，既没有君主制那么不稳定，也比共和制的效率高一些。<br>共和制，要求社会中精英占比要大，否则极容易发生乌合之众效应，因为民主反应的是大多数人的平均智商。而大多数人往往是短视的，只看中自己眼前的利益。</p><h1 id="政治体制间的相互转化"><a href="#政治体制间的相互转化" class="headerlink" title="政治体制间的相互转化"></a>政治体制间的相互转化</h1><p>君主、贵族、共和三善制，僭主、寡头、民主三恶制；而这六种政治制度之间又有着混合过渡的制度，和在一定条件下发生相互转化的可能性，这是由其内部属性决定的。<br><img src="/2022/12/17/2022-12-17%E6%94%BF%E6%B2%BB%E4%BD%93%E7%B3%BB/2.png" alt="栖木"><br>例如君主制由于不稳定，极容易变为贵族制或僭主制。僭主制被消灭可能形成贵族制，寡头制，也可能成为共和制。若统治的好也可能成为新的君主。寡头在自己的土地常常成为新的君主。暴民制往往会被任一制度消灭。</p><p>根据不同的外部环境，一个地区需要有不同的制度。好的统治模式必然要以公众利益为导向。君主制、贵族制和共和制虽然存在差别，但它们所追求的都是维护公众利益，以至善、公正和美德为统治原则，所以并不存在哪种政体更好、哪种更坏。腐败是我们应当避免的，他损害了大多数人的利益。阻碍社会的发展，产生混乱。</p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>地球人口已达80亿</title>
      <link href="/2022/11/16/2022-11-16%E5%9C%B0%E7%90%8380%E4%BA%BF%E4%BA%BA/"/>
      <url>/2022/11/16/2022-11-16%E5%9C%B0%E7%90%8380%E4%BA%BF%E4%BA%BA/</url>
      
        <content type="html"><![CDATA[<p>11月15日，根据统计网站Worldometers实时统计数据，全球人口已超80亿。<br>我猜测数据只是个估计，但与真实人数应该误差不大。</p><p>80亿的人口，注定了会诞生格式各样的文化，信仰，甚至是生活方式。所以我们相信的，遵守的，甚至是我们的认知，可能仅仅是在一个非常小的圈子中。不同的圈子间有不同的世界观，价值观，人生观。甚至存在截然相反的两个群体。所以，我们不需要对他人的信仰产生惊讶，哪怕它是多么的离奇。圈子都是按照自己的内核进行传承和扩张。选择你的信仰即可。当然，你的生活与信仰有直接关系。世界更是无比宽广。如果你讨厌所在的圈子，不必难过，奔跑吧，圈子再大也终有边界。去寻找你心中的月亮。</p><span id="more"></span><p>同时在现有科学技术如此发达的时代，物质理应满足全人类的生存。然而因为圈子的多样性，导致极少数的人占有了绝大多数的财富。这也加剧了世界的割裂和冲突的升级。矛盾无时无刻不在诞生，我们应当学会保护自己的利益，时刻准备为了信仰而战斗。更应当不断学习更新知识和认知，不被谎言和阴谋所欺骗。不做傻瓜。</p><p>最重要的一点，全世界无论是何种人种，何种文化，哪一个国家，如果想让子孙后代生存的更久，让人类这个物种生存的更久。都要尽可能的保护自然环境，可持续发展。虽然我认为这是极其困难的，因为欲望，仇恨和短视总会蒙住人们的双眼，让人们变得暴虐。</p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>what？英国面临世纪崩盘？</title>
      <link href="/2022/10/30/2022-10-30what%EF%BC%9F%E8%8B%B1%E5%9B%BD%E9%9D%A2%E4%B8%B4%E4%B8%96%E7%BA%AA%E5%B4%A9%E7%9B%98%EF%BC%9F/"/>
      <url>/2022/10/30/2022-10-30what%EF%BC%9F%E8%8B%B1%E5%9B%BD%E9%9D%A2%E4%B8%B4%E4%B8%96%E7%BA%AA%E5%B4%A9%E7%9B%98%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>最近英国发生了很多大事，新上任的首相特拉斯仅上位45天就光速下台，英镑，英国国债，股市全线暴跌。英镑兑美元跌到了历史最低1.03:1。甚至养老金面临巨大危机。我认为这次危机是一个非常好的案例，尝试探究一个奇葩的经济政策，搭配上无情而复杂的金融市场，如何演变为英国的雷曼时刻。</p><span id="more"></span><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>2022年，俄乌战争导致天然气，化石能源价格高起，影响最大的是欧洲诸国。英国受之影响，出现了严重的通货膨胀。同时美国由于连续的EQ，也发生了通胀，开始了加息之路。</p><h1 id="央行的紧缩和政府的宽松"><a href="#央行的紧缩和政府的宽松" class="headerlink" title="央行的紧缩和政府的宽松"></a>央行的紧缩和政府的宽松</h1><p>英国失业率很低仅有3%左右，英国央行为缓解通胀，连续7次加息。冒着抑制经济增长的危险来控制通胀。<br>特拉斯政府为刺激经济实行能源补贴(1000亿)，和减税政策(预计450亿)。奇葩的是收入越高的人减税越多。<br><img src="/2022/10/30/2022-10-30what%EF%BC%9F%E8%8B%B1%E5%9B%BD%E9%9D%A2%E4%B8%B4%E4%B8%96%E7%BA%AA%E5%B4%A9%E7%9B%98%EF%BC%9F/1.png" alt="栖木"><br>为什么会出现相反的经济政策局面？当权政府主要追求经济增长的短期目的，而央行追求长期物价稳定。</p><h1 id="引发问题"><a href="#引发问题" class="headerlink" title="引发问题"></a>引发问题</h1><p>果然特拉斯的财政政策导致政府债务急速扩张，通胀加剧。投资人对英国失去信心，英镑，英国国债，股市开始下跌。在英国养老金的加持下，终于发生暴跌。</p><h1 id="养老金告急"><a href="#养老金告急" class="headerlink" title="养老金告急"></a>养老金告急</h1><p>英国私人财富占比最高的是英国养老金(约40%)，规模约6万亿英镑。由于养老金的特殊性，养老基金只能投资稳健的资产，例如国债。为了增加收入，英国养老金使用了杠杆。为了确定收益，养老金使用金融衍生产品(主要是LDI liability Driven Investment)对冲风险。</p><p>简单讲就是长期利率越高，养老金越赚钱。为对冲风险，利率越高。金融衍生品需要越多保证金。<br>所以当利率暴涨的时候，养老金需要更多的保障金维持风险的对冲。如果拿不出保证金，国债就会被动平仓。但是市场没有人能够有能力接养老金的卖盘。国债就出现了暴跌。国债暴跌又进一步促进了利率上涨，引发市场恐慌，养老金也出现危机。</p><h1 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h1><p>特拉斯解聘财政部长后不久辞职。<br>英国央行宣布650亿英镑救市。</p>]]></content>
      
      
      <categories>
          
          <category> 交易 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 金融 </tag>
            
            <tag> 经济 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>太阳下没有新鲜事</title>
      <link href="/2022/10/28/2022-10-28%E5%A4%AA%E9%98%B3%E4%B8%8B%E6%B2%A1%E6%9C%89%E6%96%B0%E9%B2%9C%E4%BA%8B/"/>
      <url>/2022/10/28/2022-10-28%E5%A4%AA%E9%98%B3%E4%B8%8B%E6%B2%A1%E6%9C%89%E6%96%B0%E9%B2%9C%E4%BA%8B/</url>
      
        <content type="html"><![CDATA[<p>太阳底下没有新鲜事 —— 出自《圣经》旧约中的训道篇。</p><blockquote><p>原文: What has been is what will be, and what has been done is what will be done, and there is nothing new under the sun. 《Ecclesiastes 1:9》<br>往昔所有的，将来会再有，昔日所行的，将来会再行，太阳下没有新鲜事《训道篇1:9》 </p></blockquote><span id="more"></span><p>交易的时候，我们会发现，历史总是惊人的相似，历史会不断重复已经发生过的事。这也是技术分析的哲学基础。<br>实际上，事物的本质从未发生变化。人类似乎也从不会从历史中汲取一丁点教训。<br>从古至今，虽然社会在不断进步，人们争斗的形式尽管发生了变化，但争斗的目的上并未从本质上发生改变。再加上人的生命如此短暂，常人智慧所能到达的极限会被寿命所限制。所以在人类社会，事物的变化似乎都会在一个范围内。远小于宇宙的变化。也正是如此，人类会对超越极限的事物如此痴迷。</p><p>交易者要知道，太阳底下没有新鲜事。不要总想的例外发生。<br>顺势交易的胜率要高于逆势交易。<br>即便参与趋势反转会有丰厚的回报，但数学期望不一定会高。参与这样的交易只是在满足你赌博时的肾上腺素和胜利时的刺激感。</p>]]></content>
      
      
      <categories>
          
          <category> 交易 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>量子纠缠思考</title>
      <link href="/2022/10/05/2022-10-5%E9%87%8F%E5%AD%90%E7%BA%A0%E7%BC%A0%E6%80%9D%E8%80%83/"/>
      <url>/2022/10/05/2022-10-5%E9%87%8F%E5%AD%90%E7%BA%A0%E7%BC%A0%E6%80%9D%E8%80%83/</url>
      
        <content type="html"><![CDATA[<p><img src="/2022/10/05/2022-10-5%E9%87%8F%E5%AD%90%E7%BA%A0%E7%BC%A0%E6%80%9D%E8%80%83/1.jpg" alt="栖木"><br>2022年诺贝尔物理学奖颁发给了法国科学家阿兰·阿斯佩、美国科学家约翰·克劳泽和奥地利科学家安东·蔡林格三位科学家，他们通过实验验证纠缠光子不遵循贝尔不等式(实验结果大概1&#x2F;4远低于1&#x2F;3)，以证明光子是在观测瞬间坍缩确定信息且另一个纠缠光子随即状态改变，而不存在初始化的设定条件(不满足任一初始条件产生的概率，所以证明为不存在)。<br>实验为超远距离的瞬时量子通讯提供了理论可能。</p><span id="more"></span><h1 id="量子纠缠"><a href="#量子纠缠" class="headerlink" title="量子纠缠"></a>量子纠缠</h1><p>举例说明：两颗向相反方向移动但速率相同的电子为例，即使一颗行至太阳边，一颗行至冥王星边，在如此遥远的距离下，它们仍保有关联性（correlation）；亦即当其中一颗被操作（例如量子测量）而状态发生变化，另一颗也会即时发生相应的状态变化。</p><h1 id="初始剧本"><a href="#初始剧本" class="headerlink" title="初始剧本"></a>初始剧本</h1><p>爱因斯坦否认量子纠缠的存在，因为若存在则说明信息的传递速度大于光速(任何物体运动速度都不应该大于光速)。他认为量子在出发前就被隐含变量赋予了信息。只是看起来量子运动一致而已（实际并未进行通信）。</p><h1 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h1><p>为了证明不存在隐含变量赋予信息，三位科学家进行了实验。<br>简单来说实验步骤是先制造量子纠缠系统。假设有一个总自旋为0的系统，想办法从相反的方向发送两个完全相同的光子。总自旋守恒。所以发射出的光子自旋方向始终相反。<br>然后由ABC三种不同方向偏振片进行测量。<br>假设有初始信息，那么光子穿过偏振片只有8种初始状态：</p><table><thead><tr><th></th><th>A</th><th>B</th><th>C</th></tr></thead><tbody><tr><td>1</td><td>可</td><td>可</td><td>可</td></tr><tr><td>2</td><td>可</td><td>可</td><td>不可</td></tr><tr><td>3</td><td>可</td><td>不可</td><td>可</td></tr><tr><td>4</td><td>不可</td><td>可</td><td>可</td></tr><tr><td>5</td><td>可</td><td>不可</td><td>不可</td></tr><tr><td>6</td><td>不可</td><td>可</td><td>不可</td></tr><tr><td>7</td><td>不可</td><td>不可</td><td>可</td></tr><tr><td>8</td><td>不可</td><td>不可</td><td>不可</td></tr></tbody></table><p>如果用两端用不同的偏振片进行测量，理论上两边通过结果相同的概率应该是1&#x2F;3(2-7)或者大于1&#x2F;3(1 8)。</p><table><thead><tr><th></th><th>A B</th><th>B C</th><th>C A</th></tr></thead><tbody><tr><td>1</td><td>同</td><td>同</td><td>同</td></tr><tr><td>2</td><td>同</td><td>不</td><td>不</td></tr><tr><td>3</td><td>不</td><td>不</td><td>同</td></tr><tr><td>4</td><td>不</td><td>同</td><td>不</td></tr><tr><td>5</td><td>不</td><td>同</td><td>不</td></tr><tr><td>6</td><td>不</td><td>不</td><td>同</td></tr><tr><td>7</td><td>同</td><td>不</td><td>不</td></tr><tr><td>8</td><td>同</td><td>同</td><td>同</td></tr></tbody></table><p>实验结果大约是1&#x2F;4说明不存在隐含变量赋予信息。明光子是在观测瞬间坍缩确定信息且另一个纠缠光子随即状态改变。</p><h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><p>这个实验有个问题，就是光子振幅方向必须在无外力作用下不可变。假设振幅是周期改变方向，那么由于无法精确控制两端距离，测量数据是不准确的。<br>如果实验严谨，哲学上证明宇宙不可分割，因果没有先后而是成对存在。</p>]]></content>
      
      
      <categories>
          
          <category> 物理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 胡思乱想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>排列组合</title>
      <link href="/2022/09/18/2022-9-18%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/"/>
      <url>/2022/09/18/2022-9-18%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/</url>
      
        <content type="html"><![CDATA[<p>复习一下高中的排列组合</p><span id="more"></span><h1 id="分类加法"><a href="#分类加法" class="headerlink" title="分类加法"></a>分类加法</h1><p>完成某件事有n类办法，在第一类中有m1种不同的方法，第二类中有m2种不同的方法，则完成这件事共有 N&#x3D;m1+m2+m3+•••+mn 种不同的方法<br><img src="/2022/09/18/2022-9-18%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/1.png" alt="栖木"></p><h1 id="分步乘法"><a href="#分步乘法" class="headerlink" title="分步乘法"></a>分步乘法</h1><p>完成某件事有n个步骤，在第一个步骤中有m1种不同的方法，在第二个步骤中有m2种不同的方法则完成这件事共有 N&#x3D;m1m2 • … mn种不同的方法<br><img src="/2022/09/18/2022-9-18%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/2.png" alt="栖木"></p><h1 id="排列组合"><a href="#排列组合" class="headerlink" title="排列组合"></a>排列组合</h1><p><img src="/2022/09/18/2022-9-18%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/3.png" alt="栖木"></p><blockquote><p>所以排列数和组合数的区别就是有没有对取出的元素进行排序</p></blockquote><p>例子：a,b,c,d,e 5个取2个。</p><p>如果对取出的数有排列要求则是排列<br>排列数：根据分步乘法，第一步从a，b，c，d，e 5个中选一个有5种。第二步剩下的4种选一个有4种。总共有A52&#x3D;5*4&#x3D;20种。</p><p>如果不要求排序则是组合<br>因为ca和ac是同一种，则需要在排列的基础上除以2（取元素的排列数A22），共有10种。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LTCM(long-term Capital Management)的陨落启示</title>
      <link href="/2022/09/09/2022-9-9long-term%20Management%EF%BC%88LTCM%EF%BC%89%E7%9A%84%E9%99%A8%E8%90%BD/"/>
      <url>/2022/09/09/2022-9-9long-term%20Management%EF%BC%88LTCM%EF%BC%89%E7%9A%84%E9%99%A8%E8%90%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="LTCM简史"><a href="#LTCM简史" class="headerlink" title="LTCM简史"></a>LTCM简史</h1><h2 id="成立"><a href="#成立" class="headerlink" title="成立"></a>成立</h2><p>1990s年华尔街有所著名投行所罗门兄弟(Salomon Brothers 后被花旗银行收购)，当时它最赚钱的部门是固收套利组(Fixed-income Arbitrage Group)，收入占比80%以上。组老大也是当时所罗门兄弟的副主席约翰·梅威瑟(John Meriwether)因为手下交易员违规操作被牵连，被迫辞职后于1994年建立了自己的对冲基金LTCM。<br>总部设在离纽约市不远的格林威治，当时与量子基金、老虎基金、欧米伽基金并称为国际四大“对冲基金”。</p><span id="more"></span><h2 id="阵容豪华"><a href="#阵容豪华" class="headerlink" title="阵容豪华"></a>阵容豪华</h2><p>在梅里的带领下，LTCM积聚了一群“有志之士”：<br>1997年诺贝尔经济学奖得主Robert Merton和Myron Scholes；美国前财政部副部长及联储副主席David Mullis；<br>前所罗门兄弟债券交易部主管Eric Rosenfeld等等。</p><h2 id="投资条件苛刻"><a href="#投资条件苛刻" class="headerlink" title="投资条件苛刻"></a>投资条件苛刻</h2><p>只对超高净值人群开放<br>锁定期：3年<br>收费模式：管理费2%+投资收益25%</p><h2 id="初始资本"><a href="#初始资本" class="headerlink" title="初始资本"></a>初始资本</h2><p>得益于豪华阵容，初始资本就高达12.5亿美金</p><h2 id="历史收益"><a href="#历史收益" class="headerlink" title="历史收益"></a>历史收益</h2><p>1994年——28%<br>1995年——59%<br>1996年——57%<br>1997年——25%</p><h2 id="核心策略"><a href="#核心策略" class="headerlink" title="核心策略"></a>核心策略</h2><p>数学战胜市场<br>收敛交易(Convergence Trade)<br>廉价杠杆(Cheap Leverage)<br>分散风险(Diversification)</p><h2 id="倒塌"><a href="#倒塌" class="headerlink" title="倒塌"></a>倒塌</h2><p>1998年俄罗斯债务违约黑天鹅事件<br>虽然有分散风险的操作，但不同市场中的投资大户是同一波，遇到黑天鹅事件后都扎堆在流动性高，风险低的避险资产，收敛交易敞口增加。因为是杠杆交易，最终暴雷。<br>年初50亿美金缩水至9月底4亿美金。</p><h2 id="收场"><a href="#收场" class="headerlink" title="收场"></a>收场</h2><p>由于牵扯过大，破产会引起系统性危机。<br>14家投行联合注资36亿美金买下了LTCM90%的股份。<br>为了维护市场情绪，美联储紧急降息0.25。</p><h1 id="LTCM启示"><a href="#LTCM启示" class="headerlink" title="LTCM启示"></a>LTCM启示</h1><p>直接原因：死于高杠杆<br>为啥用高杠杆：模型收益率低<br>为了应对杠杆风险：分散完全不同的市场进行投资<br>分散投资为什么失效：<br>虽然模型基本规避风险，但看似不相干的市场，背后的操作者可能是同一投资人。<br>市场是由人组成的，正常情况下，人是理性的。<br>而黑天鹅出现后，人由于恐惧是非理性的。</p><p>过于相信模型，低估了黑天鹅事件的影响力。</p><h1 id="续集"><a href="#续集" class="headerlink" title="续集"></a>续集</h1><p>他们使用的策略不止失败了1998那一次，后来黄奇辅成立了新的基金，用类似的策略，2008又爆仓……<br>原因依然是黑天鹅事件。长期资本平均杠杆40倍。黄杠杆10倍。但由于08年那次金融危机远超98年。所以即便是10倍杠杆依然爆仓了。</p>]]></content>
      
      
      <categories>
          
          <category> 交易 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 金融 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>维克多的交易准则</title>
      <link href="/2022/08/04/2022-8-4%E4%BA%A4%E6%98%93%E5%87%86%E5%88%99/"/>
      <url>/2022/08/04/2022-8-4%E4%BA%A4%E6%98%93%E5%87%86%E5%88%99/</url>
      
        <content type="html"><![CDATA[<p>维克多·斯波朗迪 英文名：Victor Sperandeo<br>专业证券操盘手，华尔街的风云人物，曾被《巴伦周刊》誉为“华尔街终结者”。他做了40年的资金管理人，为hugo安全资产公司和The Professional CTA基金管理投资。1978—1989年，他连续12年投资盈利，没有任何一年亏损；</p><p>自己有幸读到了他的著作《专业投机原理》，亲身做交易后，感慨颇深，受益良多。</p><p>下面是他的19条交易准则的摘录</p><h2 id="交易准则："><a href="#交易准则：" class="headerlink" title="交易准则："></a>交易准则：</h2><ul><li>准则1:根据计划进行交易.并严格遵守计划。</li><li>准则2:顺势交易,”趋势是你的朋友”。</li><li>准则3:在许可的范围内,尽可能采用止损单。</li><li>准则4: 一旦心存怀疑,立即出场!</li></ul><span id="more"></span><ul><li>准则5: 务必要有耐心,不可过度扩张交易。</li><li>准则6: 迅速认赔.让获利头寸持续发展。</li><li>准则7: 不可让获利头寸演变为亏损(或者,尽可能持有必然获利的头寸)</li><li>准则8: 在弱势中买进,在强势中卖出。应该以买进的意愿同等对待卖出</li><li>准则9:在多头市场的初期阶段,应该扮演投资者的角色。在多头市场的后期与空头市场中,应该扮演投机者的角色。</li><li>准则10: 不可摊平亏损——亏损头寸不可加码。</li><li>准则11: 不可仅因价格偏低而买进.不可仅因价格偏高而卖出。</li><li>准则12: 只在流动性高的市场中交易。</li><li>准则13: 在价格变动迅速时,不可建立头寸。</li><li>准则14: 不可根据特珠情报交易。换言之,”顺势交易,而不是顺着朋友的意见”另外,不论你对某只股票或某个市场有多么强烈的感觉,也不可以提供免费的消息或意见。</li><li>准则15: 永远要分析自己的错误。</li><li>准则16: 务必提防”错误的并购消息”。</li><li>准则17: 如果一笔交易的成功与否必须取决于交易指令的正确执行.则不该从事该笔交易。</li><li>准则18: 必须保有自己的交易记录。</li><li>准则19: 了解并尊守法则!</li></ul><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p>《专业投机原理》维克多·斯波朗迪 2010.4版 机械工业出版社</p>]]></content>
      
      
      <categories>
          
          <category> 交易 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 金融 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>盒子A还是盒子B</title>
      <link href="/2022/07/04/2022-7-4%E7%9B%92%E5%AD%90A%E8%BF%98%E6%98%AF%E7%9B%92%E5%AD%90B/"/>
      <url>/2022/07/04/2022-7-4%E7%9B%92%E5%AD%90A%E8%BF%98%E6%98%AF%E7%9B%92%E5%AD%90B/</url>
      
        <content type="html"><![CDATA[<p><img src="/2022/07/04/2022-7-4%E7%9B%92%E5%AD%90A%E8%BF%98%E6%98%AF%E7%9B%92%E5%AD%90B/1.jpg" alt="栖木"><br>如上图，给你两个盒子A和盒子B，A中放着3个蓝色小球一个红色小球，B中只有1个绿色小球。小球除颜色外其他完全相同。<br>现在由你进行选择，你可以从盒子A或着盒子B中抽一个球出来。</p><ul><li>若抽出的是蓝色小球，奖励1000</li><li>若抽出的是绿色小球，奖励700</li><li>若抽出的是红色小球，没有奖金</li></ul><p>请问你是选择抽盒子A还是盒子B？</p><span id="more"></span><p>如果你选择是盒子B，情有可原，相比较抽盒子A可能两手空空，盒子B必赚700更有诱惑力。而且大多数人都是这样选择的。<br>所以<code>你是一个理性的人。但不是一个好的交易员</code>。</p><p>优秀的交易员的选择是盒子A。<br>理由是：盒子A的数学期望是750大于盒子B的700。</p><p>如何理解呢？你可以这样想，你可以把很多个人凑起来一起去抽盒子A，比如100个，这样约有75个人得1000，25个没有得。只需要把奖金全部收集起来，大概每个人都可以分到750块。每人都比选B得的700多。<br>其实放在一个人身上也很容易理解，你每次遇到这个情况都选盒子A，虽然可能这次你一无所得，但只要抽的次数足够多，总比选盒子B的人得到的多。</p><p>大多数人厌恶风险，只喜欢确定收益，甚至甘愿收益降低。所以他们生活中的所有选择都追求确定性，比如找一份薪资不高但却稳定的工作。固然避免风险是正确的，但一味的避免风险，甚至降低期望只会让生活平庸。</p><p>要适当拥抱风险，在胜率和盈亏比合适的情况下勇敢向前。人生才会有惊喜。</p>]]></content>
      
      
      <categories>
          
          <category> 交易 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 金融 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>亮红灯问题的最优策略</title>
      <link href="/2022/06/12/2022-6-12%E4%BA%AE%E7%BA%A2%E7%81%AF%E9%97%AE%E9%A2%98%E7%9A%84%E6%9C%80%E4%BC%98%E7%AD%96%E7%95%A5/"/>
      <url>/2022/06/12/2022-6-12%E4%BA%AE%E7%BA%A2%E7%81%AF%E9%97%AE%E9%A2%98%E7%9A%84%E6%9C%80%E4%BC%98%E7%AD%96%E7%95%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="经典的亮红灯问题"><a href="#经典的亮红灯问题" class="headerlink" title="经典的亮红灯问题"></a>经典的亮红灯问题</h2><blockquote><p>假设已知红灯亮的概率为70%，亮绿灯的概率为30%。如果猜对加1分，猜错扣1分。试问10次精彩竞猜中，猜多少次“红灯亮”才是最优策略？</p></blockquote><span id="more"></span><p>一般人的感性认知是猜7次红灯亮，3次绿灯亮。<br>但实际上真正最优策略是10次全猜红灯。因为存在你猜红灯亮的时候偏偏绿灯亮了。那么绿灯亮的时候你猜的必定是红灯亮，直接双倍扣分。<br>猜10次数学期望是<code>7*10-3*10 = 4</code></p><p>假设亮红灯的概率是P 亮绿灯的概率是（1-P）设X次猜测红灯亮 求数学期望</p><blockquote><p>解：假设你总共猜了  X  次红灯亮，则期望得分  E_1  为：<br>E_1 &#x3D; X * (P * 1 + (1 - P) * (-1))<br>E_1 &#x3D; X * (2P - 1)<br>剩下的  10 - X  次猜绿灯亮，期望得分  E_2  为：<br>E_2 &#x3D; (10 - X) * (P * (-1)+（1 - P）* 1)<br>E_2 &#x3D; (10 - X) * (1 - 2P)<br>因此，总的期望得分  E  为  E_1 + E_2 ：<br>E &#x3D; X * (2P - 1) + (10 - X) * (1 - 2P)<br>E &#x3D; X * (2P - 1) - (10 - X) * (2P - 1)<br>E &#x3D; (2X - 10) * (2P - 1)</p></blockquote><p>即总期望得分是 <code>(2X - 10) * (2P - 1)</code></p><p>可以很容易得出以下结论。</p><p>只要X&gt;5，期望就为正。且X&#x3D;5时，数学期望为0。（5为总猜测次数一半）<br>容易推论出无论猜测多少次，只要一半猜红灯亮，一半猜绿灯亮。数学期望就是0。和红灯绿灯亮的概率无关。<br>如果只做单边交易，即猜红灯时，如果对了得一分，猜错扣一分。猜绿灯时跳过。那么期望就是E_1。<br>X是线性函数，若P&gt;0.5。参与次数越多期望越大。反之，做的越多亏得越多。</p><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><p>这个有什么用呢？<br>对于普通人来说，在牛市中，最佳的策略是全部猜测上涨并且买入后不动，（坚定的选红灯）。此时数学期望最大。而在熊市中则相反，坚定空仓的数学期望最大。一半时间看空，一半时间看多。你的胜率永远是50%。<br>任何分析后的额外操作，都只是为了获取<code>超额利润</code>，都有可能导致更加严重的亏损。</p><h2 id="另一个相似的经典问题"><a href="#另一个相似的经典问题" class="headerlink" title="另一个相似的经典问题"></a>另一个相似的经典问题</h2><blockquote><p>在上一个问题中，假设红灯已经亮了7次，那么剩下3次应如何该猜”红灯亮”还是”绿灯亮”，才能让策略最优？</p></blockquote><p>答案是仍然猜测红灯亮。因为红灯的概率依然是70%。红灯亮的概率依然远大于绿灯亮。用这个逻辑也可以得出永远选红灯亮是最优解。</p><p>7次连续红灯，第8次依然红灯看起来应该不可能。<br>跳出这个思维陷阱的关键是，每次亮灯都是相对独立的事件。相比较8次红灯亮，7次连续红灯从概率上讲就已经是一个极小概率事件了。但是他已从一个小概率事件成为了现实。那么就不应该再用概率去推测这件事是否应该发生，因为他已经发生了。</p><p>那么既然有这种例子的发生，概率似乎没有什么用，小概率的事件依然可以成为现实。依然可能出现100次都是红灯亮的极端情况。<code>因为人类的局限性，我们无法用我们知道的过去确定的例子推测未来事件的走向。我们似乎无法通过总结过去，去预测未来。</code><br>那么概率存在么？<br>换句话说，如果出现100次都是红灯亮，必然在未来要出现30次绿灯亮的事件，这样才能证明总体概率是70%。如果不是这样，那么总体概率就不是70%。概率不存在。</p><p>我的解释是：<br>我认为概率是存在的。只不过人类的生命太过于短暂，你只能观测到有限的样本。过去和未来都不可知。在这个例子中，宇宙亮红灯，亮绿灯事件顺序是确定下来的，但顺序是打乱的，总体上是70%的红灯加30%的绿灯。那么你可能遇到了100次都是绿灯亮的时候，或者100次都是红灯的时候，但并不能证明整体的概率不是70%。</p><p><em>未来既定却不可预测……</em></p><h2 id="应用-1"><a href="#应用-1" class="headerlink" title="应用"></a>应用</h2><p>因为人类的局限性，我们无法用我们知道的过去确定的例子推测未来事件的走向。我们似乎无法通过总结过去，去预测未来。我们应当对我们的认知保持怀疑态度，我们必须从最基础最基础的原理出发探索真相，而不是从表象已发生事件出发。<br>保持谦虚，其实我们一无所知。</p><h3 id="其他YY"><a href="#其他YY" class="headerlink" title="其他YY"></a>其他YY</h3><p>有种方式可以增加预测成功率，虽然仅仅是逻辑上可以，操作上无法实现。<br>就像扑克牌记牌，已经出现了3张Ace，那么只可能再出现1张Ace。<br>如果是简单的2元问题，我们能从原理上判断出正负事件发生的概率（实际上我们不能），又能统计过去所有正发生的次数，那么正事件再次发生的可能性就会越来越低，负事件发生的概率就会越来越高。甚至如果我们能计算出现在事件发生概率（实际上我们不能）。结合概率的变化，我们能推测出事件的终结。</p><p>另一个YY<br>如果未来是无限的并不存在终结，即事件的发生是无穷多，那么1倍的无穷多和3倍的无穷多在数学上应该相等（等势），那为什么3倍的事件要发生的多呢？<br>对，没错。理论上应当是。那么一定存在一种力，我把它叫做命运之力。总是让3倍事件发生的多了。</p>]]></content>
      
      
      <categories>
          
          <category> 交易 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>审计报告中的审计意见</title>
      <link href="/2022/05/10/2022-5-10%E5%AE%A1%E8%AE%A1%E6%8A%A5%E5%91%8A%E4%B8%AD%E7%9A%84%E5%AE%A1%E8%AE%A1%E6%84%8F%E8%A7%81/"/>
      <url>/2022/05/10/2022-5-10%E5%AE%A1%E8%AE%A1%E6%8A%A5%E5%91%8A%E4%B8%AD%E7%9A%84%E5%AE%A1%E8%AE%A1%E6%84%8F%E8%A7%81/</url>
      
        <content type="html"><![CDATA[<p>审计报告中的审计意见主要有四种类型，分别是<code>无保留意见</code>、<code>保留意见</code>、<code>否定意见</code>和<code>无法表示意见</code>。</p><span id="more"></span><h2 id="无保留意见"><a href="#无保留意见" class="headerlink" title="无保留意见"></a>无保留意见</h2><p>无保留意见主要分为两种，<code>标准无保留意见</code>和<code>带有强调事项的无保留意见</code>。</p><p>标准无保留意见即指标准意见，说明审计师认定被审计者编制的财务报表是按照适用的会计师准则的规定编制的，并在所有重大方面公允地反映了被审计者的财务状况、经营成果和现金流量。<br>带有强调事项的无保留意见，说明审计师认为审计者编制的财务报表符合相关会计准则的要求并在所有重大方面公允反映了被审计者的财务状况、经营成果和现金流量，但是存在需要说明的事项，如：对持续经营能力产生重大疑虑及重大不确定事项等。</p><h2 id="保留意见"><a href="#保留意见" class="headerlink" title="保留意见"></a>保留意见</h2><p>保留意见是说明审计师认为财务报表整体是公允的，但是存在影响重大的错误。</p><h2 id="否定意见"><a href="#否定意见" class="headerlink" title="否定意见"></a>否定意见</h2><p>否定意见说明审计师认为财务报表整体是不公允的，或者按照适用的会计准则的规定编制。</p><h2 id="无法表示意见"><a href="#无法表示意见" class="headerlink" title="无法表示意见"></a>无法表示意见</h2><p>无法表示意见说明审计师的审计范围受到了限制，且其可能产生的影响是重大而广泛的，审计师不能获取充分的审计证据。</p><h2 id="对于上述的审计意见类型，会对公司或者投资者造成哪些影响呢？"><a href="#对于上述的审计意见类型，会对公司或者投资者造成哪些影响呢？" class="headerlink" title="对于上述的审计意见类型，会对公司或者投资者造成哪些影响呢？"></a>对于上述的审计意见类型，会对公司或者投资者造成哪些影响呢？</h2><p><code>标准意见</code>是对财务报告的可信赖给予了最高评分。这种意见并不会随着各个公司行业的不同或自身特点的变化而变化。</p><p><code>带有强调事项的无保留意见</code>是对于财务报告的可信赖度仍然是正面的肯定，但是公司或投资者要考虑强调事项段中所描述的不确定性。</p><p><code>保留意见</code>是对于财务报告的可信赖度给出了一定的负面评分，能够反映财务报表所存在的问题和影响程度，从某种程度上也可以反映出管理层和治理层对于这类问题的处理态度和解决问题方式。所以，投资者在遇到该类审计意见时，需要谨慎。</p><p><code>否定意见</code>是对于财务报表的可信赖度亮出了“红灯”，告诉投资者应该放弃该公司的投资。</p><p><code>无法表示意见</code>是对财务报表的可信赖投出了“弃权票”，投资应该也要放弃该公司的投资。</p><p>所以有些企业为了有更好的审计意见类型，可能会购买审计意见。但是根据业内人士透露，购买审计意见的现象的确存在，一般小型审计所会做。而这种“购买”不会涉及到明码标价，一般只会让事务所出具对上市公司有利的意见，具体操作是当事务所发现上市公司有问题时，会计师通常会以无法获得相应适当和充足的审计证据，对相关事项出具保留意见，为上市公司留下余地。</p><p>而审计意见中的风险提示，一般有以下几点：</p><ol><li>持续经营能力存疑；</li><li>涉及重大判断的事项；</li><li>缺乏商业合理性的重大交易。<br>所以，投资人若是想要进行查看审计报告里的审计意见进行投资，不能仅看一份，若有需要还要查看上一年的审计意见。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 交易 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 金融 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>理解会计报表</title>
      <link href="/2022/05/10/2022-5-10%E4%BC%9A%E8%AE%A1%E6%8A%A5%E8%A1%A8%E7%9A%84%E6%9C%AC%E8%B4%A8/"/>
      <url>/2022/05/10/2022-5-10%E4%BC%9A%E8%AE%A1%E6%8A%A5%E8%A1%A8%E7%9A%84%E6%9C%AC%E8%B4%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="理解会计报表"><a href="#理解会计报表" class="headerlink" title="理解会计报表"></a>理解会计报表</h1><h2 id="会计的基本程序：确认-计量-记录-报告。"><a href="#会计的基本程序：确认-计量-记录-报告。" class="headerlink" title="会计的基本程序：确认 计量 记录 报告。"></a>会计的基本程序：<code>确认</code> <code>计量</code> <code>记录</code> <code>报告</code>。</h2><span id="more"></span><p>设想一下你现在需要记账，重点需要记什么？<br>你现在有房子，车子，钱……<br>你还有一堆债务，比如张三欠你的钱，李四借了你的车没还，你欠银行或者支付宝的钱。</p><p>第一步确认，就是你要把这堆数据根据属性确定它的分类，将什么东西作为什么。<br>比如房子，车子——固定资产<br>钱——货币资金<br>…</p><p>第二步计量，计量是用货币或其他量度单位计量各项经济业务及其结果的过程（一般是货币）<br>，就是你要弄清这些东西都值多少钱记下来。</p><p>第三步记录，就是照实记录下来</p><p>四步报告， 将结果统计出来并且总结现阶段的财务状况</p><p>所以很容易理解会计的流程。</p><h2 id="借贷记账法"><a href="#借贷记账法" class="headerlink" title="借贷记账法"></a>借贷记账法</h2><p>日常记账的时候，你不会这么记电脑——10000，你一般这么记花费10000块买了电脑。因为你想要财物的流向。</p><p>日常会计也是这么记得。<br>凡是到你这里来（流入）的财物就统统记做<code>借</code>，凡是从你这离开（流出）的财物就记作<code>贷</code>。</p><p>上面的例子就可以记作：<br>借：电脑1台<br>贷：10000</p><p>同样的张三欠你钱200<br>你要这么记</p><p>贷：货币资金 200 （当然如果你是转账，钱在银行，一般记作贷：银行存款）<br>借：应收账款 200</p><p>你发现了没，只要你不出错，借方和贷方的金额理应永远相等。</p><h2 id="三张表"><a href="#三张表" class="headerlink" title="三张表"></a>三张表</h2><p>一般上市公司的会计报表有3张，分别是：<code>资产负债表</code> <code>利润表</code> <code>现金流量表</code>。</p><p>先说资产负债表：资产负债表主要是记录你的资产、负债所有者权益。<br>根据借贷记账法<br>资产：总是流入的，借方<br>负债：总是流出的，贷方<br>所有者权益：总是流出的，贷方</p><p>由于借贷相等，所以：</p><blockquote><p>资产 &#x3D; 负债+所有者权益</p></blockquote><p>怎么理解蹦出来的三个名词</p><p>你可以把公司比作一个单独的人（法人）<br>开始的时候什么也没有，就是0<br>然后股东们注入资本</p><p>在公司的视角，有流入，就记借方，无论流入了什么，不论是现金，还是买了房，买了器材都是资产。<br>那公司失去的是什么呢，公司的所有权，流出记贷方。这个所有权就是所有者权益。<br>负债是未来要还的东西，你可以想象是公司现在暂时借用别人的一些东西，这些东西是流入，所以是借方，现在记到资产中。但在未来得还回去，那么就负债是未来的流出，记做贷方。</p><p>那按道理统计一张表就可以表明公司现在的情况，为什么要三张表？或者说另外两个表有什么作用？</p><p>确实负债表已经可以表明公司的状况了。<br>利润表是讲清所有者权益的变化，可以理解为<code>股东的小账本</code>。</p><p>利润表主要有两个方面构成：<code>费用</code>和<code>收入</code>。<br>费用：使所有者权益减少<br>收入：使所有者权益增加<br>所以作为股东，所有者权益才是一个公司股东应该关心的最核心的东西。</p><p>现金流量表的作用是解决现金和确认收入费用有时间差点问题。</p><p>举个例子，公司生产了一辆汽车。成本1w，卖给张三11w即收入11w。<br>汽车制造每个步骤都要花钱，假设一年一结。<br>张三做的是贷款，收到需要2个星期。那么当下公司只能收到一个张三的借条。</p><p>记账流程是收入-成本&#x3D;所有者权益10w<br>这个借条是流入放入资产，应收账款加11w<br>成本是流出是负债，应付账款加1w</p><p>但是这里有个问题<br>在卖出车的时候实际所有者权益并没有增加啊，是到收回货款的时候才增加的。<br>在造车的时候实际所有者权益也没有减少，是到一年后结账的时候才减少。（简单的例子，剔除工资税）<br>为了记账我们需要<code>提前确认</code>所有者权益。<br>这就出现个时间差的问题。这有什么影响呢？</p><p>所有者权益和现金无关。<br>资产负债表无法表达在短期内有没有足够现金去应付开销。</p><p>而现金很重要。<br>如果把公司比作一辆车，现金就是这辆车的能源。<br>我想知道这辆车的油耗，这辆车的存油。知道这些才能预测他跑多远，跑多快。<br>于是，现金流量表就应需而生。</p><p>会计报表是用来描绘公司的具体经营情况的工具</p>]]></content>
      
      
      <categories>
          
          <category> 交易 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 金融 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>股票软件的坐标使用</title>
      <link href="/2022/04/30/2022-4-30%E8%82%A1%E7%A5%A8%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%9D%90%E6%A0%87%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/04/30/2022-4-30%E8%82%A1%E7%A5%A8%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%9D%90%E6%A0%87%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>一般的电脑行情分析软件的主图坐标都提供多种坐标类型方便我们选择。如：普通坐标、对数坐标、等差坐标、百分比坐标、黄金分割坐标、10%等比坐标、等分坐标。</p><span id="more"></span><ul><li><code>普通坐标</code>：坐标刻度之间的间隔距离与价格成正比。同样的价格在坐标上的距离显示是相等的。</li><li>对数坐标：坐标刻度之间的间隔距离与价格的对数成正比，同样的涨幅或同样的跌幅在坐标上的距离显示是相等的。</li><li>等差坐标：刻度数值线之间的间隔差值相等，是缺省时的坐标。</li><li>百分比坐标：百分比坐标以画面显示的第一天的开盘价为基准，股价表示为与基准的百分比值，显示百分比值的数值线，这对于主图叠加特别有用。</li><li>黄金分割坐标：以画面显示的最高价、最低价为基准，分别显示%分割的数值线，对于分析某波段的压力、支撑价位线有用。<br>10%等比坐标：百分比坐标以画面显示的最后一天的开盘价为基准，显示与基准的10%递增和递减的数值线。</li><li>等分坐标：以画面显示的最高价、最低价为基准，对这个区域N等分，显示分割的数值线，对于分析某波段的压力、支撑价位线有用，等分的参数N可以在系统参数中设置。</li><li><code>半对数坐标</code>：国外的图表分析师大多数使用半对数坐标（也叫做比例或百分比坐标纸）系统分析走势图，因为，半对数坐标纸拥有一定的优点，区别在算术坐标上竖直方向上相同的距离代表相同价格变化数量；半对数坐标纸上表示相同百分比变化。半对数坐标方便了止损指令的设置。一些价格形态在两种坐标纸上基本相同。</li></ul><h2 id="对数坐标和半对数坐标"><a href="#对数坐标和半对数坐标" class="headerlink" title="对数坐标和半对数坐标"></a>对数坐标和半对数坐标</h2><p>对数定义：如果a的x次方等于N，那么数x叫做以a为底N的对数，记作x&#x3D;logaN。其中，a叫做底数，N叫做真数，x叫做对数。<br>对数坐标系中的对数指的是坐标轴上的刻度与原点的距离是用对数表示的。<br>比如，对于以10为底数的对数坐标轴来说，如果某个刻度上标出的值为10(真数)，则该刻度与原点的实际距离为loga10(a为底数，此处为10)也就是1。<br>对数坐标就是xy轴都是对数表示。半对数在股市中一般是说价格轴为对数。</p><h2 id="在Python中，实现对数坐标系和半对数坐标系的设置"><a href="#在Python中，实现对数坐标系和半对数坐标系的设置" class="headerlink" title="在Python中，实现对数坐标系和半对数坐标系的设置"></a>在Python中，实现对数坐标系和半对数坐标系的设置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入要用到的相关包，并设置交互环境</span></span><br><span class="line"></span><br><span class="line">%matplotlib notebook</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制普通坐标系下x和y的关系图像</span></span><br><span class="line"></span><br><span class="line">x = np.array([<span class="number">10</span>,<span class="number">100</span>,<span class="number">1000</span>,<span class="number">10000</span>,<span class="number">100000</span>,<span class="number">1000000</span>])</span><br><span class="line"></span><br><span class="line">y = np.array([<span class="number">0.01</span>,<span class="number">0.1</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">100</span>,<span class="number">1000</span>])</span><br><span class="line"></span><br><span class="line">plt.figure()</span><br><span class="line"></span><br><span class="line">plt.plot(x,y,marker=<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制半对数坐标系下x和y的关系图像</span></span><br><span class="line"></span><br><span class="line">plt.figure()</span><br><span class="line"></span><br><span class="line">plt.plot(x,y,marker=<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.semilogx()    <span class="comment"># 将x轴设置为对数坐标轴(semilogx()默认以10为底数，这意味着x轴上的每单位刻度的大小为10)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制对数坐标系下x和y的关系图像</span></span><br><span class="line"></span><br><span class="line">plt.figure()</span><br><span class="line"></span><br><span class="line">plt.plot(x,y,marker=<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.semilogx()    <span class="comment"># 将x轴设置为对数坐标轴</span></span><br><span class="line"></span><br><span class="line">plt.semilogy()    <span class="comment"># 将y轴设置为对数坐标轴</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2022/04/30/2022-4-30%E8%82%A1%E7%A5%A8%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%9D%90%E6%A0%87%E4%BD%BF%E7%94%A8/1.png" alt="栖木"><br><img src="/2022/04/30/2022-4-30%E8%82%A1%E7%A5%A8%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%9D%90%E6%A0%87%E4%BD%BF%E7%94%A8/2.png" alt="栖木"><br><img src="/2022/04/30/2022-4-30%E8%82%A1%E7%A5%A8%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%9D%90%E6%A0%87%E4%BD%BF%E7%94%A8/3.png" alt="栖木"></p><h2 id="趋势线投射在普通或线性坐标中与投射在对数或比例坐标中有何区别？"><a href="#趋势线投射在普通或线性坐标中与投射在对数或比例坐标中有何区别？" class="headerlink" title="趋势线投射在普通或线性坐标中与投射在对数或比例坐标中有何区别？"></a>趋势线投射在普通或线性坐标中与投射在对数或比例坐标中有何区别？</h2><p>线性坐标纸上形成的一系列相当直的上倾线的点，当转换到半对数坐标纸上时，形成一条曲线,曲线首先是急剧上升然后渐渐变圆结束.而且在半对数坐标纸上形成一条直线的点。在线性坐标纸上会形成一条加速曲线，投射的越远,曲线倾斜得越厉越陡.事实上。确定细小趋势时这种差别不是很重要，因为细小趋势很少运动到足够远；以至于两种坐标的差异开始有限。垂直型的中等移动情况也相同；如果是一轮长期而强劲的中等趋势，这种差异会变得明显。会在时间和最后趋势线穿透水平上造成相当大的差别；这是不少分析者用半对数坐标纸来作技术分析图的主要原因。 我们熟悉的证券走势图都要使用坐标系统，走势的形状是交易数据的痕迹，算术坐标在高价位会失真，用电脑分析图表虽然方便，但是也有局限，数据太长的走势图，在大脑上我们可以缩小分析，在电脑上，靠近最近的图表比过去的图表清晰，所以就有人用百分比、黄金分割、对数坐标来分析。 普通坐标的刻度之间的间隔距离与价格成正比。在普通坐标系中，所有当日涨跌相等的 K 线长度是一样的。比如所有自开盘至收盘上涨 1元钱的 K线具有同样的长度。但是，在对数坐标系中，坐标刻度之间的间隔距离与价格的对数成正比。即当日涨跌幅（ % ）相等的<br>K线才具有同样的长度。</p><p>如：自开盘至收盘上涨 10% 的 K线在对数坐标中长度是一样的。 </p><h2 id="普通坐标及对数坐标画线的注意事项"><a href="#普通坐标及对数坐标画线的注意事项" class="headerlink" title="普通坐标及对数坐标画线的注意事项"></a>普通坐标及对数坐标画线的注意事项</h2><ol><li>画直线画直线必须用对数坐标为什么要用对数坐标？因为普通坐标表示的是价格变化的绝对值，即今天比昨天涨了多少点，而对数坐标表示的是价格变化的相对强度，即今天比昨天涨了%几。通常情况下，只有在对数坐标上才能看到平行的通道线（比较直观），而在普通坐标上的通道线并不是直线，实际是2个指数函数，是曲线。</li><li>画黄金分割线做水平黄金分割线一定要用普通坐标，如果用对数坐标的话，做出的是对数坐标的黄金分割，而不是价格的黄金分割。（转载自互联网）</li></ol>]]></content>
      
      
      <categories>
          
          <category> 交易 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 金融 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>筹码峰理论</title>
      <link href="/2022/04/18/2022-4-18%E7%AD%B9%E7%A0%81%E5%B3%B0%E7%90%86%E8%AE%BA/"/>
      <url>/2022/04/18/2022-4-18%E7%AD%B9%E7%A0%81%E5%B3%B0%E7%90%86%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p><code>筹码分布</code>就是将历史上在每个价位成交的量叠加起来，并以此来判断当前市场上所有流通股的<code>持仓成本</code>。</p><span id="more"></span><p>当然历史上成交中的一部分会在后面的交易日中被抛出，也就是说不能简单地将以前的成交累积到现在，而应该有一定的<code>衰减</code>。这个<code>衰减的比例</code>也就是每天的<code>换手率</code>。<br>&#42;<br>比如说，1000万的盘子，前天均价为10元，成交量为200万，也就是20%换手率；昨天以均价11元又成交300万，也就是30%换手率；那前天的200万成交量怎么样了呢？成本分析假定，前天的200万在昨天也以11元被30%换手了，那么，前天以10元成交的成交量还剩了200x(1-30%)&#x3D;140万；若今天以均价12元又成交了400万，同理可算，现在的筹码分布是：10元筹码为200x(1-30%)x(1-40%)&#x3D;84万，11元的筹码为300x(1-40%)&#x3D;180万，12元的筹码是400万。</p><h2 id="上面例子作为指标缺点：仅仅只是单纯的假设每个价位换手量相同，实际上有些价位的客户没有换手比如套牢盘，比如低位建仓的。所以需要添加参数消除误差"><a href="#上面例子作为指标缺点：仅仅只是单纯的假设每个价位换手量相同，实际上有些价位的客户没有换手比如套牢盘，比如低位建仓的。所以需要添加参数消除误差" class="headerlink" title="上面例子作为指标缺点：仅仅只是单纯的假设每个价位换手量相同，实际上有些价位的客户没有换手比如套牢盘，比如低位建仓的。所以需要添加参数消除误差"></a><em>上面例子作为指标缺点：仅仅只是单纯的假设每个价位换手量相同，实际上有些价位的客户没有换手比如套牢盘，比如低位建仓的。所以需要添加参数消除误差</em></h2><h1 id="使用指南"><a href="#使用指南" class="headerlink" title="使用指南"></a>使用指南</h1><p>研究筹码最关键的就是研究持仓成本。一轮行情发展都是由成本转换开始的，又因成本转换而结束。什么是成本转换呢？形象地说，成本转换就是筹码搬家，是指持仓筹码由一个价位向另一个价位搬运的过程；它不仅仅是股价的转换，更重要的是持仓筹码数量的转换。股票的走势在表象上体现了股价的变化，而其内在的本质却体现了持仓成本的转换。要理解这一点，就必须对一轮行情进行过程分析。  可以说，一轮行情的跌宕起伏是与庄家的行为密不可分的。庄家行为最本质的体现是对做庄股票持仓成本的控制。如同商品交易，从低价位买进，在高价位卖出，才会产生利润。庄家的行为与商品交易有相同之处，但决不是简单的类似；它比商品交易的低买高卖有着更加丰富的内涵，它是庄家行为和市场行为的高度体现。</p><p>一轮行情主要由三个阶段构成：<code>吸筹</code>阶段、<code>拉升</code>阶段和<code>派发</code>阶段。 </p><p><code>吸筹</code>阶段的主要任务是<code>在低位大量买进股票</code>。吸筹是否充分，庄家持仓量的多少对其做盘有着极为重要的意义：</p><blockquote><p>其一、持仓量决定了其利润量；筹码越多，利润实现量越大；<br>其二、持仓量决定了其控盘程度；吸筹筹码越多，市场筹码越少，庄家对股票的控制能力越强。同时，在吸筹阶段也常伴随着洗盘过程，迫使上一轮行情高位套牢者不断地割肉出局，庄家才能在低位吸筹承接。</p></blockquote><p>其实，庄家吸筹的过程就是一个筹码换手的过程；在这个过程中，庄家为买方，股民为卖方。只有在低位充分完成了筹码换手，吸筹阶段才会结束，发动上攻行情的条件才趋于成熟。庄家的吸筹区域就是其持有股票的成本区域。<br><code>拉升</code>阶段的主要任务是<code>使股价脱离庄家吸筹成本区</code>，打开利润空间。在此过程中，庄家用部分筹码打压做盘，同时又承接抛压筹码，但其大部分筹码仍按兵不动地留在了吸筹区域，等待高位卖出。在拉升过程中，部分股民纷纷追涨，同时部分股民获利回吐；对于做庄技巧较好的庄家，如有大势的配合，庄家只需点上一把火，拉升<code>工作主要由股民自行完成</code>的；其间，庄家主要利用<code>控盘能力调控拉升节奏</code>。在拉升阶段，成交异常活跃，筹码加速转手，各价位的成本分布大小不一。<br><code>派发</code>阶段的主要任务是<code>卖出持仓筹码</code>，实现做庄利润。股价经拉升脱离成本区达到庄家的赢利区域，庄家高位出货的可能性不断增大；随着高位换手的充分，拉升前的低位筹码被上移至高位。而当低位筹码搬家工作完成之时，庄家出货工作也宣告完成；一轮下跌行情了随之降临。<br><code>如何有效地测定现阶段持仓成本的分布状况，是进行成本分析的关键所在</code>。</p><h2 id="在一轮行情的流程中要充分重视二个概念：低位充分换手和高位充分换手。低位充分换手是吸筹阶段完成的标志；高位充分换手是派发阶段完成的标志。它们是拉升和派发的充分必要条件。所谓充分换手就是在一定的价格区域成交高度密集，使分散在各价位上的筹码充分集中在一个主要的价格区域。总之，任何一轮情都是由高位换手到低位换手，再由低位换手到高位换手；这种成本转换的过程不仅是利润实现的过程，也是割肉亏损的过程，从而形成了股票走势的全部历史。这里我们特别讲解一种独特的指标：移动成本分布。该指标通过对股票成交换手的动态分析和研究，透视出股票成本转换的全过程，并形象地标明股票不同时间段不同价位持仓筹码的分布量和变化情况。确切地说它不能称之为指标，因为它没有指标那种确切性，没有指标的交叉、背离及数值信号，它却能以其独特的方式向人们展示股票的成本分布事实，然而这种事实的展示无疑对庄家构成了威胁，却能使投资者有效地研判股票的成本结构，并以此指导自已的实战操作。移动成本分布的移动特性在于，可以选择任意交易日作为测试成本分布的基准点，形象直观地透视出相对于这个测试基准点股票的筹码分布状况；此外，通过不断移动改变测试基准点，动态地透视出各价位持仓量的增减变化，从而全面地透视成本转换的全过程。-移动成本分布的独特之处在于强大的透视性，它可以形象而直观地显示股票的成本结构，并将每一个阶段的持仓成本分布变化毫无保留地展示在我们的面前。如下图所示1、低位吸筹状态。2、高位派发状态。火焰山：如下图所示，显示了N日前的成本分布，显示的色彩是由大红色到金黄色，时间越短，颜色越红，时间越长，颜色越黄。需要特别指出的是，由于各个时间段的筹码叠加的原因，所以其色彩图也是叠加的。暗黄色代表100天之前产生的筹码分布。-淡黄色代表60天之前产生的筹码分布。-蓝色代表30天之前产生的筹码分布。-暗绿色代表20天之前产生的筹码分布。-绿色代表10天前至前20日之间产生的筹码分布。-红色代表1天前至前10日之间产生的筹码分布。-柱状图代表当天最新产生的筹码分布。-一般较小，不容易看见，只有在比较极端的情况下才会较明显。-这样我们就能更加真实地了解到筹码的沉淀状态和活跃程度。完全揭示了庄家吸筹、拉升、派发的整个过程。"><a href="#在一轮行情的流程中要充分重视二个概念：低位充分换手和高位充分换手。低位充分换手是吸筹阶段完成的标志；高位充分换手是派发阶段完成的标志。它们是拉升和派发的充分必要条件。所谓充分换手就是在一定的价格区域成交高度密集，使分散在各价位上的筹码充分集中在一个主要的价格区域。总之，任何一轮情都是由高位换手到低位换手，再由低位换手到高位换手；这种成本转换的过程不仅是利润实现的过程，也是割肉亏损的过程，从而形成了股票走势的全部历史。这里我们特别讲解一种独特的指标：移动成本分布。该指标通过对股票成交换手的动态分析和研究，透视出股票成本转换的全过程，并形象地标明股票不同时间段不同价位持仓筹码的分布量和变化情况。确切地说它不能称之为指标，因为它没有指标那种确切性，没有指标的交叉、背离及数值信号，它却能以其独特的方式向人们展示股票的成本分布事实，然而这种事实的展示无疑对庄家构成了威胁，却能使投资者有效地研判股票的成本结构，并以此指导自已的实战操作。移动成本分布的移动特性在于，可以选择任意交易日作为测试成本分布的基准点，形象直观地透视出相对于这个测试基准点股票的筹码分布状况；此外，通过不断移动改变测试基准点，动态地透视出各价位持仓量的增减变化，从而全面地透视成本转换的全过程。-移动成本分布的独特之处在于强大的透视性，它可以形象而直观地显示股票的成本结构，并将每一个阶段的持仓成本分布变化毫无保留地展示在我们的面前。如下图所示1、低位吸筹状态。2、高位派发状态。火焰山：如下图所示，显示了N日前的成本分布，显示的色彩是由大红色到金黄色，时间越短，颜色越红，时间越长，颜色越黄。需要特别指出的是，由于各个时间段的筹码叠加的原因，所以其色彩图也是叠加的。暗黄色代表100天之前产生的筹码分布。-淡黄色代表60天之前产生的筹码分布。-蓝色代表30天之前产生的筹码分布。-暗绿色代表20天之前产生的筹码分布。-绿色代表10天前至前20日之间产生的筹码分布。-红色代表1天前至前10日之间产生的筹码分布。-柱状图代表当天最新产生的筹码分布。-一般较小，不容易看见，只有在比较极端的情况下才会较明显。-这样我们就能更加真实地了解到筹码的沉淀状态和活跃程度。完全揭示了庄家吸筹、拉升、派发的整个过程。" class="headerlink" title="在一轮行情的流程中要充分重视二个概念：低位充分换手和高位充分换手。低位充分换手是吸筹阶段完成的标志；高位充分换手是派发阶段完成的标志。它们是拉升和派发的充分必要条件。所谓充分换手就是在一定的价格区域成交高度密集，使分散在各价位上的筹码充分集中在一个主要的价格区域。总之，任何一轮情都是由高位换手到低位换手，再由低位换手到高位换手；这种成本转换的过程不仅是利润实现的过程，也是割肉亏损的过程，从而形成了股票走势的全部历史。这里我们特别讲解一种独特的指标：移动成本分布。该指标通过对股票成交换手的动态分析和研究，透视出股票成本转换的全过程，并形象地标明股票不同时间段不同价位持仓筹码的分布量和变化情况。确切地说它不能称之为指标，因为它没有指标那种确切性，没有指标的交叉、背离及数值信号，它却能以其独特的方式向人们展示股票的成本分布事实，然而这种事实的展示无疑对庄家构成了威胁，却能使投资者有效地研判股票的成本结构，并以此指导自已的实战操作。移动成本分布的移动特性在于，可以选择任意交易日作为测试成本分布的基准点，形象直观地透视出相对于这个测试基准点股票的筹码分布状况；此外，通过不断移动改变测试基准点，动态地透视出各价位持仓量的增减变化，从而全面地透视成本转换的全过程。  移动成本分布的独特之处在于强大的透视性，它可以形象而直观地显示股票的成本结构，并将每一个阶段的持仓成本分布变化毫无保留地展示在我们的面前。如下图所示1、低位吸筹状态。2、高位派发状态。火焰山：如下图所示，显示了N日前的成本分布，显示的色彩是由大红色到金黄色，时间越短，颜色越红，时间越长，颜色越黄。需要特别指出的是，由于各个时间段的筹码叠加的原因，所以其色彩图也是叠加的。暗黄色代表100天之前产生的筹码分布。 淡黄色代表60天之前产生的筹码分布。 蓝色代表30天之前产生的筹码分布。 暗绿色代表20天之前产生的筹码分布。 绿色代表10天前至前20日之间产生的筹码分布。 红色代表1天前至前10日之间产生的筹码分布。 柱状图代表当天最新产生的筹码分布。(一般较小，不容易看见，只有在比较极端的情况下才会较明显。)这样我们就能更加真实地了解到筹码的沉淀状态和活跃程度。完全揭示了庄家吸筹、拉升、派发的整个过程。"></a>在一轮行情的流程中要充分重视二个概念：低位充分换手和高位充分换手。<br><code>低位充分换手是吸筹阶段完成的标志</code>；<code>高位充分换手是派发阶段完成的标志</code>。它们是拉升和派发的<code>充分必要条件</code>。所谓充分换手就是在一定的价格区域成交高度密集，使分散在各价位上的筹码充分集中在一个主要的价格区域。总之，任何一轮情都是由高位换手到低位换手，再由低位换手到高位换手；这种成本转换的过程不仅是利润实现的过程，也是割肉亏损的过程，从而形成了股票走势的全部历史。<br>这里我们特别讲解一种独特的指标：<code>移动成本分布</code>。该指标通过对股票成交换手的动态分析和研究，透视出股票成本转换的全过程，并形象地标明股票不同时间段不同价位持仓筹码的分布量和变化情况。确切地说它不能称之为指标，因为它没有指标那种确切性，没有指标的交叉、背离及数值信号，它却能以其独特的方式向人们展示股票的成本分布事实，然而这种事实的展示无疑对庄家构成了威胁，却能使投资者有效地研判股票的成本结构，并以此指导自已的实战操作。移动成本分布的移动特性在于，可以选择任意交易日作为测试成本分布的基准点，形象直观地透视出相对于这个测试基准点股票的筹码分布状况；此外，通过不断移动改变测试基准点，动态地透视出各价位持仓量的增减变化，从而全面地透视成本转换的全过程。  移动成本分布的独特之处在于强大的透视性，它可以形象而直观地显示股票的成本结构，并将每一个阶段的持仓成本分布变化毫无保留地展示在我们的面前。<br>如下图所示<br>1、低位吸筹状态。<br><img src="/2022/04/18/2022-4-18%E7%AD%B9%E7%A0%81%E5%B3%B0%E7%90%86%E8%AE%BA/0.png" alt="栖木"><br>2、高位派发状态。<br><img src="/2022/04/18/2022-4-18%E7%AD%B9%E7%A0%81%E5%B3%B0%E7%90%86%E8%AE%BA/1.png" alt="栖木"><br>火焰山：如下图所示，显示了N日前的成本分布，显示的色彩是由大红色到金黄色，时间越短，颜色越红，时间越长，颜色越黄。需要特别指出的是，由于各个时间段的筹码叠加的原因，所以其色彩图也是叠加的。<br><img src="/2022/04/18/2022-4-18%E7%AD%B9%E7%A0%81%E5%B3%B0%E7%90%86%E8%AE%BA/2.png" alt="栖木"><br>暗黄色代表100天之前产生的筹码分布。 淡黄色代表60天之前产生的筹码分布。 蓝色代表30天之前产生的筹码分布。 暗绿色代表20天之前产生的筹码分布。 绿色代表10天前至前20日之间产生的筹码分布。 红色代表1天前至前10日之间产生的筹码分布。 柱状图代表当天最新产生的筹码分布。(一般较小，不容易看见，只有在比较极端的情况下才会较明显。)<br>这样我们就能更加真实地了解到筹码的沉淀状态和活跃程度。完全揭示了庄家吸筹、拉升、派发的整个过程。</h2><h1 id="修改同花顺CM函数"><a href="#修改同花顺CM函数" class="headerlink" title="修改同花顺CM函数"></a>修改同花顺CM函数</h1><p>含义：用于画筹码成交分布云。<br>例如：CM(0,1,2,0,1000,1,0,0,0,1)<br>参数含义：</p><ol><li>计算总天数：0表示计算全部天数。</li><li>当日成本算法：平均分布为0，三角分布为1。</li><li>精度：一般是2。</li><li>起始位置：0是从当天开始计算,1是从前一天开始算,类推。</li><li>换手：默认为100000%换手。</li><li>计算方式：按成交量计算为1，按成交金额计算为2。</li><li>筹码计算价格限制的最大值：默认为0。</li><li>筹码计算价格限制的最小值：默认为0。</li><li>功能切换：0表示筹码分布和火焰山（自定义天数前的筹码云），1表示活跃度（自定义天数内的筹码云）。</li><li>历史换手衰减系数：默认为1，可取0.1~10之间的数值。</li></ol><h2 id="历史衰减换手系数"><a href="#历史衰减换手系数" class="headerlink" title="历史衰减换手系数"></a>历史衰减换手系数</h2><p>讲这个概念之前，我们先分享两个股票的基本概念。股票上市时分为<code>流通股</code>和<code>非解禁的股票</code>。<br>为什么股票会分为解禁和非解禁呢？在A股市场中，经常会存在这种现象，也就是大股东清仓式减持，试想下，公司的创始股东就己经开始清 仓式减持，那么后续公司的前景可想而知。所以，为了保护中小投资者，防上股票一上市就有人高位套现，所以股票刚上市时，大股东的股份是非解葵的，也就是卖不了。这部分股份会每年解禁一部分。这样就可以有效避免大股东套现。<br>在筹码系统中，只对流通盘的股票进行研究。<br>但是流通盘的股票也会有所不同，我们都知道，每一支股票都有大股东，甚全有的股票大股东占比甚至超过了90%，有的股票十大流通股东占比只有10%不到，正是由于不同股票的沉通股东占比不同，所以，筹码系统，只能按照每个上市公司没有大股东，所有流通盘的股票都可以买卖，夹进行筹码统计。<br>但是，实际上不是这样的，占比超过90%的股票，实际上流通盘，只有10%，也就是假如流道股本10亿的话，只有1亿能够买到，所以这个时候的筹码就是错误的，必须进行历史换手衰减系数的调整，对筹码进行优化。这就是历史换手衰减系数的来源。其计算方法为：<code>历史衰减换手系数=1/(1-十大流通股东占比)</code>。那么假如十大流通股东古比90%的股票，衰减系数就是10，相当手筹码的移动速度放大了10倍，那么筹码分布情况，会有很大不同。</p><p>如果一只股票十大流通股东占比超过30%，就有必要修改指标，低于30%没必要，影响不大。</p>]]></content>
      
      
      <categories>
          
          <category> 交易 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 金融 </tag>
            
            <tag> 指标 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12个乒乓球</title>
      <link href="/2022/04/10/2022-4-1012%E4%B8%AA%E4%B9%92%E4%B9%93%E7%90%83/"/>
      <url>/2022/04/10/2022-4-1012%E4%B8%AA%E4%B9%92%E4%B9%93%E7%90%83/</url>
      
        <content type="html"><![CDATA[<p>看到一个思维题：</p><blockquote><p>12个乒乓球，有一个次品，不知轻重，用台无砝码天平称三次，找出次品，告知轻重。</p></blockquote><span id="more"></span><hr><p>我的解答：</p><h2 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h2><p>一：分3组ABC。每组有四个球。【第一次】称AB会有3种情况：<br>AB相等，次品在C去二。<br>A&gt;B去三。<br>A&lt;B去四。</p><p>二：C分为三组C1.C23.C4，【第二次】取A1C1为一组与C23称比较有三种情况：<br>相等 说明次球在C4，【第三次】随机与任意球称就知道轻重。<br>A1C1&gt;C23 说明C为好球。去五。<br>A1C1&lt;C23 说明C为好球。去六。</p><p>三：A1A2A3B1组E，A4C1C2C3组F，【第二次】称EF有三种情况：<br>相等 说明次球在B2B3B4且轻。去七。<br>E&gt;F 说明次球在A1A2A3且重。去八。<br>E&lt;F 说明次球在A4且重，或是B1且轻，【第三次】称A4C1相等次球就是B1，反之次球就是A4。</p><p>四：A1A2A3B1组E，A4C1C2C3组F，【第二次】称EF有三种情况：<br>相等 说明次球在B2B3B4且重。去九。<br>E&gt;F 说明次球在B1且重，或是A4且轻，【第三次】称A4C1相等次球就是B1，反之次球就是A4。<br>E&lt;F 说明次球在A1A2A3且轻。去十。</p><p>五：【第三次】称C2C3有三种情况：<br>C2&#x3D;C3 次球在C1且重<br>C2&gt;C3 次球在C3且轻<br>C2&lt;C3 次球在C2且轻</p><p>六：【第三次】称C2C3有三种情况：<br>C2&#x3D;C3 次球在C1且轻<br>C2&gt;C3 次球在C2且重<br>C2&lt;C3 次球在C3且重</p><p>七：【第三次】称B2B3有三种情况：<br>B2&#x3D;B3 次球在B4且轻<br>B2&gt;B3 次球在B3且轻<br>B2&lt;B3 次球在B2且轻</p><p>八：【第三次】称A2A3有三种情况：<br>A2&#x3D;A3 次球在A1且重<br>A2&gt;A3 次球在A2且重<br>A2&lt;A3 次球在A3且重</p><p>九：【第三次】称B2B3有三种情况：<br>B2&#x3D;B3 次球在B4且重<br>B2&gt;B3 次球在B2且重<br>B2&lt;B3 次球在B3且重</p><p>十：【第三次】称A2A3有三种情况：<br>A2&#x3D;A3 次球在A1且轻<br>A2&gt;A3 次球在A3且轻<br>A2&lt;A3 次球在A2且轻</p><hr><h2 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h2><p>一：分3组ABC。每组有四个球。【第一次】称AB会有3种情况：<br>AB相等，次品在C去二。<br>A&gt;B去三。<br>A&lt;B去四。</p><p>二：C分为三组C1.C23.C4，【第二次】取A1C1为一组与C23称比较有三种情况：<br>相等 说明次球在C4，【第三次】随机与任意球称就知道轻重。<br>A1C1&gt;C23去五<br>A1C1&lt;C23去六。</p><p>三：A1A2B1组E，A3A4B2组F，B3B4组G，【第二次】称EF有三种情况：<br>相等 说明次球在G且轻。【第三次】称B3B4轻的就是次球。<br>E&gt;F 说明次球在A1A2中重，或是B2且轻，去七。<br>E&lt;F 说明次球在A3A4中重，或是B1且轻，去八。</p><p>四：A1A2B1组E，A3A4B2组F，B3B4组G，【第二次】称EF有三种情况：<br>相等 说明次球在G且重。【第三次】称B3B4重的就是次球。<br>E&gt;F 说明次球在A1A2中轻，或是B2且重，去九。<br>E&lt;F 说明次球在A3A4中轻，或是B1且重，去十。</p><p>五：【第三次】称C2C3有三种情况：<br>C2&#x3D;C3 次球在C1且重<br>C2&gt;C3 次球在C3且轻<br>C2&lt;C3 次球在C2且轻</p><p>六：【第三次】称C2C3有三种情况：<br>C2&#x3D;C3 次球在C1且轻<br>C2&gt;C3 次球在C2且重<br>C2&lt;C3 次球在C3且重</p><p>七：【第三次】称A1和A2有三种情况<br>相等 说明次球在B2且轻<br>A1&gt;A2 次球A1且重<br>A1&lt;A2 次球A2且重</p><p>八：【第三次】称A3和A4有三种情况<br>相等 说明次球在B1且轻<br>A3&gt;A4 次球A3且重<br>A3&lt;A4 次球A4且重</p><p>九：【第三次】称A1和A2有三种情况<br>相等 说明次球在B2且重<br>A1&gt;A2 次球A2且轻<br>A1&lt;A2 次球A1且轻</p><p>十：【第三次】称A3和A4有三种情况<br>相等 说明次球在B1且重<br>A3&gt;A4 次球A4且轻<br>A3&lt;A4 次球A3且轻</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>卓别林《当我开始爱自己》</title>
      <link href="/2022/02/04/%E5%8D%93%E5%88%AB%E6%9E%97%E3%80%8A%E5%BD%93%E6%88%91%E5%BC%80%E5%A7%8B%E7%88%B1%E8%87%AA%E5%B7%B1%E3%80%8B/"/>
      <url>/2022/02/04/%E5%8D%93%E5%88%AB%E6%9E%97%E3%80%8A%E5%BD%93%E6%88%91%E5%BC%80%E5%A7%8B%E7%88%B1%E8%87%AA%E5%B7%B1%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<p>As I began to love myself<br>I found that anguish and emotional suffering are only warning signs that I was living againstmy own truth.<br>Today, I know, this is<br>“AUTHENTICITY”.</p><span id="more"></span><p>当我真正开始爱自己，<br>我才认识到，所有的痛苦和情感的折磨，<br>都只是提醒我：活着，不要违背自己的本心。<br>今天我明白了，这叫做<br>『真实』。</p><p>As I began to love myself<br>I understood how much it can offend somebody as I try to force my desires on this person,<br>even though I knew the time was not right and the person was not ready for it,<br>and even though this person was me.<br>Today I call it<br>“RESPECT”.</p><p>当我真正开始爱自己，<br>我才懂得，把自己的愿望强加于人，<br>是多么的无礼，就算我知道，时机并不成熟，<br>那人也还没有做好准备，<br>就算那个人就是我自己，<br>今天我明白了，这叫做<br>『尊重』。</p><p>As I began to love myself<br>I stopped craving for a different life,<br>and I could see that everything that surrounded me was inviting me to grow.<br>Today I call it<br>“MATURITY”.</p><p>当我开始爱自己，<br>我不再渴求不同的人生，<br>我知道任何发生在我身边的事情，<br>都是对我成长的邀请。<br>如今，我称之为<br>『成熟』。</p><p>As I began to love myself<br>I understood that at any circumstance,<br>I am in the right place at the right time,<br>and everything happens at the exactly right moment,<br>so I could be calm.<br>Today I call it<br>“SELF-CONFIDENCE”.</p><p>当我开始真正爱自己，<br>我才明白，我其实一直都在正确的时间，<br>正确的地方，发生的一切都恰如其分。<br>由此我得以平静。<br>今天我明白了，这叫做<br>『自信』。</p><p>As I began to love myself<br>I quit steeling my own time,<br>and I stopped designing huge projects for the future.<br>Today, I only do what brings me joy and happiness,<br>things I love to do and that make my heart cheer,<br>and I do them in my own way<br>and in my own rhythm.<br>Today I call it<br>“HONESTY”.</p><p>当我开始真正爱自己，<br>我不再牺牲自己的自由时间，<br>不再去勾画什么宏伟的明天。<br>今天我只做有趣和快乐的事，<br>做自己热爱，让心欢喜的事，<br>用我的方式，以我的韵律。<br>今天我明白了，这叫做<br>『单纯』。</p><p>As I began to love myself<br>I freed myself of anything that is no good for my health –<br>food, people, things, situations,<br>and everything that drew me down and away from myself.<br>At first I called this attitude a healthy egoism.<br>Today I know it is<br>“LOVE OF ONESELF”.</p><p>当我开始真正爱自己，<br>我开始远离一切不健康的东西。<br>不论是饮食和人物，还是事情和环境，<br>我远离一切让我远离本真的东西。<br>从前我把这叫做“追求健康的自私自利”，<br>但今天我明白了，这是<br>『自爱』。</p><p>As I began to love myself<br>I quit trying to always be right,<br>and ever since I was wrong less of the time.<br>Today I discovered that is<br>“MODESTY”.</p><p>当我开始真正爱自己，<br>我不再总想着要永远正确，不犯错误。<br>我今天明白了，这叫做<br>『谦逊』。</p><p>As I began to love myself<br>I refused to go on living in the past<br>and worry about the future.<br>Now, I only live for the moment,<br>where EVERYTHING is happening.<br>Today I live each day, day by day,<br>and I call it<br>“PERFECTION”.</p><p>当我开始真正爱自己，<br>我不再继续沉溺于过去，<br>也不再为明天而忧虑，<br>现在我只活在一切正在发生的当下，<br>今天，我活在此时此地，<br>如此日复一日。这就叫<br>『完美』</p><p>As I began to love myself<br>I recognized that my mind can disturb me and it can make me sick.<br>But as I connected it to my heart,<br>my mind became a valuable ally.<br>Today I call this connection<br>WISDOM OF THE HEART.</p><p>当我开始真正爱自己，<br>我明白，我的思虑让我变得贫乏和病态，<br>但当我唤起了心灵的力量，<br>理智就变成了一个重要的伙伴，<br>这种组合我称之为，<br>『心的智慧』</p><p>We no longer need to fear arguments,<br>confrontations or any kind of problems with ourselves or others.<br>Even stars collide,<br>and out of their crashing new worlds are born.<br>Today I know<br>That is LIFE!</p><p>我们无须再害怕自己和他人的分歧，矛盾和问题，<br>因为即使星星有时也会碰在一起，<br>形成新的世界，<br>今天我明白，这就是<br>『生命』</p>]]></content>
      
      
      <categories>
          
          <category> 摘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>孤独</title>
      <link href="/2021/12/24/2021-12-24%E7%99%BE%E5%B9%B4%E5%AD%A4%E7%8B%AC/"/>
      <url>/2021/12/24/2021-12-24%E7%99%BE%E5%B9%B4%E5%AD%A4%E7%8B%AC/</url>
      
        <content type="html"><![CDATA[<p>《百年孤独》中描写，孤独是布恩迪亚家族的家徽，每一个成员都自觉不自觉地佩戴着它。在这个家族中，夫妻之间、父子之间、母女之间、兄弟姐妹之间，没有感情沟通，缺乏信任和了解。尽管很多人为打破孤独进行过种种艰苦的探索，但由于无法找到一种有效的办法把分散的力量统一起来，最后均以失败告终。<br>生命中曾经有过的喧嚣，都将用寂寞来偿还。<br>的确如此。</p><p>人与人间的悲喜并不相通，大多数的人生来就孤独。<br>即便亲如家人，他们爱你，但也不懂你的痛苦，纠结与悲伤。<br>因为这样那样的原因，有些事可以沟通，而有些事即便是沟通也永远无法感同身受。<br>英剧《Crown》中有句台词，孤独是人为什么人要有一个伴侣的原因。<br>但伴侣，也不是全能的。<br>即使是最亲密的伴侣，仍然无法触及你的每一寸灵魂，<br>庆幸，他或许会对你包容，充满耐心，并好奇的尽力去了解你。<br>这已经很值得人心生羡慕。<br>即便存在一个懂你一切之人，也终有一天会逝去。<br>殉情，真是美丽的传说啊。</p><p>曾站在高山上想，在这苍茫大地上，万古洪湖宇宙之中，你是独一无二的一人。<br>但此刻你不孤单，因为有无数先贤也曾站在高山这样想过。</p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>现代货币理论(MMT)</title>
      <link href="/2021/09/25/2021-9-25MMT%E7%8E%B0%E4%BB%A3%E8%B4%A7%E5%B8%81%E7%90%86%E8%AE%BA/"/>
      <url>/2021/09/25/2021-9-25MMT%E7%8E%B0%E4%BB%A3%E8%B4%A7%E5%B8%81%E7%90%86%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<p>近日关注到一种论述称，美国一直在进行的是MMT理论。<br>到底什么是MMT？</p><h1 id="什么是MMT"><a href="#什么是MMT" class="headerlink" title="什么是MMT"></a>什么是MMT</h1><h2 id="现代货币理论-——-MMT-Modern-monetary-theory-是一门非正统的宏观经济学思想流派：“此类经济学派认为货币是公共垄断，政府不应试图每年平衡财政预算，政府的目标应该是根据老百姓的就业情况而调整财政政策，并在需要的时候通过故意的赤字支出来刺激总需求，购买真实资产，促进全面就业。”"><a href="#现代货币理论-——-MMT-Modern-monetary-theory-是一门非正统的宏观经济学思想流派：“此类经济学派认为货币是公共垄断，政府不应试图每年平衡财政预算，政府的目标应该是根据老百姓的就业情况而调整财政政策，并在需要的时候通过故意的赤字支出来刺激总需求，购买真实资产，促进全面就业。”" class="headerlink" title="现代货币理论 —— MMT(Modern monetary theory)是一门非正统的宏观经济学思想流派：“此类经济学派认为货币是公共垄断，政府不应试图每年平衡财政预算，政府的目标应该是根据老百姓的就业情况而调整财政政策，并在需要的时候通过故意的赤字支出来刺激总需求，购买真实资产，促进全面就业。”"></a>现代货币理论 —— MMT(Modern monetary theory)是一门<code>非正统</code>的<code>宏观经济学</code>思想流派：“此类经济学派认为货币是公共垄断，政府不应试图每年平衡财政预算，政府的目标应该是根据老百姓的就业情况而调整财政政策，并在需要的时候通过故意的赤字支出来刺激总需求，购买真实资产，促进全面就业。”</h2><p>简单来说<br>前提：不引发通货膨胀<br>措施：无限印钞按照需要购买市场上的商品<br>目的：刺激经济，降低失业率</p><h1 id="MMT的产生"><a href="#MMT的产生" class="headerlink" title="MMT的产生"></a>MMT的产生</h1><p>讲MMT先要了解<code>货币是如何产生</code>的<br>阶段一：以物换物</p><p>阶段二：一般等价物出现&#x2F;实物货币<br>例如：贝壳</p><span id="more"></span><p>阶段三：金属货币<br>金本位，银本位(主要是古中国)<br>例如：青铜，金，银</p><p>阶段四：政府用等量黄金或者白银作为抵押物发行等面值货币<br>银票</p><p>阶段五：布林顿森林体系<br>随着大航海时代来到，国与国之间的贸易越来越频繁，各国发行的货币有了直接兑换的需求，但还是以其代表的金银作为基准<br>二战后，美国拥有当时全世界四分之三的黄金储备<br>所以美国作为战胜国建立了新的经济秩序，即美元与黄金挂钩（35美元一盎司），各国货币与美元挂钩的布林顿森林体系</p><p>阶段六：信用货币<br>由于美元印刷增量远远大于黄金开采量，美元的数量越来越多于其黄金，布林顿森林体系崩溃<br>各国发行的货币理论上不再与黄金白银等贵金属挂钩，所以现在的货币叫<code>信用货币</code><br>和以前的银行券一样<br>货币发行由两个机构合作承担-<code>中央银行</code>和<code>主权政府</code><br>货币来源有两个<br>1-中央银行接收各种抵押物，印发货币。<br>2-信用扩张，包括政府发行国债，中央银行发行等量货币，银行放贷。<br>PS：按道理布林顿森林体系崩溃后，国际货币体系应当重新回到金本位，为何现在国际交易仍使用美元？<br>主要是因为美元控制了石油，所有石油都需要用美元进行结算，而石油是工业发展必不可少的原料。所以，要发展工业必须要石油，而要石油必须要兑换美元，所以现在国际大宗交易仍然用美元。</p><p>信用货币的背书不是金银实物，而是背后的国家。所以政府拥有了理论上国内无限制的铸币权，可以根据老百姓的就业情况而调整财政政策，调控印钱数量的现代货币理论就产生了</p><h1 id="MMT的逻辑基础"><a href="#MMT的逻辑基础" class="headerlink" title="MMT的逻辑基础"></a>MMT的逻辑基础</h1><p>信用货币来源于<code>权利</code><br>既然货币产生是由于<code>权利</code>，那么在<code>不引发通货膨胀的前提</code>下，国家可以<code>无限印钞</code>来举债<code>刺激经济</code>，<code>降低失业率</code></p><p>通俗点说：只要社会稳定繁荣，政府不仅可以不停拿钱，之前欠的帐一笔勾销，没有记账的必要。反正政府是由人民选举出来的，人民的要求是稳定繁荣，多干点活无所谓（人类社会的一切都由人构成，如果说money is power，那么这些超发的power终将由人民提供。）。</p><h1 id="MMT的问题"><a href="#MMT的问题" class="headerlink" title="MMT的问题"></a>MMT的问题</h1><ol><li><p>动摇信用货币基础<br>从货币的历史来看，信用货币有其原罪<br>金银在一定程度上因为储量有限，产量稳定而成为货币，它的价值是整个人类社会共同赋予认同的<br>而现在的信用货币却是以国家信用作为背书<br>历史告诉我们，国家兴衰，政权交替频繁。所以信用货币的价值原本就在不停波动，更不用说腐败就可以毁灭所有信用<br>维持货币信用原本就很难，关注财政赤字，是为了未来要还归还这部分货币的价值。<br>如果不记账，持有该货币越多的人其实损失的越多，货币就是政府不会归还的白条，该货币的信用，即价值会低到极点。信用货币的基础更加摇摇欲坠。<br>这也是近期虚拟货币逐渐产生的原因。</p></li><li><p>腐败<br>MMT其实是一种强有力中央集权的货币政策，历史为了监督限制政府权力，政治上衍生出三权分立等措施，经济上央行和财政天然具有相互制衡。现在却要将经济权力全部交给政府。鉴于对于我对人性的研究考虑，我并不觉得MMT是一种进步。他只是适用于现在特殊时期的短期经济政策，类似于战争期间特殊经济政策。</p></li><li><p>加剧国际冲突<br>现在世界的经济已经逐渐趋于一体，各个国家更多的属于产业链一环，难以独立存在。一个国家的财政政策对其外贸的影响非常巨大，会通过产业链传导到其他国家，影响其他国家的利益。国际冲突会加剧。</p></li></ol><h1 id="MMT结论"><a href="#MMT结论" class="headerlink" title="MMT结论"></a>MMT结论</h1><p>MMT只是看起来很美好<br>施行困难重重。</p><p>MMT是否能长久存在，需要看助力和阻力的博弈。<br>助力：</p><ol><li>政府<br>对于政府来说一定是倾向于无限印钱来促进经济。这是最简单直接的方式。</li><li>总统<br>政治上，美国是选举制，这个制度本身就决定了要求总统要在其任期内变得更好。所以更倾向于短期效益，印钱会缓解大部分问题。</li></ol><p>阻力：</p><ol><li>劳动力上限<br>无限印钱虽然不一定会引起通货膨胀（货币如果没有流入市场，比如涌入战争，疫情消耗），但一定会引起人民负担加重。</li><li>贫富差距<br>总统的选举由大资本家赞助，所以上台后的政策一定是有所倾斜的。所以导致印钱分配一定不会平均，意味着一定会加贫富差距。</li><li>丧失国际货币地位</li></ol>]]></content>
      
      
      <categories>
          
          <category> 交易 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 金融 </tag>
            
            <tag> 经济 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GDP = C+I+G+(X-M)</title>
      <link href="/2021/09/24/2021-9-24GDP/"/>
      <url>/2021/09/24/2021-9-24GDP/</url>
      
        <content type="html"><![CDATA[<h1 id="一、GDP概念"><a href="#一、GDP概念" class="headerlink" title="一、GDP概念"></a>一、GDP概念</h1><p>GDP（国内生产总值），是一个国家（或地区）所有常住单位在一定时期内生产活动的最终成果。GDP是国民经济核算的核心指标，也是衡量一个国家或地区经济状况和发展水平的重要指标。</p><span id="more"></span><h1 id="二、GDP的计算方法"><a href="#二、GDP的计算方法" class="headerlink" title="二、GDP的计算方法"></a>二、GDP的计算方法</h1><p>GDP的计算方法一般分为3种</p><h2 id="1-生产法"><a href="#1-生产法" class="headerlink" title="1. 生产法"></a>1. 生产法</h2><p>生产法是从生产的角度衡量常住单位在核算期内新创造价值的一种方法，即从国民经济各个部门在核算期内生产的总产品价值中，扣除生产过程中投入的中间产品价值，得到增加值。<br>核算公式为：<code>增加值=总产出-中间投入</code></p><h2 id="2-收入法"><a href="#2-收入法" class="headerlink" title="2. 收入法"></a>2. 收入法</h2><p>收入法核算GDP，就是从收入的角度，把生产要素在生产中所得到的各种收入相加来计算的GDP，即把劳动所得到的工资、土地所有者得到的地租、资本所得到的利息以及企业家才能得到的利润相加来计算GDP。这种方法又叫要素支付法、要素成本法。<br>收入法计算的公式就是：<br><code>GDP =工资+利息+利润+租金+间接税和企业转移支付+折旧</code><br>也可看成是<code>GDP=生产要素的收入+非生产要素的收入</code></p><h2 id="3-支出法"><a href="#3-支出法" class="headerlink" title="3. 支出法"></a>3. 支出法</h2><p>支出法公式<code>GDP = C+I+G+(X-M)</code><br>gross domestic product&#x3D;GDP国内生产总值<br>C是consumption 消费<br>I 是 investment投资<br>G是 government purchases公共消费（政府购买）<br>X-M 是 net export 净出口<br>X 和 M 分别是 export出口 import进口</p><p>理论上三种计算GDP方法计算的最终结果应当一致</p><h1 id="三、GDP-C-I-G-X-M-应用"><a href="#三、GDP-C-I-G-X-M-应用" class="headerlink" title="三、GDP &#x3D; C+I+G+(X-M)应用"></a>三、<strong>GDP &#x3D; C+I+G+(X-M)应用</strong></h1><p>2021年我国GDP增速远不及预期。且由于疫情影响，政府无法通过贸易增加GDP。所以今年GDP只能依靠内循环。公共消费(政府投资)拉动投资生产消费。有消息称上半年政府投资力度不够，还有大量投资余额。说明政府大概率在下半年会有大量的投资项目。<br>这时候综合国外美元继续大量放水。可推断下半年工业原料，能源等价格大概率会上涨，可做多。</p><p>下半年会进一步促进消费，促进投资。</p><p>政府投资传递到企业接订单进行融资生产消费者消费，一般需要2-3个月左右时间。所以在9月以后，资源类要重新评估注意止盈。</p><p>公共消费占GDP比重越来越高，说明政府干预经济程度越来越重。从侧面反映中国内生动力不足，GDP被动增长，靠的是政府投资。</p><p>2009-2020公共消费占名义GDP的比重<br><img src="/2021/09/24/2021-9-24GDP/1.png" alt="栖木"></p>]]></content>
      
      
      <categories>
          
          <category> 交易 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 金融 </tag>
            
            <tag> 经济 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog备份转移教程</title>
      <link href="/2021/09/02/2021-9-2%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B%EF%BC%88%E5%A4%87%E4%BB%BD%EF%BC%89/"/>
      <url>/2021/09/02/2021-9-2%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B%EF%BC%88%E5%A4%87%E4%BB%BD%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>使用github pages服务搭建博客的好处有：</p><blockquote><p>1.全是静态文件，访问速度快；<br>2.免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；<br>3.可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；<br>4.数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；<br>5.博客内容可以轻松打包、转移、发布到其它平台；<br>等等；</p></blockquote><h3 id="为了方便以后blog转移，备份一下转移过程"><a href="#为了方便以后blog转移，备份一下转移过程" class="headerlink" title="为了方便以后blog转移，备份一下转移过程"></a>为了方便以后blog转移，备份一下转移过程</h3><span id="more"></span><h1 id="复制备份文件"><a href="#复制备份文件" class="headerlink" title="复制备份文件"></a>复制备份文件</h1><p>主要是<code>source</code>和<code>theme</code>文件夹</p><h1 id="搭建github博客"><a href="#搭建github博客" class="headerlink" title="搭建github博客"></a>搭建github博客</h1><p>新建一个名为你的用户名.github.io的仓库，比如说，如果你的github用户名是test，那么你就新建test.github.io的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 <a href="http://test.github.io/">http://test.github.io</a> 了，是不是很方便？</p><p>由此可见，每一个github账户最多只能创建一个这样可以直接使用域名访问的仓库。</p><p>几个注意的地方：</p><blockquote><p>注册的邮箱一定要验证，否则不会成功；<br>仓库名字必须是：<code>username.github.io</code>，其中<code>username</code>是你的用户名；<br>仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟，或者更久，我的等了半个小时才生效；</p></blockquote><p>创建成功后，默认会在你这个仓库里生成一些示例页面，以后你的网站所有代码都是放在这个仓库里啦。</p><h1 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h1><p>当然，你不绑定域名肯定也是可以的，就用默认的 <code>xxx.github.io </code>来访问，如果你想更个性一点，想拥有一个属于自己的域名，那也是OK的。</p><p>首先你要注册一个域名，域名注册以前总是推荐去<code>godaddy</code>，现在觉得其实国内的阿里云也挺不错的，价格也不贵，毕竟是大公司，放心！</p><p>绑定域名分2种情况：带www和不带www的。</p><p>域名配置最常见有2种方式，CNAME和A记录，CNAME填写域名，A记录填写IP，由于不带www方式只能采用A记录，所以必须先ping一下<code>你的用户名.github.io</code>的IP，然后到你的域名DNS设置页，将A记录指向你ping出来的IP，将CNAME指向<code>你的用户名.github.io</code>，这样可以保证无论是否添加www都可以访问，如下：</p><p><img src="/2021/09/02/2021-9-2%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B%EF%BC%88%E5%A4%87%E4%BB%BD%EF%BC%89/1.png" alt="栖木"></p><p>然后到你的github项目根目录新建一个名为CNAME的文件（无后缀），里面填写你的域名，加不加www看你自己喜好，因为经测试：</p><blockquote><p>如果你填写的是没有www的，比如 mygit.me，那么无论是访问 <a href="http://www.mygit.me/">http://www.mygit.me</a> 还是 <a href="http://mygit.me/">http://mygit.me</a> ，都会自动跳转到 <a href="http://mygit.me/">http://mygit.me</a><br>如果你填写的是带www的，比如 <a href="http://www.mygit.me/">www.mygit.me</a> ，那么无论是访问 <a href="http://www.mygit.me/">http://www.mygit.me</a> 还是 <a href="http://mygit.me/">http://mygit.me</a> ，都会自动跳转到 <a href="http://www.mygit.me/">http://www.mygit.me</a><br>如果你填写的是其它子域名，比如 abc.mygit.me，那么访问 <a href="http://abc.mygit.me/">http://abc.mygit.me</a> 没问题，但是访问 <a href="http://mygit.me/">http://mygit.me</a> ，不会自动跳转到 <a href="http://abc.mygit.me/">http://abc.mygit.me</a></p></blockquote><p>另外说一句，在你绑定了新域名之后，原来的<code>你的用户名.github.io</code>并没有失效，而是会自动跳转到你的新域名。</p><h1 id="下载安装git"><a href="#下载安装git" class="headerlink" title="下载安装git"></a>下载安装git</h1><p><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">官网下载git</a></p><p>安装完成打开</p><h1 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h1><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p><p>用git bash执行如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/. ssh #检查本机已存在的ssh密钥</span><br></pre></td></tr></table></figure><p>如果提示：<code>No such file or directory </code>说明你是第一次使用git。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;邮件地址&quot;</span><br></pre></td></tr></table></figure><p>然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到<code>.ssh\id_rsa.pub</code>文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：<br><img src="/2021/09/02/2021-9-2%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B%EF%BC%88%E5%A4%87%E4%BB%BD%EF%BC%89/2.png" alt="栖木"><br>将刚复制的内容粘贴到key那里，title随便填，保存。</p><h1 id="测试是否成功"><a href="#测试是否成功" class="headerlink" title="测试是否成功"></a>测试是否成功</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com # 注意邮箱地址不用改</span><br></pre></td></tr></table></figure><p>如果提示<code>Are you sure you want to continue connecting (yes/no)?，</code>输入yes，然后会看到：</p><p><code>Hi xxx! You’ve successfully authenticated, but GitHub does not provide shell access.</code><br>看到这个信息说明SSH已配置成功！</p><p>此时你还需要配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;xxx&quot;// 你的github用户名，非昵称</span><br><span class="line">$ git config --global user.email  &quot;xxx@qq.com&quot;// 填写你的github注册邮箱</span><br></pre></td></tr></table></figure><h1 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h1><p>首先安装node.js<br>因为hexo是基于node.js的，所以node.js是必须要装的，安装也特别简单，去<a href="https://nodejs.org/en/" title="官网" target="_blank" rel="noopener">node.js</a>下载适合自己系统的版本。</p><p>安装hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure><blockquote><p>windows版本安装时发现的小问题<br>cmd正常 powershell会显示错误：<br>因为在此系统上禁止运行脚本。有关详细信息，请参阅 https: &#x2F;go.microsoft.com&#x2F;fwlink&#x2F;?LinkID&#x3D;135170 中的 about_Execution_Policies…<br>解决办法 输入<code>set-executionpolicy remotesigned</code>修改权限</p></blockquote><p>输入 hexo -v 出现一系列的版本号就是安装成功了</p><h1 id="生成博客"><a href="#生成博客" class="headerlink" title="生成博客"></a>生成博客</h1><p>在电脑的某个地方新建一个名为hexo的文件夹（名字可以随便取），比如我的是F:\Workspaces\hexo，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /f/Workspaces/hexo/</span><br><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p>hexo会自动下载一些文件到这个目录，包括node_modules，目录结构如下图：<br><img src="/2021/09/02/2021-9-2%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B%EF%BC%88%E5%A4%87%E4%BB%BD%EF%BC%89/3.png" alt="栖木"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g # 生成</span><br><span class="line">$ hexo s # 启动服务</span><br></pre></td></tr></table></figure><p>执行以上命令之后，hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的：<br><img src="/2021/09/02/2021-9-2%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B%EF%BC%88%E5%A4%87%E4%BB%BD%EF%BC%89/4.png" alt="栖木"><br><code>hexo s</code>是开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> 即可看到内容，很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故，因为4000这个端口太常见了，解决端口冲突问题请参考这篇文章：</p><p><a href="http://blog.liuxianan.com/windows-port-bind.html">http://blog.liuxianan.com/windows-port-bind.html</a></p><h1 id="上传之前配置"><a href="#上传之前配置" class="headerlink" title="上传之前配置"></a>上传之前配置</h1><p>复制<code>source</code>和<code>theme</code>文件夹<br>修改<code>_config.yml</code>中的<code>theme: landscape</code>改为<code>theme: 主题名字</code>，然后重新执行<code>hexo g</code>来重新生成。<br>如果出现一些莫名其妙的问题，可以先执行<code>hexo clean</code>来清理一下public的内容，然后再来重新生成和发布。<br>首先，ssh key肯定要配置好。</p><p>其次，配置_config.yml中有关deploy的部分：</p><p>正确写法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:liuxianan/liuxianan.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>错误写法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: github</span><br><span class="line">  repository: https://github.com/liuxianan/liuxianan.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>后面一种写法是hexo2.x的写法，现在已经不行了，无论是哪种写法，此时直接执行<code>hexo d</code>的话一般会报如下错误：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Deployer not found: github 或者 Deployer not found: git</span><br></pre></td></tr></table></figure><p>原因是还需要安装一个插件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>其它命令不确定，部署这个命令一定要用git bash，否则会提示<code>Permission denied (publickey).</code></p><p>打开Github 在库中的README添加你的网站地址.</p><p>打开你的git bash，输入<code>hexo d</code>就会将本次有改动的代码全部提交，没有改动的不会：</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>凯利公式</title>
      <link href="/2021/08/13/2021-8-13%E5%87%AF%E5%88%A9%E5%85%AC%E5%BC%8F/"/>
      <url>/2021/08/13/2021-8-13%E5%87%AF%E5%88%A9%E5%85%AC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>因为需要对仓位进行管理，所以常常听到凯利公式。索性总结备份在下面。</p><span id="more"></span><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>在概率论中，凯利公式（也称 “凯利方程式” The Kelly Criterion）是一个在期望净收益为正的独立重复赌局中，使本金的长期增长率最大化的投注策略。</p><h1 id="公式推导"><a href="#公式推导" class="headerlink" title="公式推导"></a>公式推导</h1><p>设赌客的本金为 N，投注比例为 f，游戏每局有 n 种结果，第 i 种结果的净收益率为 ri，发生的概率为 pi。则一局后对数本金 ln N 的增量（对数增长率）的数学期望为<br><img src="/2021/08/13/2021-8-13%E5%87%AF%E5%88%A9%E5%85%AC%E5%BC%8F/1.png" alt="栖木"><br>令上式对 f 求导，取极值时的投注比例 f 满足方程<br><img src="/2021/08/13/2021-8-13%E5%87%AF%E5%88%A9%E5%85%AC%E5%BC%8F/2.png" alt="栖木"><br>满足以上方程（即 “凯利方程式”）的解 f &#x3D; f* 即为最佳的投资比例。当期望净收益率 Σi pi ri &gt; 0 时，解得 f* &gt; 0。期望收益率为零或负时，由于通常赌局不允许 f &lt; 0 反向下注，此时最佳策略是 f &#x3D; 0，即不赌为赢。如果每局游戏只有 n &#x3D; 2 种结果（赢或输），其中 r1 &#x3D; rw &gt; 0，r2 &#x3D; -rL &lt; 0，p1 &#x3D; p，p2 &#x3D; 1 – p，则凯利方程的解 f &#x3D; f* 为<br><img src="/2021/08/13/2021-8-13%E5%87%AF%E5%88%A9%E5%85%AC%E5%BC%8F/3.png" alt="栖木"><br>这个公式称作 “凯利公式”。如果每次赢的时候回报是 1 赔 b，输的时候是输光全部赌注，则 rw &#x3D; b – 1 为净赔率，而 rL &#x3D; 1。此时凯利公式简化为<br><img src="/2021/08/13/2021-8-13%E5%87%AF%E5%88%A9%E5%85%AC%E5%BC%8F/4.png" alt="栖木"><br>举例而言，设每局有 p &#x3D; 40% 的获胜率，而赌客在赢得赌局时，可获得 1 赔 3 的赔率（b &#x3D; 3），输了就损失赌注，则赌客应在每局中下注现有资金的 f* &#x3D; 10%，以最大化资金的长期增长率<br><img src="/2021/08/13/2021-8-13%E5%87%AF%E5%88%A9%E5%85%AC%E5%BC%8F/5.png" alt="栖木"><br>凯利公式数学模型3d图<br><img src="/2021/08/13/2021-8-13%E5%87%AF%E5%88%A9%E5%85%AC%E5%BC%8F/6.png" alt="栖木"></p><h1 id="凯利公式的运用"><a href="#凯利公式的运用" class="headerlink" title="凯利公式的运用"></a>凯利公式的运用</h1><p>凯利公式在投资中可作如下应用：</p><ol><li>凯利公式不能代替选股。</li><li>凯利公式可以<code>选时</code>，即使是有投资价值的公司，也有高估和低估的时候，可以用凯利公式进行选时比较。</li><li>凯利公式适合作为资产配置的考虑，对于资金管理比较有利,可以充分考虑机会成本。</li><li>因为很少有盈亏比大于20的机会，若胜率小于0.2，在现实生活中是不值得投资的。</li><li>如果胜率一般在0.4~0.5，不要参与盈亏比小于2的投资。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 交易 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 金融 </tag>
            
            <tag> 股票定价 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>狭义相对论、时空错位和异地恋？</title>
      <link href="/2021/07/07/2021-7-7%E7%8B%AD%E4%B9%89%E7%9B%B8%E5%AF%B9%E8%AE%BA%E3%80%81%E6%97%B6%E7%A9%BA%E9%94%99%E4%BD%8D%E5%92%8C%E5%BC%82%E5%9C%B0%E6%81%8B%EF%BC%9F/"/>
      <url>/2021/07/07/2021-7-7%E7%8B%AD%E4%B9%89%E7%9B%B8%E5%AF%B9%E8%AE%BA%E3%80%81%E6%97%B6%E7%A9%BA%E9%94%99%E4%BD%8D%E5%92%8C%E5%BC%82%E5%9C%B0%E6%81%8B%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="狭义相对论基础"><a href="#狭义相对论基础" class="headerlink" title="狭义相对论基础"></a>狭义相对论基础</h1><p><em>概念及基础学习请参考<a href="https://www.bilibili.com/video/BV1wW411X7hL?from=search&seid=14267977419962990640">【分钟物理】狭义相对论合集（熟肉）</a>约花费1个小时</em></p><h2 id="狭义相对论的两条基本原理"><a href="#狭义相对论的两条基本原理" class="headerlink" title="狭义相对论的两条基本原理"></a>狭义相对论的两条基本原理</h2><ol><li>光速不变原理<br>光在真空中总是以确定的速度c传播，速度的大小同光源的运动状态无关。在真空中的各个方向上，光信号传播速度（即单向光速）的大小均相同（即光速各向同性）；光速同光源的运动状态和观察者所处的惯性系无关。</li><li>狭义相对性原理<br>一切物理定律（除引力外的力学定律、电磁学定律以及其他相互作用的动力学定律）在所有惯性系中均有效。一切物理定律的方程式在洛伦兹变换下保持形式不变。</li></ol><p>实验证明了这两个假设。成为了相对论的两个基本原理原理。所有反直觉的结论都是由这两个基本原理推理而得。</p><h1 id="推出问题"><a href="#推出问题" class="headerlink" title="推出问题"></a>推出问题</h1><p>主要问题——<code>时空错位</code></p><blockquote><p>由狭义相对论可知，每个人拥有不同的时间和空间参考系。<br>某人离开后返回，看到的都是这个人未来的样子。就产生了<code>时空错位</code>。</p></blockquote><span id="more"></span><p>举个恋爱的例子<br>简述：<br>两个人在某一时刻相爱了，并私定终身。只要物理距离发生变化，随着分别，两人就开始产生相对速度。<br>若两人不满足一定条件，即便另一个人回来，那么看到的他&#x2F;她都不再是那一刻的对方了（未来或过去的对方）。</p><p>为了便于理解，下面是问题的详细表述：<br>假设两人A和B<br>A远离B<br>B在原地<br>A回来找B<br>A将看到的是A未来时空的B<br>B将看到的是B过去时空的A</p><h2 id="如果不进行矫正，相爱那一刻的AB将永远错过"><a href="#如果不进行矫正，相爱那一刻的AB将永远错过" class="headerlink" title="如果不进行矫正，相爱那一刻的AB将永远错过"></a>如果不进行矫正，相爱那一刻的AB将永远错过</h2><h1 id="如何解决问题"><a href="#如何解决问题" class="headerlink" title="如何解决问题"></a>如何解决问题</h1><p>其实<code>时空错位</code>普遍存在，无法避免。</p><p>首先如果<br>你决定爱对方到永远，其实不需要纠结爱的是相对于你时空坐标的对方的以前还是未来。反正是都是对方。<br>其次反正<br>速度不可能超过光速，你是不可能会遇到还未相爱前的对方。<br>那么<br>你可以忽略<code>时空错位</code></p><p>但如果你非要强调爱是那刻的对方，无论多难也要解决<code>时空错位</code><br>理论是可解的</p><ol><li>AB两个人同时分开，并且以相同速度运行，并约定同时返回。就不会产生问题。</li><li>A待B返回后，此时存在时空错位，B以A相同的经历经历一遍后矫正。</li><li>不同速度进行分别，经过一定规律（满足数学公式计算）分别回归并到同时原点。</li></ol><p>遗憾的是只是理论可解</p>]]></content>
      
      
      <categories>
          
          <category> 物理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 胡思乱想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DCF(Discounted Cash Flow Method)推导</title>
      <link href="/2021/07/05/2021-7-5DCF(Discounted%20Cash%20Flow%20Method)%E6%8E%A8%E5%AF%BC/"/>
      <url>/2021/07/05/2021-7-5DCF(Discounted%20Cash%20Flow%20Method)%E6%8E%A8%E5%AF%BC/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>“企业的价值等于剩余存在期内自由现金流的折现”，这是很多夹头文章都会引用的巴老的一句话。投资其实就是购买在未来能获取企业收益的权利，把企业在存续期内每个财务年度的收益现金流，分别折算到今天的价值，并进行加总，就可以用来估算企业的价值，根据这个价值再以一定的打折来买入，比如打6折，就相当于估算企业价值是1元，在0.6元时买入，就有了传说中的安全边际，也即相当于在买入的那一刻就确定了未来会有收益。这需要对企业的价值有较为明确的计算，目前的很多PE&#x2F;PB指标都是静态指标或者说带有后视镜效应，需要估算企业未来的现金流折现后，得到前瞻PE&#x2F;PB才更有参考意义，所以对企业的价值估算重要性不言而喻</p><h1 id="DCF-Discounted-Cash-Flow-Method-公式"><a href="#DCF-Discounted-Cash-Flow-Method-公式" class="headerlink" title="DCF(Discounted Cash Flow Method)公式"></a>DCF(Discounted Cash Flow Method)公式</h1><span id="more"></span><p><img src="/2021/07/05/2021-7-5DCF(Discounted%20Cash%20Flow%20Method)%E6%8E%A8%E5%AF%BC/D.jpg" alt="栖木"><br>SCF:为股权现金流量<br>CEP:为权益资本成本<br>CEC:股权资本成本<br>PGR:永续增长率 </p><h1 id="DCF推导"><a href="#DCF推导" class="headerlink" title="DCF推导"></a>DCF推导</h1><p>现金流折现模型DCF一般由两个部分组成(当然你可以任意增加第一部分不同的阶段)</p><p>第一部分:<br>可以看作企业发展部分，这个时期的<code>企业增速 &gt; 折现率</code>(或者初期小于而后大于)<br>对每年的自由现金流分别进行贴现，而后相加。</p><p>第二部分:永续经营部分<br>预测未来的现金流进行贴现，这个时期的<code>企业增速 &lt; 折现率</code>(如果企业增速一直大于折现率，则企业永续经营，无限膨胀，不需要估值)</p><p>计算永续经营价值，需要有几个步骤：</p><blockquote><p>(1) 以企业当前的财务报表为基准，计算当前的自由现金流量，可以用经营活动现金流净额，减去维持现有经营所需要投入的现金。<br>(2) 第t年的自由现金流&#x3D;第t+1年的自由现金流&#x2F;(1+折现率)<br>(3) 永续价值&#x3D;自由现金流&#x2F;(折现率-预测的后续现金流稳定增长率)<br>(4) 企业总价值&#x3D;每年的自由现金流折现值+永续价值折现</p></blockquote><p>计算示例选择老唐的《手把手教你读财报》：假设现在是年初，预计某企业今年底可产生自由现金流10亿元，预计5年内自由现金流的年增长率为15%，其后能保持3%的永续增长。若折现率取值为10%，企业价值如下表所示：<br><img src="/2021/07/05/2021-7-5DCF(Discounted%20Cash%20Flow%20Method)%E6%8E%A8%E5%AF%BC/L.jpg" alt="栖木"><br>总体步骤就是先根据比较有把握的预计值，计算未来N年中(这里N&#x3D;5)，每年的折现值，再根据N年后的永续价值来计算永续价值的折现值，将前N年的折现值和永续价值的折现值相加，就得到企业的价值折现。这里最难理解的就是永续价值的计算，也即上表的倒数第3行的计算。<br>以下为本文核心部分，也即永续价值计算的推导过程。<br><img src="/2021/07/05/2021-7-5DCF(Discounted%20Cash%20Flow%20Method)%E6%8E%A8%E5%AF%BC/1.jpg" alt="栖木"><br>将所有第N+1年之后的价值，折算为第N+1年的折现值，这样就有<br><img src="/2021/07/05/2021-7-5DCF(Discounted%20Cash%20Flow%20Method)%E6%8E%A8%E5%AF%BC/2.jpg" alt="栖木"><br><img src="/2021/07/05/2021-7-5DCF(Discounted%20Cash%20Flow%20Method)%E6%8E%A8%E5%AF%BC/3.jpg" alt="栖木"><br><img src="/2021/07/05/2021-7-5DCF(Discounted%20Cash%20Flow%20Method)%E6%8E%A8%E5%AF%BC/4.jpg" alt="栖木"></p><p>至此，推理过程完毕，这里主要思路就是把第N+1年及其之后的所有自由现金流，折现到第N+1年，定义为永续价值，然后再将其折现到当前时点。这里面有几个数据比较具有主观性，比如i、d、N的选择，都会影响最终折现值的结果，所以这种估值方式算是提供了一个框架思路，但具体的使用还是需要进行深入的分析，以确定各指标的值</p><hr><h1 id="DCF应用注意事项"><a href="#DCF应用注意事项" class="headerlink" title="DCF应用注意事项"></a>DCF应用注意事项</h1><ol><li>企业永续经营部分，为估值重点部分。而大多数行业为周期行业，企业是否能度过行业周期寒冬是个问题。若用平均增速进行贴现或许会高估。</li><li>这种方法不能反映企业灵活性所带来的收益，这个缺陷也决定了它不能适用于企业的战略领域。</li><li>折现率容易收到各方面政策经济变化，较难判断，可以将额外风险率如技术风险、行业政策风险，作为风险溢价加在折现率中。DCF对企业未来收益风险的判断至关重要，当企业未来收益的风险较高时，折现率也应较高，当未来收益的风险较低时，折现率也应较低。</li></ol><p>文章永续部分From 雪球<a href="https://xueqiu.com/9051523904/130502222">宽客型散户</a></p>]]></content>
      
      
      <categories>
          
          <category> 交易 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 金融 </tag>
            
            <tag> 股票定价 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>周易占卜模拟器</title>
      <link href="/2021/06/28/2021-6-28%E5%91%A8%E6%98%93%E5%8D%A0%E5%8D%9C%E6%A8%A1%E6%8B%9F%E5%99%A8/"/>
      <url>/2021/06/28/2021-6-28%E5%91%A8%E6%98%93%E5%8D%A0%E5%8D%9C%E6%A8%A1%E6%8B%9F%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="因为对周易的兴趣，早就想做一个周易占卜的小程序，一直没有动手。先撸了一半代码，备份一下，有空补完。"><a href="#因为对周易的兴趣，早就想做一个周易占卜的小程序，一直没有动手。先撸了一半代码，备份一下，有空补完。" class="headerlink" title="因为对周易的兴趣，早就想做一个周易占卜的小程序，一直没有动手。先撸了一半代码，备份一下，有空补完。"></a>因为对周易的兴趣，早就想做一个周易占卜的小程序，一直没有动手。先撸了一半代码，备份一下，有空补完。</h2><h1 id="元亨利贞～"><a href="#元亨利贞～" class="headerlink" title="元亨利贞～"></a>元亨利贞～</h1><span id="more"></span><h2 id="更新日志："><a href="#更新日志：" class="headerlink" title="更新日志："></a>更新日志：</h2><h2 id="2021-6-29-v1-12-解决了主卦，变卦名称卦数问题"><a href="#2021-6-29-v1-12-解决了主卦，变卦名称卦数问题" class="headerlink" title="2021-6-29 v1.12 解决了主卦，变卦名称卦数问题"></a>2021-6-29 v1.12 解决了主卦，变卦名称卦数问题<br><img src="/2021/06/28/2021-6-28%E5%91%A8%E6%98%93%E5%8D%A0%E5%8D%9C%E6%A8%A1%E6%8B%9F%E5%99%A8/2.png" alt="栖木"></h2><h2 id="2021-6-28-V1-11-解决了主卦名称问题，卦数显示错误"><a href="#2021-6-28-V1-11-解决了主卦名称问题，卦数显示错误" class="headerlink" title="2021-6-28 V1.11 解决了主卦名称问题，卦数显示错误"></a>2021-6-28 V1.11 解决了主卦名称问题，卦数显示错误<br><img src="/2021/06/28/2021-6-28%E5%91%A8%E6%98%93%E5%8D%A0%E5%8D%9C%E6%A8%A1%E6%8B%9F%E5%99%A8/1.png" alt="栖木"></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span><span class="comment">//windows编译环境下用&quot;//&quot;注释掉，并将\033形式代码删除[31m色彩显示会有错误</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CL</span>&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="type">int</span> Coin[<span class="number">3</span>];</span><br><span class="line">    <span class="comment">//构造函数：初始化私有变量</span></span><br><span class="line">    <span class="built_in">CL</span>()</span><br><span class="line">    &#123; </span><br><span class="line">      YGBH = <span class="number">-99</span>;<span class="comment">//原卦象编号</span></span><br><span class="line">    BGBH = <span class="number">-99</span>;<span class="comment">//变卦象编号</span></span><br><span class="line">      TailNumb = <span class="number">-99</span>;<span class="comment">//反面硬币数量</span></span><br><span class="line">      <span class="comment">//初始化硬币</span></span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">3</span>; i++)&#123;</span><br><span class="line"></span><br><span class="line">            Coin[i] = <span class="number">-99</span>;  </span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//初始化原卦象</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">          YGNumb[i] = <span class="number">-99</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//初始化变卦象</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">          BGNumb[i] = <span class="number">-99</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//析构函数</span></span><br><span class="line">    ~<span class="built_in">CL</span>()&#123;&#125;;</span><br><span class="line">    <span class="comment">//占卜函数</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">SetCoin</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//开始扔硬币</span></span><br><span class="line">      TailNumb = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">      TailNumb = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt; <span class="number">3</span> ; j++)</span><br><span class="line">          &#123;               </span><br><span class="line">                Coin[j] = <span class="built_in">rand</span>()%<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span> (Coin[j] == <span class="number">0</span>)</span><br><span class="line">                 &#123;</span><br><span class="line">                  TailNumb ++;</span><br><span class="line">                 &#125;                  </span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (TailNumb == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          cout &lt;&lt; <span class="string">&quot;\033[31m&quot;</span>&lt;&lt; <span class="string">&quot;老阴 —— —— (x)\033[0m&quot;</span>;</span><br><span class="line">          cout &lt;&lt; <span class="string">&quot;\033[0m&quot;</span>&lt;&lt; <span class="string">&quot; ｜变爻｜   \033[0m&quot;</span>;</span><br><span class="line">          cout &lt;&lt; <span class="string">&quot;\033[34m&quot;</span>&lt;&lt; <span class="string">&quot;————— \n\033[0m&quot;</span>;</span><br><span class="line">          YGNumb[i] = <span class="number">0</span>;<span class="comment">//阳为1，阴为0。</span></span><br><span class="line">          BGNumb[i] = <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (TailNumb == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          cout &lt;&lt; <span class="string">&quot;\033[34m&quot;</span>&lt;&lt; <span class="string">&quot;少阳 —————    \033[0m&quot;</span>;</span><br><span class="line">          cout &lt;&lt; <span class="string">&quot;\033[0m&quot;</span>&lt;&lt; <span class="string">&quot; ｜变爻｜   \033[0m&quot;</span>;</span><br><span class="line">          cout &lt;&lt; <span class="string">&quot;\033[34m&quot;</span>&lt;&lt; <span class="string">&quot;————— \n\033[0m&quot;</span>;</span><br><span class="line">          YGNumb[i] = <span class="number">1</span>;</span><br><span class="line">          BGNumb[i] = <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (TailNumb == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          cout &lt;&lt; <span class="string">&quot;\033[34m&quot;</span>&lt;&lt; <span class="string">&quot;少阴 —— ——    \033[0m&quot;</span>;</span><br><span class="line">          cout &lt;&lt; <span class="string">&quot;\033[0m&quot;</span>&lt;&lt; <span class="string">&quot; ｜变爻｜   \033[0m&quot;</span>;</span><br><span class="line">          cout &lt;&lt; <span class="string">&quot;\033[34m&quot;</span>&lt;&lt; <span class="string">&quot;—— —— \n\033[0m&quot;</span>;</span><br><span class="line">          YGNumb[i] = <span class="number">0</span>;</span><br><span class="line">          BGNumb[i] = <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (TailNumb == <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          cout &lt;&lt; <span class="string">&quot;\033[31m&quot;</span>&lt;&lt; <span class="string">&quot;老阳 ————— (O)\033[0m&quot;</span>;</span><br><span class="line">          cout &lt;&lt; <span class="string">&quot;\033[0m&quot;</span>&lt;&lt; <span class="string">&quot; ｜变爻｜   \033[0m&quot;</span>;</span><br><span class="line">          cout &lt;&lt; <span class="string">&quot;\033[34m&quot;</span>&lt;&lt; <span class="string">&quot;—— —— \n\033[0m&quot;</span>;</span><br><span class="line">          YGNumb[i] = <span class="number">1</span>;</span><br><span class="line">          BGNumb[i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//调节占卜间隔-扔硬币间隔</span></span><br><span class="line">        <span class="built_in">sleep</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">          </span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//显示结果函数</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">InfoCion</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/*测试输出二进制卦象</span></span><br><span class="line"><span class="comment">      for (int i = 0; i &lt; 6; ++i)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">          cout &lt;&lt; YGNumb[i]&lt;&lt; &quot;   &quot; &lt;&lt; BGNumb[i]&lt;&lt;&quot;\n&quot;;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="comment">//原卦象名称</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (YGNumb[<span class="number">0</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (YGNumb[<span class="number">1</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (YGNumb[<span class="number">2</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span> (YGNumb[<span class="number">3</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">1</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：1【乾】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">44</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：44【姤】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">13</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：13【同人】\t\033[0m&quot;</span> ;&#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">33</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：33【遁】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">3</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">10</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：10【履】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">6</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：6【讼】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">25</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：25【无妄】\t\033[0m&quot;</span> ;&#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">12</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：12【否】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误3\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">2</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span> (YGNumb[<span class="number">3</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">9</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：9【小畜】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">57</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：57【巽】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">37</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：37【家人】\t\033[0m&quot;</span> ;&#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">53</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：53【渐】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">3</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">61</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：61【中孚】\t\033[0m&quot;</span> ;&#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">59</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：59【涣】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">42</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：42【益】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">20</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：20【观】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误3\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误2\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">1</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (YGNumb[<span class="number">2</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span> (YGNumb[<span class="number">3</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">14</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：14【大有】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">50</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：50【鼎】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">30</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：30【离】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">56</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：56【旅】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">3</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">38</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：38【睽】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">64</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：64【未济】\t\033[0m&quot;</span> ;&#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">21</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：21【噬嗑】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">35</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：35【晋】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误3\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">2</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span> (YGNumb[<span class="number">3</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">26</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：26【大畜】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">44</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：44【蛊】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">22</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：22【贲】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">52</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：52【艮】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">3</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">41</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：41【损】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">4</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：4【蒙】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">27</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：27【卧】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">23</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：23【剥】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误3\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误2\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误1\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">0</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span> (YGNumb[<span class="number">1</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (YGNumb[<span class="number">2</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span> (YGNumb[<span class="number">3</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">43</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：43【夬】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">28</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：28【大过】\t\033[0m&quot;</span> ;&#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">49</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：49【革】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">31</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：31【咸】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">3</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">58</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：58【兑】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">47</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：47【困】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">17</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：17【随】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">45</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：45【萃】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误3\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">2</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span> (YGNumb[<span class="number">3</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">5</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：5【需】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">48</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：48【井】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">63</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：63【既济】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">39</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：39【蹇】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">3</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">60</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：60【节】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">29</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：29【坎】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">3</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：3【屯】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">8</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：8【比】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误3\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误2\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">1</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (YGNumb[<span class="number">2</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span> (YGNumb[<span class="number">3</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">34</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：34【大壮】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">32</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：32【恒】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">55</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：55【丰】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">62</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：62【小过】\t\033[0m&quot;</span> ;&#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">3</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">54</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：54【归妹】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">40</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：40【解】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">51</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：51【震】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">16</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：16【豫】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误3\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">2</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span> (YGNumb[<span class="number">3</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">11</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：11【泰】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">46</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：46【升】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">36</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：36【明夷】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">15</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：15【谦】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">3</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">19</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：19【临】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">7</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：7【师】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;YGBH = <span class="number">24</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：24【复】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (YGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;YGBH = <span class="number">2</span>;cout &lt;&lt; <span class="string">&quot;\033[36m原卦为：2【坤】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误3\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误2\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">  <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误1\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">  <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误0\t\033[0m&quot;</span>;&#125;</span><br><span class="line">      </span><br><span class="line">    <span class="comment">//变卦象名称</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (BGNumb[<span class="number">0</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (BGNumb[<span class="number">1</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (BGNumb[<span class="number">2</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span> (BGNumb[<span class="number">3</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">1</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：1【乾】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">44</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：44【姤】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">13</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：13【同人】\t\033[0m&quot;</span> ;&#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">33</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：33【遁】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">3</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">10</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：10【履】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">6</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：6【讼】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">25</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：25【无妄】\t\033[0m&quot;</span> ;&#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">12</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：12【否】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误3\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">2</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span> (BGNumb[<span class="number">3</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">9</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：9【小畜】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">57</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：57【巽】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">37</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：37【家人】\t\033[0m&quot;</span> ;&#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">53</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：53【渐】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">3</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">61</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：61【中孚】\t\033[0m&quot;</span> ;&#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">59</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：59【涣】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">42</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：42【益】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">20</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：20【观】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误3\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误2\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">1</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (BGNumb[<span class="number">2</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span> (BGNumb[<span class="number">3</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">14</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：14【大有】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">50</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：50【鼎】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">30</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：30【离】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">56</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：56【旅】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">3</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">38</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：38【睽】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">64</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：64【未济】\t\033[0m&quot;</span> ;&#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">21</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：21【噬嗑】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">35</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：35【晋】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误3\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">2</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span> (BGNumb[<span class="number">3</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">26</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：26【大畜】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">44</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：44【蛊】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">22</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：22【贲】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">52</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：52【艮】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">3</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">41</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：41【损】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">4</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：4【蒙】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">27</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：27【卧】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">23</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：23【剥】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误3\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误2\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误1\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">0</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span> (BGNumb[<span class="number">1</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (BGNumb[<span class="number">2</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span> (BGNumb[<span class="number">3</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">43</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：43【夬】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">28</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：28【大过】\t\033[0m&quot;</span> ;&#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">49</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：49【革】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">31</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：31【咸】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">3</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">58</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：58【兑】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">47</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：47【困】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">17</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：17【随】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">45</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：45【萃】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误3\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">2</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span> (BGNumb[<span class="number">3</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">5</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：5【需】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">48</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：48【井】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">63</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：63【既济】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">39</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：39【蹇】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">3</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">60</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：60【节】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">29</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：29【坎】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">3</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：3【屯】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">8</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：8【比】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误3\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误2\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">1</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (BGNumb[<span class="number">2</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span> (BGNumb[<span class="number">3</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">34</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：34【大壮】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">32</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：32【恒】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">55</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：55【丰】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">62</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：62【小过】\t\033[0m&quot;</span> ;&#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">3</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">54</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：54【归妹】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">40</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：40【解】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">51</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：51【震】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">16</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：16【豫】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误3\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">2</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span> (BGNumb[<span class="number">3</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">11</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：11【泰】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">46</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：46【升】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">36</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：36【明夷】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">15</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：15【谦】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">3</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">19</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：19【临】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">7</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：7【师】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">4</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">1</span>)&#123;BGBH = <span class="number">24</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：24【复】\t\033[0m&quot;</span>; &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span> (BGNumb[<span class="number">5</span>] == <span class="number">0</span>)&#123;BGBH = <span class="number">2</span>;cout &lt;&lt; <span class="string">&quot;\033[36m变卦为：2【坤】\t\033[0m&quot;</span>;&#125; </span><br><span class="line">          <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误5\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误4\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">      <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误3\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误2\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">  <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误1\t\033[0m&quot;</span>;&#125;&#125;</span><br><span class="line">  <span class="keyword">else</span>&#123; cout &lt;&lt; <span class="string">&quot;\033[31m 错误0\t\033[0m&quot;</span>;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">//卦象详细解读（未完成...）</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/*卦象数字传入测试</span></span><br><span class="line"><span class="comment">    if (YGBH &lt; 0 || BGBH &lt; 0)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">      cout &lt;&lt; &quot;错误101 卦象编号未能正确赋值&quot; &lt;&lt;&quot;\n&quot;;</span></span><br><span class="line"><span class="comment">    &#125;else&#123;cout &lt;&lt; YGBH &lt;&lt; &quot;｜&quot;&lt;&lt; BGBH &lt;&lt;&quot;\n&quot;;&#125;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="type">int</span> YGNumb[<span class="number">6</span>];<span class="comment">//储存原卦卦象</span></span><br><span class="line">  <span class="type">int</span> BGNumb[<span class="number">6</span>];<span class="comment">//储存变卦卦象</span></span><br><span class="line">  <span class="type">int</span> YGBH;<span class="comment">//原卦象编号</span></span><br><span class="line">  <span class="type">int</span> BGBH;<span class="comment">//变卦象编号</span></span><br><span class="line">    <span class="type">int</span> TailNumb;<span class="comment">//硬币反面向上数量</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span> ok = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">srand</span>( (<span class="type">unsigned</span>)<span class="built_in">time</span>( <span class="literal">NULL</span> ) );<span class="comment">//设置随机数种子</span></span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;\033[33m**********  welcome  ************&quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line"></span><br><span class="line">         &lt;&lt;<span class="string">&quot;*********************************&quot;</span>  &lt;&lt;<span class="string">&quot;\n&quot;</span></span><br><span class="line"></span><br><span class="line">         &lt;&lt;<span class="string">&quot;*&quot;</span> &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; <span class="string">&quot;本程序模拟周易占卜&quot;</span>&lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt;<span class="string">&quot;\n&quot;</span></span><br><span class="line"></span><br><span class="line">         &lt;&lt;<span class="string">&quot;*&quot;</span> &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; <span class="string">&quot;请默念要占卜的问题&quot;</span> &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt;<span class="string">&quot;\n&quot;</span></span><br><span class="line"></span><br><span class="line">         &lt;&lt; <span class="string">&quot;*********************************\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class="line">  </span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;\n\t\033[32m按【回车】键开始占卜\033[0m&quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//实例化自建类</span></span><br><span class="line">Loop2:</span><br><span class="line">  cin.<span class="built_in">get</span>();</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;\033[0m正在占卜...\033[0m&quot;</span> &lt;&lt; <span class="string">&quot;\n\n&quot;</span>;</span><br><span class="line">  <span class="comment">//开始占卜时间</span></span><br><span class="line">  <span class="built_in">sleep</span>(<span class="number">1</span>);</span><br><span class="line">  CL *P1 = <span class="keyword">new</span> <span class="built_in">CL</span>();</span><br><span class="line">  P1-&gt;<span class="built_in">SetCoin</span>();     <span class="comment">//开始占卜</span></span><br><span class="line">  P1-&gt;<span class="built_in">InfoCion</span>();</span><br><span class="line">    <span class="keyword">delete</span> P1;</span><br><span class="line">    P1 = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n\n\033[33m*******************************************&quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">       &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; <span class="string">&quot;大道五十，天衍四九，人遁其一&quot;</span>&lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">       &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; <span class="string">&quot;尽人事听天命&quot;</span> &lt;&lt;<span class="string">&quot;\n&quot;</span></span><br><span class="line">       &lt;&lt; <span class="string">&quot;*******************************************&quot;</span> &lt;&lt; <span class="string">&quot;\033[0m&quot;</span>&lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line"></span><br><span class="line">       &lt;&lt; <span class="string">&quot;\033[32m您可以占卜其他问题&quot;</span></span><br><span class="line">         &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; <span class="string">&quot;1.占卜其他问题&quot;</span></span><br><span class="line">         &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; <span class="string">&quot;2.退出系统\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class="line">         cin &gt;&gt; ok;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">while</span>(ok != <span class="number">1</span> &amp;&amp; ok != <span class="number">2</span> );</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span>(ok == <span class="number">1</span>)&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\033[2J\033[0;0H&quot;</span>  &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">      cout &lt;&lt;<span class="string">&quot;\033[33m*********************************&quot;</span>  &lt;&lt;<span class="string">&quot;\n&quot;</span></span><br><span class="line">      &lt;&lt;<span class="string">&quot;*&quot;</span> &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; <span class="string">&quot;请默念要占卜的问题&quot;</span> &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt;<span class="string">&quot;\n&quot;</span></span><br><span class="line">      &lt;&lt; <span class="string">&quot;*********************************\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;\n\t\033[32m按【回车】键开始占卜\033[0m&quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">      cin.<span class="built_in">get</span>();</span><br><span class="line">        <span class="keyword">goto</span> Loop2;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(ok == <span class="number">2</span>)&#123;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C&amp;#43&amp;#43 </tag>
            
            <tag> 小项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐一个学习历史的好网站：全历史</title>
      <link href="/2021/06/28/2021-6-28%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E5%AD%A6%E4%B9%A0%E5%8E%86%E5%8F%B2%E7%9A%84%E5%A5%BD%E7%BD%91%E7%AB%99%EF%BC%9A%E5%85%A8%E5%8E%86%E5%8F%B2/"/>
      <url>/2021/06/28/2021-6-28%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E5%AD%A6%E4%B9%A0%E5%8E%86%E5%8F%B2%E7%9A%84%E5%A5%BD%E7%BD%91%E7%AB%99%EF%BC%9A%E5%85%A8%E5%8E%86%E5%8F%B2/</url>
      
        <content type="html"><![CDATA[<h3 id="以史为鉴，可以知兴替、明得失-——-全历史"><a href="#以史为鉴，可以知兴替、明得失-——-全历史" class="headerlink" title="以史为鉴，可以知兴替、明得失 —— 全历史"></a>以史为鉴，可以知兴替、明得失 —— 全历史</h3><p><a href="https://www.allhistory.com" title="点击进入全历史官网" target="_blank" rel="noopener">全历史</a>以AI知识图谱为核心引擎,通过高度时空化、关联化数据的方式构造及展现数字人文内容,尤其是历史知识。</p><span id="more"></span><hr><h2 id="关系图谱"><a href="#关系图谱" class="headerlink" title="关系图谱"></a>关系图谱</h2><h2 id="关系图谱即以与某一事物相关的人与事所展开的网状关系图，一目了然，之间的关联会以文字的形式标注在关系连线上，上图以玄武门之变为例，展示出了玄武门之变历史事件的关系图谱。点击某个人物或者事件对应的图标，即可获取对应的关系图谱。"><a href="#关系图谱即以与某一事物相关的人与事所展开的网状关系图，一目了然，之间的关联会以文字的形式标注在关系连线上，上图以玄武门之变为例，展示出了玄武门之变历史事件的关系图谱。点击某个人物或者事件对应的图标，即可获取对应的关系图谱。" class="headerlink" title="关系图谱即以与某一事物相关的人与事所展开的网状关系图，一目了然，之间的关联会以文字的形式标注在关系连线上，上图以玄武门之变为例，展示出了玄武门之变历史事件的关系图谱。点击某个人物或者事件对应的图标，即可获取对应的关系图谱。"></a>关系图谱即以与某一事物相关的人与事所展开的网状关系图，一目了然，之间的关联会以文字的形式标注在关系连线上，上图以玄武门之变为例，展示出了玄武门之变历史事件的关系图谱。点击某个人物或者事件对应的图标，即可获取对应的关系图谱。<br><img src="/2021/06/28/2021-6-28%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E5%AD%A6%E4%B9%A0%E5%8E%86%E5%8F%B2%E7%9A%84%E5%A5%BD%E7%BD%91%E7%AB%99%EF%BC%9A%E5%85%A8%E5%8E%86%E5%8F%B2/1.jpg" alt="栖木"></h2><h2 id="AB路径"><a href="#AB路径" class="headerlink" title="AB路径"></a>AB路径</h2><p>AB路径选中两个历史事物后，网站会分析二者之间可能存在的历史关联，并以关系连线的形式展现出来。</p><h2 id="如图选中了孔夫子与陈独秀两位历史人物，图中显示二者至少存在六条连接的路径，如路径一：孔夫子被李大钊批判，而李大钊则与陈独秀有过合作，由此孔夫子与陈独秀二者便存在了历史关联。在AB路径里，我们还可以尝试寻找很多有趣的路径"><a href="#如图选中了孔夫子与陈独秀两位历史人物，图中显示二者至少存在六条连接的路径，如路径一：孔夫子被李大钊批判，而李大钊则与陈独秀有过合作，由此孔夫子与陈独秀二者便存在了历史关联。在AB路径里，我们还可以尝试寻找很多有趣的路径" class="headerlink" title="如图选中了孔夫子与陈独秀两位历史人物，图中显示二者至少存在六条连接的路径，如路径一：孔夫子被李大钊批判，而李大钊则与陈独秀有过合作，由此孔夫子与陈独秀二者便存在了历史关联。在AB路径里，我们还可以尝试寻找很多有趣的路径~"></a>如图选中了孔夫子与陈独秀两位历史人物，图中显示二者至少存在六条连接的路径，如路径一：孔夫子被李大钊批判，而李大钊则与陈独秀有过合作，由此孔夫子与陈独秀二者便存在了历史关联。在AB路径里，我们还可以尝试寻找很多有趣的路径~<br><img src="/2021/06/28/2021-6-28%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E5%AD%A6%E4%B9%A0%E5%8E%86%E5%8F%B2%E7%9A%84%E5%A5%BD%E7%BD%91%E7%AB%99%EF%BC%9A%E5%85%A8%E5%8E%86%E5%8F%B2/2.jpg" alt="栖木"></h2><h2 id="族谱"><a href="#族谱" class="headerlink" title="族谱"></a>族谱</h2><h2 id="族谱的功能则可以使我们清楚地了解到目标历史人物的家族人员概况，横向为同代的配偶、兄弟姐妹等，纵向则为上代或下代。点击人物右上方的文件样式小图标，即可展开详细的下代人物概况。"><a href="#族谱的功能则可以使我们清楚地了解到目标历史人物的家族人员概况，横向为同代的配偶、兄弟姐妹等，纵向则为上代或下代。点击人物右上方的文件样式小图标，即可展开详细的下代人物概况。" class="headerlink" title="族谱的功能则可以使我们清楚地了解到目标历史人物的家族人员概况，横向为同代的配偶、兄弟姐妹等，纵向则为上代或下代。点击人物右上方的文件样式小图标，即可展开详细的下代人物概况。"></a>族谱的功能则可以使我们清楚地了解到目标历史人物的家族人员概况，横向为同代的配偶、兄弟姐妹等，纵向则为上代或下代。点击人物右上方的文件样式小图标，即可展开详细的下代人物概况。<br><img src="/2021/06/28/2021-6-28%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E5%AD%A6%E4%B9%A0%E5%8E%86%E5%8F%B2%E7%9A%84%E5%A5%BD%E7%BD%91%E7%AB%99%EF%BC%9A%E5%85%A8%E5%8E%86%E5%8F%B2/3.jpg" alt="栖木"></h2><h2 id="时间地图"><a href="#时间地图" class="headerlink" title="时间地图"></a>时间地图</h2><p>“你想前往那个时代？”</p><p>这句话配上绝妙的页面是不是轻轻松松就有种穿越的感觉了，从铜石并用时代到如今的科技时代，历史上任何时候的世界地图这里都有。选择你想前往的历史时代后，页面将会跳转至目标历史时期的世界地图，历史人物与事件将会被标注在对应的区域，单击图标即可获取详细的历史信息。</p><h2 id="纵向的时间轴与横向的世界地图将在这里实现最完美的结合与展现。"><a href="#纵向的时间轴与横向的世界地图将在这里实现最完美的结合与展现。" class="headerlink" title="纵向的时间轴与横向的世界地图将在这里实现最完美的结合与展现。"></a>纵向的时间轴与横向的世界地图将在这里实现最完美的结合与展现。<br><img src="/2021/06/28/2021-6-28%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E5%AD%A6%E4%B9%A0%E5%8E%86%E5%8F%B2%E7%9A%84%E5%A5%BD%E7%BD%91%E7%AB%99%EF%BC%9A%E5%85%A8%E5%8E%86%E5%8F%B2/4.jpg" alt="栖木"></h2><h2 id="测距离、面积"><a href="#测距离、面积" class="headerlink" title="测距离、面积"></a>测距离、面积</h2><h2 id="时间地图还具有测距离、面积的功能，比如说玄奘西行的距离，元朝时我们国家的面积等等，用户都可以在时间地图里自己动手测量得出。"><a href="#时间地图还具有测距离、面积的功能，比如说玄奘西行的距离，元朝时我们国家的面积等等，用户都可以在时间地图里自己动手测量得出。" class="headerlink" title="时间地图还具有测距离、面积的功能，比如说玄奘西行的距离，元朝时我们国家的面积等等，用户都可以在时间地图里自己动手测量得出。"></a>时间地图还具有测距离、面积的功能，比如说玄奘西行的距离，元朝时我们国家的面积等等，用户都可以在时间地图里自己动手测量得出。<br><img src="/2021/06/28/2021-6-28%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E5%AD%A6%E4%B9%A0%E5%8E%86%E5%8F%B2%E7%9A%84%E5%A5%BD%E7%BD%91%E7%AB%99%EF%BC%9A%E5%85%A8%E5%8E%86%E5%8F%B2/5.jpg" alt="栖木"></h2><h2 id="特色文章"><a href="#特色文章" class="headerlink" title="特色文章"></a>特色文章</h2><p>全历史上面除了拥有丰富的历史知识，还有许多有关历史文化的有趣文章，比如新手就可以get的唐朝流行妆容、路易十四世还是个美妆博主等等<br><img src="/2021/06/28/2021-6-28%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E5%AD%A6%E4%B9%A0%E5%8E%86%E5%8F%B2%E7%9A%84%E5%A5%BD%E7%BD%91%E7%AB%99%EF%BC%9A%E5%85%A8%E5%8E%86%E5%8F%B2/6.jpg" alt="栖木"></p><h3 id="如此有趣的全历史，你不想来看看么"><a href="#如此有趣的全历史，你不想来看看么" class="headerlink" title="如此有趣的全历史，你不想来看看么~"></a><em><strong>如此有趣的<a href="https://www.allhistory.com" title="点击进入全历史官网" target="_blank" rel="noopener">全历史</a>，你不想来看看么~</strong></em></h3>]]></content>
      
      
      <categories>
          
          <category> 精品网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分享 </tag>
            
            <tag> 精品网站 </tag>
            
            <tag> 学习 </tag>
            
            <tag> 历史 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面向对象学习</title>
      <link href="/2021/06/21/2021-6-21%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%AD%A6%E4%B9%A0/"/>
      <url>/2021/06/21/2021-6-21%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>学习各种计算机语言之后，发现计算机语言从面向过程逐渐发展到面向对象。<br>我想，学习也应该以自身为对象，从输入到输出。</p><span id="more"></span><p>自然界很多知识深奥晦涩庞杂。<br>客观的讲，单一一个分支就足够一个普通人学到从生到死。<br>而每一个知识点逻辑上讲都很重要，常常掉入无穷无尽的知识的漩涡之中。<br>所以，我们学什么就比学重要的多。<br>怎么样选择学什么，或者从哪里开始学习？<br>以自身为对象考虑问题，就简单多了。<br><img src="/2021/06/21/2021-6-21%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%AD%A6%E4%B9%A0/2.jpg" alt="栖木"></p><h2 id="确定目标，围绕着学，就不会被各种问题吸引。"><a href="#确定目标，围绕着学，就不会被各种问题吸引。" class="headerlink" title="确定目标，围绕着学，就不会被各种问题吸引。"></a>确定目标，围绕着学，就不会被各种问题吸引。</h2><p>这样会产生一个小问题：在我们认知不足，思维不成熟的时候，你怎么能确定你的目标。<br>问题是，在我们小，不成熟的时候。我们需要那么多的诉求么？<br>就像你还是个性能很低的芯片。不能也不需要你处理只有超级计算机才可能解决的问题。</p><p>人永远不可能学到100%，只能无限接近这个极限。<br>毕业只是人为定了一个范围框架。<br>所以不需要你把所有的基础知识学习了才去学高级。<br>什么时候遇到了再去解决更合适。<br>这个过程像是你先造一艘简单的小舟，能动就行，你嫌他动的慢，修改一下外形，还慢加蒸汽机，还是不行，加燃油，再到核动能。<br>颜色很丑，没关系，反正颜色不耽误航行。慢慢的升级，等到了目的地，你或许就拥有一艘极佳的航母。<br>你没必要非得建好完美的航母再开始航行。<br><img src="/2021/06/21/2021-6-21%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%AD%A6%E4%B9%A0/1.jpg" alt="栖木"></p><p>所以学习应该</p><h2 id="输入-输出-again-and-again"><a href="#输入-输出-again-and-again" class="headerlink" title="输入-输出,again and again."></a><strong>输入-输出,again and again.</strong></h2><p>学到什么就要立马输出点什么，哪怕是最简单的知识。</p><div align="center">  <img width="480" height="200" src="3.png" alt="栖木"></div>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 心得 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>喝酒纸牌游戏</title>
      <link href="/2021/06/20/2021-6-20%E8%97%8F%E6%97%8F%E7%BA%B8%E7%89%8C%E6%B8%B8%E6%88%8F/"/>
      <url>/2021/06/20/2021-6-20%E8%97%8F%E6%97%8F%E7%BA%B8%E7%89%8C%E6%B8%B8%E6%88%8F/</url>
      
        <content type="html"><![CDATA[<p>很多年前去西藏，学会了一个纸牌游戏。玩法很简单，大家同学、朋友聚会的时候可以试着玩玩，废话少说现在开始介绍玩法。<br>准备几副扑克牌，每副牌有1~k，还有大小王，每个牌代表一个意思。从主人（或是聚会的发起人）开始摸牌 顺时针进行游戏。</p><span id="more"></span><table><thead><tr><th>牌花色</th><th>介绍</th></tr></thead><tbody><tr><td>1</td><td>摸牌的人可以指定现场任意一个人喝一杯</td></tr><tr><td>2</td><td>小姐  最倒霉的牌（我个人这么认为）拿到牌的人成为小姐姐，在场被罚喝酒的人可以要求小姐酒直到下一个人摸到2成为小姐姐为止陪酒时 还要有标志性的对话 “来陪大爷喝一杯” “大爷您喝好！” （想当年我当了三轮小姐姐就是没人摸2 可怜啊）</td></tr><tr><td>3</td><td>逛三园 （动物园、植物园、菜园）  如抽到的人说动物园 从抽到的人开始每个人说一种动物名字，说不上来的或者重复的罚酒一杯（注意可以找小姐陪酒哦）</td></tr><tr><td>4</td><td>下一个摸牌</td></tr><tr><td>5</td><td>照相机 拿到5的人让其他人看了牌后可以拥有照相机功能 将牌放在自己身边 游戏的在任意时刻可以喊“照相机”在3秒内动的人喝酒 然后将5放入牌堆</td></tr><tr><td>6</td><td>做游戏 摸到6的人可以和在场任意一人做游戏 掰手腕 石头剪子布等等都行 输的人喝酒</td></tr><tr><td>7</td><td>摸到7的人任意说一个数字 从他之后开始轮流报数 当遇到含有或者7的倍数的数字时拍手代替 说不上来的或者说错的喝一杯</td></tr><tr><td>8</td><td>上厕所 摸到8的人给大家看牌之后拥有上厕所的功能 上厕所时将8放入牌堆  不过要赶快藏起来 想上厕所的人可以抢哦 没有8的人上厕所需自罚一杯</td></tr><tr><td>9</td><td>自己喝一杯 也可以找小姐姐陪酒的哦</td></tr><tr><td>10</td><td>我是神经病 摸到10的人对在场的人说“我是神经病”后变为神经病 在场的人不能与之搭话 第一个与之搭话的人喝一杯 将牌放在身前 有人中招之后将10放回牌堆</td></tr><tr><td>J</td><td>左手边的人喝一杯</td></tr><tr><td>Q</td><td>右手边的人喝一杯</td></tr><tr><td>K</td><td>真心话大冒险 大家投票表决是举行真心话还是大冒险 第一次由主人出题 以后由上一次被真心话大冒险的人出题</td></tr><tr><td>小王</td><td>每一个人喝一杯（摸到牌的也喝）</td></tr><tr><td>大王</td><td>除了摸到牌的在场的人每人喝一杯</td></tr></tbody></table><p>希望大家玩的愉快！！          </p><p><img src="/2021/06/20/2021-6-20%E8%97%8F%E6%97%8F%E7%BA%B8%E7%89%8C%E6%B8%B8%E6%88%8F/1.png" alt="栖木"></p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo部署到Github后文件夹名大小写引起的问题</title>
      <link href="/2021/06/20/2021-06-20Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github%E5%90%8E%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8D%E5%A4%A7%E5%B0%8F%E5%86%99%E5%BC%95%E8%B5%B7%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2021/06/20/2021-06-20Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github%E5%90%8E%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8D%E5%A4%A7%E5%B0%8F%E5%86%99%E5%BC%95%E8%B5%B7%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>使用Hexo撰写文章后仅使用几个简单命令即可轻松部署到Github上，有时候经常会出现文章部署后又修改了Tag或Categories，而恰好修改的内容涉及到英文字母大写改小写或小写改大写，譬如news改为News，字母N修改后确发现部署到Github上无法生效，而此时你若在本地预览确一切正常。</p><span id="more"></span><div align=center><p><img src="/2021/06/20/2021-06-20Hexo%E9%83%A8%E7%BD%B2%E5%88%B0Github%E5%90%8E%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8D%E5%A4%A7%E5%B0%8F%E5%86%99%E5%BC%95%E8%B5%B7%E7%9A%84%E9%97%AE%E9%A2%98/1.png" alt="栖木"></p></div><p>由于在发布的文章中出现的Tag或Categories会对应在tag或categories页面中显示，因此当点击对应的Tag或Categories时会出现路径无法找到从而跳转到404页面。</p><hr><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>这个现象的问题是由于git命令默认的配置中忽略了文件名的大小写，因此即便文件夹的大小写发生了变更，git也会表现出置之不理。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>解决思路是先调整git的配置文件，让git执行时不要忽略大小写的修改，然后清空github.io项目中的所有文件，最后使用Hexo重新生成并部署。</p><h2 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h2><p>进入到Hexo项目的文件夹中，比如Hexo项目文件夹名称为blog：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd blog</span><br></pre></td></tr></table></figure><p>进入.deploy_git文件夹 <code>（.deploy_git</code>是隐藏文件夹，如果你看不到，可以使用<code>ls -a</code>命令来查看，这一步可以省略）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd .deploy_git</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim .git/config</span><br></pre></td></tr></table></figure><p>打开<code>.git</code>目录下的<code>config</code>文件并修改<code>ignorecase = true</code> 为 <code>ignorecase = false</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[core]</span><br><span class="line">repositoryformatversion = 0</span><br><span class="line">filemode = true</span><br><span class="line">bare = false</span><br><span class="line">logallrefupdates = true</span><br><span class="line">ignorecase = true   ##修改true为false</span><br><span class="line">precomposeunicode = true</span><br><span class="line">…</span><br></pre></td></tr></table></figure><p>文件打开后，输入<code>i</code>进入编辑模式，将光标移动到<code>ignorecase = true</code>，将true改为false后输入<code>:wq。</code>（冒号也是命令的一部分）</p><p>接下来删除 <code>.deploy_git</code>文件夹内的所有文件，并push到Github仓库，完成后你的github.io项目中没有任何文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git rm -rf *</span><br><span class="line">git commit -m ‘clean all file’</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>返回Hexo项目blog的根目录，重新生成文件并部署到Github上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ..</span><br><span class="line">hexo clean</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><p>完成。</p><p>你现在可以在浏览器中重新加载查看是否还会出现404页面了。</p><p>From<a href="https://trifond.github.io/2018/12/05/hexo-folder-ignore-case/" title="Trifond">Trifond</a></p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谈谈抖音</title>
      <link href="/2020/12/09/2020-12-9%E8%B0%88%E8%B0%88%E6%8A%96%E9%9F%B3/"/>
      <url>/2020/12/09/2020-12-9%E8%B0%88%E8%B0%88%E6%8A%96%E9%9F%B3/</url>
      
        <content type="html"><![CDATA[<p>最近一直在刷抖音，最初是因为朋友推荐接触到快手，抖音这类型的软件。现在突然发现这类软件占据我的时间越来越长。并且总结出来收获并不大，我并不认为是个好现象。</p><h3 id="工具是没有错的，问题是是使用的人。"><a href="#工具是没有错的，问题是是使用的人。" class="headerlink" title="工具是没有错的，问题是是使用的人。"></a>工具是没有错的，问题是是使用的人。</h3><h2 id="那为什么这类软件如此吸引人呢？"><a href="#那为什么这类软件如此吸引人呢？" class="headerlink" title="那为什么这类软件如此吸引人呢？"></a>那为什么这类软件如此吸引人呢？</h2><span id="more"></span><p>我觉得最重要的原因是这类软件通过大数据不断筛选出你可能感兴趣，喜爱的内容。让你在不知不觉期间被其吸引。</p><h2 id="发现的问题："><a href="#发现的问题：" class="headerlink" title="发现的问题："></a>发现的问题：</h2><h3 id="1-内容都是零散的，很难组成一个知识框架。"><a href="#1-内容都是零散的，很难组成一个知识框架。" class="headerlink" title="1)内容都是零散的，很难组成一个知识框架。"></a>1)内容都是零散的，很难组成一个知识框架。</h3><p>一个视频短的只有几十秒，长的也只有几分钟。所以内容必须在有限的时间内足够吸引观众，就导致短视频的内容都是零散的，很难组成一个知识框架。所以在抖音上更适合培养一些兴趣，而学习复杂的知识是困难的。</p><h3 id="2-内容大多无营养"><a href="#2-内容大多无营养" class="headerlink" title="2)内容大多无营养"></a>2)内容大多无营养</h3><p>真正优秀的人或者行业标杆很难有时间创作短视频，所以优秀的内容并不多。而且短视频生产者生产的内容大多是为了增加点击量。而点击量决定你刷到的概率，所以有深度的视频反而曲高和寡难受欢迎。你需要在大量创作劣质视频内容中找到一点营养，不如直接去阅读学习。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我认为抖音这类软件，本质上是一个大数据收集端，收集人们的喜好。定向投放商业产品。不得不说对于商业软件产品来说，抖音无疑是极其优秀的。<br>而对于人们来说，他只会推荐你所感兴趣的视频像是渐渐的把你孤立在自我的喜好中。容易固步自封。<br>这个世界是多元的，认识世界必须接触不同甚至是相反的观点。这样才会产生观点的碰撞，引发思考，生成新的观点。这一点来说。观看抖音的收益随着时间的增长逐渐降低。<br>可以将之作为一个窗口，了解不同生活的人。但软件及其容易沉溺，且收益不高。<br>本质就是娱乐软件，适合消磨生命，不利于自身成长。不能因为游戏机里有打字游戏就说他是学习机。</p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 心得 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>德州扑克心得</title>
      <link href="/2020/09/21/2020-9-21%E5%BE%B7%E5%B7%9E%E6%89%91%E5%85%8B%E5%BF%83%E5%BE%97/"/>
      <url>/2020/09/21/2020-9-21%E5%BE%B7%E5%B7%9E%E6%89%91%E5%85%8B%E5%BF%83%E5%BE%97/</url>
      
        <content type="html"><![CDATA[<p>德克萨斯扑克全称Texas Hold’em poker，中文简称德州扑克。它是一种玩家对玩家的公共牌类游戏。一张台面至少2人，最多22人，一般是由2-10人参加。</p><p>德州扑克一共有52张牌，没有王牌。每个玩家分两张牌作为“底牌”，五张由荷官陆续朝上发出的公共牌。开始的时候，每个玩家会有两张面朝下的底牌。经过所有押注圈后，若仍不能分出胜负，游戏会进入“摊牌”阶段，也就是让所剩的玩家亮出各自的底牌以较高下，持大牌者获胜。</p><hr><p>偶然玩到了德州扑克，觉得和投资真的很像。无论是判断胜率，加码，弃牌。总结一些心得。</p><span id="more"></span><ol><li>除非你是规则内最大，所以永远可能会有比你底牌大的人。</li><li>上赌场前永远要记得留4w（保命的筹码）。命运不会时常站在你这边，很少有值得你梭哈的时候。</li><li>有好牌不要着急表现。扮猪吃老虎往往效果会更好。</li><li>你永远不知道你的对面坐的是陌生人是否相互认识做局坑你。</li><li>该割肉时割肉，该贪婪时贪婪时留一点。</li><li>人多力量大。</li><li>如果你不知道你什么时候该停手，那么无论多少钱最终都会输掉。</li><li>越想赢得比赛，越要沉着冷静。</li><li>筹码越多不仅越容易办事，有时还能吓唬输不起的人。</li></ol><p><img src="/2020/09/21/2020-9-21%E5%BE%B7%E5%B7%9E%E6%89%91%E5%85%8B%E5%BF%83%E5%BE%97/1.png" alt="栖木"><br><img src="/2020/09/21/2020-9-21%E5%BE%B7%E5%B7%9E%E6%89%91%E5%85%8B%E5%BF%83%E5%BE%97/2.png" alt="栖木"></p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 心得 </tag>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>证书</title>
      <link href="/2019/04/11/%E8%AF%81%E4%B9%A6/"/>
      <url>/2019/04/11/%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<p>拿到的证书：</p><p>挖掘机证书【2025-4-23】<br><img src="/2019/04/11/%E8%AF%81%E4%B9%A6/wjj.jpg" alt="栖木"></p><p>职业技能等级证书 无人机初级【2024-12-29】<br><img src="/2019/04/11/%E8%AF%81%E4%B9%A6/wrj.jpg" alt="栖木"></p><p>SCA Roasting Professional【2019-4-11】<br><img src="/2019/04/11/%E8%AF%81%E4%B9%A6/R.png" alt="栖木"></p><span id="more"></span><p>Q-ARABIC GRADER【2018-7-14】<br><img src="/2019/04/11/%E8%AF%81%E4%B9%A6/Q.jpg" alt="栖木"></p><p>HTML【2018-2-21】<br><img src="/2019/04/11/%E8%AF%81%E4%B9%A6/1.png" alt="栖木"></p><p>C++【2018-2-01】<br><img src="/2019/04/11/%E8%AF%81%E4%B9%A6/2.png" alt="栖木"></p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C&amp;#43&amp;#43 </tag>
            
            <tag> HTML </tag>
            
            <tag> Coffee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>咖啡店</title>
      <link href="/2018/07/01/2018-07-01%E5%92%96%E5%95%A1%E5%BA%97/"/>
      <url>/2018/07/01/2018-07-01%E5%92%96%E5%95%A1%E5%BA%97/</url>
      
        <content type="html"><![CDATA[<p>我的咖啡店<br>3月底偶然的机会接手了一家小咖啡店.</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p><img src="/2018/07/01/2018-07-01%E5%92%96%E5%95%A1%E5%BA%97/1.jpg" alt="栖木"></p><span id="more"></span><p><img src="/2018/07/01/2018-07-01%E5%92%96%E5%95%A1%E5%BA%97/2.jpg" alt="栖木"><br><img src="/2018/07/01/2018-07-01%E5%92%96%E5%95%A1%E5%BA%97/3.jpg" alt="栖木"><br><img src="/2018/07/01/2018-07-01%E5%92%96%E5%95%A1%E5%BA%97/4.jpg" alt="栖木"><br><img src="/2018/07/01/2018-07-01%E5%92%96%E5%95%A1%E5%BA%97/5.jpg" alt="栖木"><br><img src="/2018/07/01/2018-07-01%E5%92%96%E5%95%A1%E5%BA%97/6.jpg" alt="栖木"></p><h2 id="部分产品照"><a href="#部分产品照" class="headerlink" title="部分产品照"></a>部分产品照</h2><p><img src="/2018/07/01/2018-07-01%E5%92%96%E5%95%A1%E5%BA%97/7.jpg" alt="栖木"><br><img src="/2018/07/01/2018-07-01%E5%92%96%E5%95%A1%E5%BA%97/8.jpg" alt="栖木"><br><img src="/2018/07/01/2018-07-01%E5%92%96%E5%95%A1%E5%BA%97/9.jpg" alt="栖木"><br><img src="/2018/07/01/2018-07-01%E5%92%96%E5%95%A1%E5%BA%97/10.jpg" alt="栖木"><br><img src="/2018/07/01/2018-07-01%E5%92%96%E5%95%A1%E5%BA%97/11.jpg" alt="栖木"><br><img src="/2018/07/01/2018-07-01%E5%92%96%E5%95%A1%E5%BA%97/12.jpg" alt="栖木"></p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>彩票模拟器</title>
      <link href="/2018/02/25/2018-2-25%E5%BD%A9%E7%A5%A8%E6%A8%A1%E6%8B%9F%E5%99%A8/"/>
      <url>/2018/02/25/2018-2-25%E5%BD%A9%E7%A5%A8%E6%A8%A1%E6%8B%9F%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>新闻看到某某某喜中xxx大奖新闻。就做个彩票系统，看看要是一天一注彩票买多少期能中个小奖……</p><span id="more"></span><p>新手一匹，代码献丑</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span><span class="comment">//windows编译环境下用&quot;//&quot;注释掉，并将\033形式代码删除[31m色彩显示会有错误</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CL</span>&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//这一局赢得的钱</span></span><br><span class="line">    <span class="type">int</span> money;</span><br><span class="line">    <span class="comment">//构造函数：初始化私有变量</span></span><br><span class="line">    <span class="built_in">CL</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">7</span>; i++)&#123;</span><br><span class="line">            WINnumber[i] = <span class="number">0</span>; <span class="comment">//初始化彩票机</span></span><br><span class="line">        &#125;</span><br><span class="line">        winH = <span class="number">-1</span>; <span class="comment">//猜对红球数</span></span><br><span class="line">        winB = <span class="number">-1</span>; <span class="comment">//猜对篮球数</span></span><br><span class="line">        money = <span class="number">0</span>; <span class="comment">//本次中奖金额</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//析构函数</span></span><br><span class="line">    ~<span class="built_in">CL</span>()&#123;&#125;;</span><br><span class="line">    <span class="comment">//开奖函数</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setWINnumber</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">7</span> ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i &lt; <span class="number">6</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                WINnumber[i] = <span class="built_in">rand</span>()%<span class="number">33</span> + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt; i ; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(WINnumber[i] == WINnumber[j])<span class="comment">//如果相同就重新选</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        i--;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                WINnumber[i] = <span class="built_in">rand</span>()%<span class="number">16</span> + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">InfoWINnumber</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;中奖号码为:\n&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span> ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;\033[31m&quot;</span> &lt;&lt; WINnumber[i] &lt;&lt; <span class="string">&quot;\033[0m &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\033[34m&quot;</span> &lt;&lt; WINnumber[<span class="number">6</span>]&lt;&lt; <span class="string">&quot;\033[0m&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//用于比较篮球</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">KJ</span><span class="params">(<span class="type">int</span> a[<span class="number">7</span>])</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> winH = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//比较红球</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">6</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt; <span class="number">6</span> ;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i] == WINnumber[j])&#123;</span><br><span class="line">                <span class="comment">//记录中奖红球个数</span></span><br><span class="line">                winH++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//比较蓝球</span></span><br><span class="line">        <span class="keyword">if</span>(a[<span class="number">6</span>] == WINnumber[<span class="number">6</span>])&#123;</span><br><span class="line">            winB = <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            winB = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\n选对红球数: &quot;</span> &lt;&lt; winH &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; <span class="string">&quot;选对蓝球数: &quot;</span> &lt;&lt; winB &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">        <span class="comment">//如果中奖看中奖金额</span></span><br><span class="line">        <span class="keyword">if</span>(winB == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(winH == <span class="number">0</span>||winH == <span class="number">1</span>||winH == <span class="number">2</span>)&#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;\033[35m运气不错，中了5块!\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class="line">                money = <span class="number">5</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(winH == <span class="number">3</span>)&#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;\033[35m小赚一把，中了10块!\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class="line">                money = <span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(winH == <span class="number">4</span>)&#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;\033[35m哈哈哈，中了200块!\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class="line">                money = <span class="number">200</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(winH == <span class="number">5</span>)&#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;\033[35m差一点就大奖，3000块也不错啦!\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class="line">                money = <span class="number">3000</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(winH == <span class="number">6</span>)&#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;\n\033[35m***********oh my God*************&quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">                     &lt;&lt; <span class="string">&quot;\n\n\t&quot;</span> &lt;&lt; <span class="string">&quot;你中头奖了&quot;</span> &lt;&lt; <span class="string">&quot;\t\n\n&quot;</span></span><br><span class="line">                     &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; <span class="string">&quot;奖金1000万!!!&quot;</span> &lt;&lt; <span class="string">&quot;\t\n\n\n&quot;</span></span><br><span class="line">                     &lt;&lt; <span class="string">&quot;*********************************\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class="line">                     money = <span class="number">10000000</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;很遗憾，未中奖，下次再来吧！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(winB == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(winH == <span class="number">4</span>)&#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;\033[35m小赚一把，中了10块!\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class="line">                money = <span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(winH == <span class="number">5</span>)&#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;\033[35m哈哈哈，中了200块!\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class="line">                money = <span class="number">200</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(winH == <span class="number">6</span>)&#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;\033[35m二等奖！！！500万！( $ _ $ )\033[0m &quot;</span> &lt;&lt; endl;</span><br><span class="line">                money = <span class="number">5000000</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;\033[33m【很遗憾，未中奖，下次再来吧!】\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> WINnumber[<span class="number">7</span>];</span><br><span class="line">    <span class="type">int</span> winH;</span><br><span class="line">    <span class="type">int</span> winB;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">srand</span>( (<span class="type">unsigned</span>)<span class="built_in">time</span>( <span class="literal">NULL</span> ) );<span class="comment">//设置随机数种子</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n\033[33m**************  welcome  ****************&quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">         &lt;&lt; <span class="string">&quot;*****************************************&quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">         &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; <span class="string">&quot;本程序模拟彩票开奖&quot;</span>&lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">         &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; <span class="string">&quot; 祝君早中大奖!!!&quot;</span> &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">         &lt;&lt; <span class="string">&quot;*****************************************\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class="line">    Loop3:</span><br><span class="line">    <span class="comment">//初始化你要选择的球</span></span><br><span class="line">    <span class="type">int</span> Choicenumber[<span class="number">7</span>] = &#123;<span class="number">0</span> , <span class="number">0</span> , <span class="number">0</span> , <span class="number">0</span> , <span class="number">0</span> , <span class="number">0</span>&#125;;</span><br><span class="line">    <span class="comment">//初始化购买的期数</span></span><br><span class="line">    <span class="type">int</span> Periods = <span class="number">-1</span>;</span><br><span class="line">    <span class="comment">//开始选球</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">7</span> ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; <span class="number">6</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Loop1:</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入第 &quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot; 号\033[31m红球\033[0m(1~33) &quot;</span>;</span><br><span class="line">            cin &gt;&gt; Choicenumber[i];</span><br><span class="line">            <span class="comment">//判断输入的数字是否正确</span></span><br><span class="line">            <span class="keyword">if</span>(Choicenumber[i] &gt; <span class="number">0</span> &amp;&amp; Choicenumber[i] &lt; <span class="number">33</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt; i ; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(Choicenumber[i] == Choicenumber[j])</span><br><span class="line">                    &#123;</span><br><span class="line">                        cout &lt;&lt; <span class="string">&quot;您已经选过这个号码了，请重新输入(+﹏+)&quot;</span> &lt;&lt; endl;</span><br><span class="line">                        <span class="keyword">goto</span> Loop1;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;\033[36m选择错误：红球只能选择1~33号，请重新选择(*.*)\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class="line">                Choicenumber[i] = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">goto</span> Loop1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            Loop2:</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入\033[34m蓝球\033[0m(1~16) &quot;</span>;</span><br><span class="line">            cin &gt;&gt; Choicenumber[<span class="number">6</span>];</span><br><span class="line">            <span class="keyword">if</span>((Choicenumber[<span class="number">6</span>] &lt; <span class="number">1</span> || Choicenumber[<span class="number">6</span>] &gt; <span class="number">16</span>))&#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;\033[36m选择错误：蓝球只能选择1~16号，请重新选择(-.-)\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">goto</span> Loop2;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//彩票进行排序</span></span><br><span class="line">    <span class="type">int</span> temp = <span class="number">0</span>;<span class="comment">//用于交换的临时变量</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//内层循环控制正在进行第几次交换</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>-i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="comment">//只需要修改if判断条件中的&lt;号，就可以控制排序规则 例：大——&gt;小</span></span><br><span class="line">            <span class="keyword">if</span>(Choicenumber[j] &gt; Choicenumber[j<span class="number">+1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                temp = Choicenumber[j];</span><br><span class="line">                Choicenumber[j] = Choicenumber[j<span class="number">+1</span>];</span><br><span class="line">                Choicenumber[j<span class="number">+1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//打印选择的彩票</span></span><br><span class="line">    cout &lt;&lt;<span class="string">&quot;您选择的彩票号码是&quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">6</span> ; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\033[31m&quot;</span>&lt;&lt;Choicenumber[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\033[34m&quot;</span> &lt;&lt;Choicenumber[<span class="number">6</span>] &lt;&lt; <span class="string">&quot;\033[0m&quot;</span> &lt;&lt;endl;</span><br><span class="line">    Loop4:</span><br><span class="line">        <span class="comment">//初始化赢得的钱数</span></span><br><span class="line">        <span class="type">int</span> WINmoney = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//初始化赢钱次数</span></span><br><span class="line">        <span class="type">int</span> WIN5 =<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> WIN10 =<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> WIN200 =<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> WIN3000 = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> WIN500W = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> WIN1000W = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//购买期数</span></span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">        cout &lt;&lt;<span class="string">&quot;\033[33m请输入计划要买的期数(大于1)\033[0m：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; Periods;</span><br><span class="line">        <span class="keyword">if</span> (Periods &lt; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入不正确，\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">while</span>(Periods &lt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; Periods ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//实例化自建类</span></span><br><span class="line">        cout &lt;&lt;<span class="string">&quot;\033[33m&quot;</span>&lt;&lt; <span class="string">&quot;第 &quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot; 期&quot;</span> &lt;&lt; <span class="string">&quot;\033[0m&quot;</span>;</span><br><span class="line">        CL *P1 = <span class="keyword">new</span> <span class="built_in">CL</span>();</span><br><span class="line">        P1-&gt;<span class="built_in">setWINnumber</span>();     <span class="comment">//开始摇奖</span></span><br><span class="line">        P1-&gt;<span class="built_in">InfoWINnumber</span>();    <span class="comment">//显示中奖数字</span></span><br><span class="line">        P1-&gt;<span class="built_in">KJ</span>(Choicenumber);</span><br><span class="line">        <span class="comment">//P1-&gt;InfoKJ();</span></span><br><span class="line">        WINmoney = WINmoney + P1-&gt;money;  <span class="comment">//开奖</span></span><br><span class="line">        <span class="comment">//获得奖的次数</span></span><br><span class="line">        <span class="keyword">if</span>(P1-&gt;money == <span class="number">5</span> )&#123;</span><br><span class="line">            WIN5++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(P1-&gt;money == <span class="number">10</span> )&#123;</span><br><span class="line">            WIN10++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(P1-&gt;money == <span class="number">200</span> )&#123;</span><br><span class="line">            WIN200++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(P1-&gt;money == <span class="number">3000</span> )&#123;</span><br><span class="line">            WIN3000++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(P1-&gt;money == <span class="number">5000000</span> )&#123;</span><br><span class="line">            WIN500W++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(P1-&gt;money ==<span class="number">10000000</span>)&#123;</span><br><span class="line">            WIN1000W++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//释放缓存</span></span><br><span class="line">        <span class="keyword">delete</span> P1;</span><br><span class="line">        P1 = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="comment">//sleep(1);//控制速度开关</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;已经花费:&quot;</span>&lt;&lt; (i<span class="number">+1</span>)*<span class="number">2</span> &lt;&lt; <span class="string">&quot;\t&quot;</span>&lt;&lt;<span class="string">&quot;已赢得奖金：&quot;</span> &lt;&lt; WINmoney &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;获得5元 [&quot;</span> &lt;&lt; WIN5 &lt;&lt; <span class="string">&quot;] 次  &quot;</span></span><br><span class="line">             &lt;&lt; <span class="string">&quot;获得10元 [&quot;</span> &lt;&lt; WIN10 &lt;&lt; <span class="string">&quot;] 次  &quot;</span></span><br><span class="line">             &lt;&lt; <span class="string">&quot;获得200元 [&quot;</span> &lt;&lt; WIN200 &lt;&lt; <span class="string">&quot;] 次  &quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">             &lt;&lt; <span class="string">&quot;获得3000元 [&quot;</span> &lt;&lt; WIN3000 &lt;&lt; <span class="string">&quot;] 次  &quot;</span></span><br><span class="line">             &lt;&lt; <span class="string">&quot;获得500w [&quot;</span> &lt;&lt; WIN500W &lt;&lt; <span class="string">&quot;] 次  &quot;</span></span><br><span class="line">             &lt;&lt; <span class="string">&quot;获得1000w [&quot;</span> &lt;&lt; WIN1000W &lt;&lt; <span class="string">&quot;] 次&quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//退出菜单</span></span><br><span class="line">    cout &lt;&lt;<span class="string">&quot;\033[32m您本次选择的彩票号码是\033[0m  &quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">6</span> ; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\033[31m&quot;</span>&lt;&lt;Choicenumber[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\033[34m&quot;</span> &lt;&lt;Choicenumber[<span class="number">6</span>] &lt;&lt; <span class="string">&quot;\033[0m&quot;</span> &lt;&lt;endl;</span><br><span class="line">    <span class="type">int</span> ok = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\033[33m您可以重新选择购买期数或者重新选号&quot;</span></span><br><span class="line">         &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; <span class="string">&quot;1.重新选择购买期数&quot;</span></span><br><span class="line">         &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; <span class="string">&quot;2.重新选号&quot;</span></span><br><span class="line">         &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; <span class="string">&quot;3.退出系统\033[0m&quot;</span> &lt;&lt; endl;</span><br><span class="line">         cin &gt;&gt; ok;</span><br><span class="line">    &#125;<span class="keyword">while</span>(ok != <span class="number">1</span> &amp;&amp; ok != <span class="number">2</span> &amp;&amp; ok != <span class="number">3</span>);</span><br><span class="line">     <span class="keyword">if</span>(ok == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">goto</span> Loop4;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(ok == <span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">goto</span> Loop3;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="​运行图​不考虑瞎猫碰死耗子中1000w，大概扔100块回来25块的样子。好吧，彩票就是75-的赔率赌个希望。还是不考虑系统作弊的情况-理论上作弊轻轻松松。不过希望还是要有的，万一中了呢？23333再说比起某游开箱子的爆率想想还是挺-yi-良-yang-心-keng-的-die"><a href="#​运行图​不考虑瞎猫碰死耗子中1000w，大概扔100块回来25块的样子。好吧，彩票就是75-的赔率赌个希望。还是不考虑系统作弊的情况-理论上作弊轻轻松松。不过希望还是要有的，万一中了呢？23333再说比起某游开箱子的爆率想想还是挺-yi-良-yang-心-keng-的-die" class="headerlink" title="​运行图​不考虑瞎猫碰死耗子中1000w，大概扔100块回来25块的样子。好吧，彩票就是75%的赔率赌个希望。还是不考虑系统作弊的情况~~理论上作弊轻轻松松。不过希望还是要有的，万一中了呢？23333再说比起某游开箱子的爆率想想还是挺(yi)良(yang)心(keng)的(die)."></a>​运行图<br>​<img src="/2018/02/25/2018-2-25%E5%BD%A9%E7%A5%A8%E6%A8%A1%E6%8B%9F%E5%99%A8/1.png" alt="栖木"><br><img src="/2018/02/25/2018-2-25%E5%BD%A9%E7%A5%A8%E6%A8%A1%E6%8B%9F%E5%99%A8/2.png" alt="栖木"><br><img src="/2018/02/25/2018-2-25%E5%BD%A9%E7%A5%A8%E6%A8%A1%E6%8B%9F%E5%99%A8/3.png" alt="栖木"><br><img src="/2018/02/25/2018-2-25%E5%BD%A9%E7%A5%A8%E6%A8%A1%E6%8B%9F%E5%99%A8/4.png" alt="栖木"><br>不考虑瞎猫碰死耗子中1000w，大概扔100块回来25块的样子。<br>好吧，彩票就是75%的赔率赌个希望。<br>还是不考虑系统作弊的情况~~理论上作弊轻轻松松。<br>不过希望还是要有的，万一中了呢？23333<br>再说比起某游开箱子的爆率想想还是挺(yi)良(yang)心(keng)的(die).</h2><p>遇到的坑rand（）生成随机数一样<br>#include &lt;stdlib.h&gt;<br>srand( (unsigned)time( NULL ) );&#x2F;&#x2F;设置随机数种子</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C&amp;#43&amp;#43 </tag>
            
            <tag> 小项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript算法挑战</title>
      <link href="/2018/02/22/2018-02-22JavaScript%E7%AE%97%E6%B3%95%E6%8C%91%E6%88%98/"/>
      <url>/2018/02/22/2018-02-22JavaScript%E7%AE%97%E6%B3%95%E6%8C%91%E6%88%98/</url>
      
        <content type="html"><![CDATA[<!--top--><h1 id="freecodecamp中的算法挑战"><a href="#freecodecamp中的算法挑战" class="headerlink" title="freecodecamp中的算法挑战."></a>freecodecamp中的算法挑战.</h1><h2 id="1-先把字符串转化成数组，再借助数组的reverse方法翻转数组顺序，最后把数组转化成字符串。"><a href="#1-先把字符串转化成数组，再借助数组的reverse方法翻转数组顺序，最后把数组转化成字符串。" class="headerlink" title="1.先把字符串转化成数组，再借助数组的reverse方法翻转数组顺序，最后把数组转化成字符串。"></a>1.先把字符串转化成数组，再借助数组的reverse方法翻转数组顺序，最后把数组转化成字符串。</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">reverseString</span>(<span class="params">str</span>) &#123;</span><br><span class="line">  <span class="comment">// 请把你的代码写在这里</span></span><br><span class="line">  <span class="keyword">var</span> a = [];</span><br><span class="line">  a = str.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  a.<span class="title function_">reverse</span>();</span><br><span class="line">  str =a.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">reverseString</span>(<span class="string">&quot;hello&quot;</span>);</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="2-检查回文字符串"><a href="#2-检查回文字符串" class="headerlink" title="2.检查回文字符串"></a>2.检查回文字符串</h2><p>如果给定的字符串是回文，返回true，反之，返回false。<br>如果一个字符串忽略标点符号、大小写和空格，正着读和反着读一模一样，那么这个字符串就是palindrome(回文)。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">palindrome</span>(<span class="params">str</span>) &#123;</span><br><span class="line">  <span class="comment">// 请把你的代码写在这里</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> a = str.<span class="title function_">replace</span>(<span class="regexp">/[\W\s_]/g</span>,<span class="string">&quot;&quot;</span>).<span class="title function_">toLowerCase</span>();</span><br><span class="line">  <span class="keyword">var</span> b = a.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span>(a==b)&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;      </span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">palindrome</span>(<span class="string">&quot;eye&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">confirmEnding</span>(<span class="string">&quot;Bastian&quot;</span>, <span class="string">&quot;n&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="3-找出最长单词"><a href="#3-找出最长单词" class="headerlink" title="3.找出最长单词"></a>3.找出最长单词</h2><p>在句子中找出最长的单词，并返回它的长度。<br>函数的返回值应该是一个数字。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">findLongestWord</span>(<span class="params">str</span>) &#123;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 请把你的代码写在这里</span></span><br><span class="line">  str = str.<span class="title function_">split</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">  <span class="comment">//冒泡排序</span></span><br><span class="line">  <span class="keyword">var</span> max = str[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span> ; i &lt; str.<span class="property">length</span>; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(max.<span class="property">length</span> &lt; str[i].<span class="property">length</span>)&#123;</span><br><span class="line">      max = str[i];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> max.<span class="property">length</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">findLongestWord</span>(<span class="string">&quot;The quick brown fox jumped over the lazy dog&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="4-句中单词首字母大写"><a href="#4-句中单词首字母大写" class="headerlink" title="4.句中单词首字母大写"></a>4.句中单词首字母大写</h2><p>确保字符串的每个单词首字母都大写，其余部分小写。<br>像’the’和’of’这样的连接符同理。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">titleCase</span>(<span class="params">str</span>) &#123;</span><br><span class="line">  <span class="comment">// 请把你的代码写在这里</span></span><br><span class="line">  str = str.<span class="title function_">replace</span>(<span class="regexp">/\b\S+\b/g</span>, <span class="keyword">function</span>(<span class="params">word</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> word.<span class="title function_">substring</span>(<span class="number">0</span>,<span class="number">1</span>).<span class="title function_">toUpperCase</span>()+word.<span class="title function_">substring</span>(<span class="number">1</span>).<span class="title function_">toLowerCase</span>();&#125;</span><br><span class="line">);</span><br><span class="line">  <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">titleCase</span>(<span class="string">&quot;I&#x27;m a little tea pot&quot;</span>);</span><br></pre></td></tr></table></figure><p>方法2 for+replace</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">titleCase</span>(<span class="params">str</span>) &#123;</span><br><span class="line">  <span class="comment">// 请把你的代码写在这里</span></span><br><span class="line">  str = str.<span class="title function_">toLowerCase</span>();</span><br><span class="line">  str = str.<span class="title function_">split</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str.<span class="property">length</span>; i++) &#123;  </span><br><span class="line">        <span class="keyword">var</span> char = str[i].<span class="title function_">charAt</span>(<span class="number">0</span>);  </span><br><span class="line">        <span class="comment">//使用 replace()方法将数组中的每个首字母大写化  </span></span><br><span class="line">        str[i] = str[i].<span class="title function_">replace</span>(char, <span class="keyword">function</span> <span class="title function_">replace</span>(<span class="params">char</span>) &#123;  </span><br><span class="line">            <span class="keyword">return</span> char.<span class="title function_">toUpperCase</span>();  </span><br><span class="line">        &#125;);  </span><br><span class="line">    &#125;                                                </span><br><span class="line">  <span class="keyword">return</span> str.<span class="title function_">join</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">titleCase</span>(<span class="string">&quot;I&#x27;m a little tea pot&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="5-找出多个数组中的最大数"><a href="#5-找出多个数组中的最大数" class="headerlink" title="5.找出多个数组中的最大数"></a>5.找出多个数组中的最大数</h2><p>右边大数组中包含了4个小数组，分别找到每个小数组中的最大值，然后把它们串联起来，形成一个新数组。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">largestOfFour</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="comment">// 请把你的代码写在这里</span></span><br><span class="line">  <span class="keyword">var</span> a = [];</span><br><span class="line">  </span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++)&#123;</span><br><span class="line">     <span class="keyword">var</span> max = arr[i][<span class="number">0</span>];</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">1</span> ; j &lt; arr[i].<span class="property">length</span>; j++)&#123;</span><br><span class="line">       <span class="keyword">if</span>(max &lt; arr[i][j])&#123;</span><br><span class="line">         max = arr[i][j]; </span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line">    a.<span class="title function_">push</span>(max);</span><br><span class="line">   &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">largestOfFour</span>([[<span class="number">4</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">3</span>], [<span class="number">13</span>, <span class="number">27</span>, <span class="number">18</span>, <span class="number">26</span>], [<span class="number">32</span>, <span class="number">35</span>, <span class="number">37</span>, <span class="number">39</span>], [<span class="number">1000</span>, <span class="number">1001</span>, <span class="number">857</span>, <span class="number">1</span>]]);</span><br></pre></td></tr></table></figure><h2 id="6-检查字符串结尾"><a href="#6-检查字符串结尾" class="headerlink" title="6.检查字符串结尾"></a>6.检查字符串结尾</h2><p>判断一个字符串(str)是否以指定的字符串(target)结尾。<br>如果是，返回true;如果不是，返回false。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">confirmEnding</span>(<span class="params">str, target</span>) &#123;</span><br><span class="line">  <span class="comment">// 请把你的代码写在这里</span></span><br><span class="line">  <span class="keyword">var</span> a = target.<span class="property">length</span>;</span><br><span class="line">  <span class="keyword">if</span>(str.<span class="title function_">substr</span>(-a,a) == target)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;  </span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">confirmEnding</span>(<span class="string">&quot;Bastian&quot;</span>, <span class="string">&quot;n&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="7-重复输出字符串"><a href="#7-重复输出字符串" class="headerlink" title="7.重复输出字符串"></a>7.重复输出字符串</h2><p>（重要的事情说3遍）<br>重复一个指定的字符串 num次，如果num是一个负数则返回一个空字符串。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">repeat</span>(<span class="params">str, num</span>) &#123;</span><br><span class="line">  <span class="comment">// 请把你的代码写在这里</span></span><br><span class="line">  <span class="keyword">var</span> a = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span> (str &lt; <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; num;i++)&#123;</span><br><span class="line">    a = a.<span class="title function_">concat</span>(str);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">repeat</span>(<span class="string">&quot;abc&quot;</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure><h2 id="8-如果字符串的长度比指定的参数num长，则把多余的部分用…来表示。"><a href="#8-如果字符串的长度比指定的参数num长，则把多余的部分用…来表示。" class="headerlink" title="8.如果字符串的长度比指定的参数num长，则把多余的部分用…来表示。"></a>8.如果字符串的长度比指定的参数num长，则把多余的部分用…来表示。</h2><p>切记，插入到字符串尾部的三个点号也会计入字符串的长度。<br>但是，如果指定的参数num小于或等于3，则添加的三个点号不会计入字符串的长度。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">truncate</span>(<span class="params">str, num</span>) &#123;</span><br><span class="line">  <span class="comment">// 请把你的代码写在这里</span></span><br><span class="line">  <span class="keyword">var</span> a = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> strLen = str.<span class="property">length</span>;</span><br><span class="line">  <span class="keyword">if</span>(num &gt;= strLen)&#123;</span><br><span class="line">    a = str;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(num &lt;= <span class="number">3</span>)&#123;</span><br><span class="line">       a = str.<span class="title function_">substr</span>(<span class="number">0</span>,num).<span class="title function_">concat</span>(<span class="string">&quot;...&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      a = str.<span class="title function_">substr</span>(<span class="number">0</span>,num-<span class="number">3</span>).<span class="title function_">concat</span>(<span class="string">&quot;...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">truncate</span>(<span class="string">&quot;A-tisket a-tasket A green and yellow basket&quot;</span>, <span class="number">11</span>);</span><br></pre></td></tr></table></figure><h2 id="9-把一个数组arr按照指定的数组大小size分割成若干个数组块。"><a href="#9-把一个数组arr按照指定的数组大小size分割成若干个数组块。" class="headerlink" title="9.把一个数组arr按照指定的数组大小size分割成若干个数组块。"></a>9.把一个数组arr按照指定的数组大小size分割成若干个数组块。</h2><p>例如:chunk([1,2,3,4],2)&#x3D;[[1,2],[3,4]];<br>chunk([1,2,3,4,5],2)&#x3D;[[1,2],[3,4],[5]];</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">chunk</span>(<span class="params">arr, size</span>) &#123;</span><br><span class="line">  <span class="comment">// 请把你的代码写在这里</span></span><br><span class="line">  <span class="keyword">var</span> a = [];</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i &lt; arr.<span class="property">length</span>/size;i++)&#123;</span><br><span class="line">  a.<span class="title function_">push</span>(arr.<span class="title function_">slice</span>(i*size,i*size+size));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">chunk</span>([<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>], <span class="number">2</span>);</span><br></pre></td></tr></table></figure><h2 id="10-截断数组"><a href="#10-截断数组" class="headerlink" title="10.截断数组"></a>10.截断数组</h2><p>返回一个数组被截断n个元素后还剩余的元素，截断从索引0开始。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">slasher</span>(<span class="params">arr, howMany</span>) &#123;</span><br><span class="line">  <span class="comment">// 请把你的代码写在这里</span></span><br><span class="line">  arr.<span class="title function_">splice</span>(<span class="number">0</span>,howMany);</span><br><span class="line">  <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">slasher</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], <span class="number">2</span>);</span><br></pre></td></tr></table></figure><h2 id="11-比较字符串"><a href="#11-比较字符串" class="headerlink" title="11.比较字符串"></a>11.比较字符串</h2><p>（蛤蟆可以吃队友，也可以吃对手）<br>如果数组第一个字符串元素包含了第二个字符串元素的所有字符，函数返回true。<br>举例，[“hello”, “Hello”]应该返回true，因为在忽略大小写的情况下，第二个字符串的所有字符都可以在第一个字符串找到。<br>[“hello”, “hey”]应该返回false，因为字符串”hello”并不包含字符”y”。<br>[“Alien”, “line”]应该返回true，因为”line”中所有字符都可以在”Alien”找到。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">mutation</span>(<span class="params">arr</span>)&#123;</span><br><span class="line">  <span class="comment">// 请把你的代码写在这里</span></span><br><span class="line">  <span class="keyword">var</span> str1=arr[<span class="number">0</span>].<span class="title function_">toLowerCase</span>();</span><br><span class="line">  <span class="keyword">var</span> str2=arr[<span class="number">1</span>].<span class="title function_">toLowerCase</span>();</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str2.<span class="property">length</span>; i++)&#123;</span><br><span class="line">   <span class="keyword">if</span>(str1.<span class="title function_">indexOf</span>(str2[i]) == -<span class="number">1</span>) &#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">mutation</span>([<span class="string">&quot;hello&quot;</span>, <span class="string">&quot;hey&quot;</span>]);</span><br></pre></td></tr></table></figure><h2 id="12-过滤数组假值"><a href="#12-过滤数组假值" class="headerlink" title="12.过滤数组假值"></a>12.过滤数组假值</h2><p>（真假美猴王）<br>删除数组中的所有假值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">bouncer</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="comment">// 请把你的代码写在这里</span></span><br><span class="line">  arr = arr.<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">b</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Boolean</span>(b);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">bouncer</span>([<span class="literal">false</span>, <span class="literal">null</span>, <span class="number">0</span>, <span class="title class_">NaN</span>, <span class="literal">undefined</span>, <span class="string">&quot;&quot;</span>]);</span><br></pre></td></tr></table></figure><h2 id="13-摧毁数组"><a href="#13-摧毁数组" class="headerlink" title="13.摧毁数组"></a>13.摧毁数组</h2><p>金克斯的迫击炮！<br>实现一个摧毁(destroyer)函数，第一个参数是待摧毁的数组，其余的参数是待摧毁的值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">destroyer</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="comment">// 请把你的代码写在这里</span></span><br><span class="line">  <span class="keyword">var</span> temp = [];</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span> ; i &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>;i++)&#123;</span><br><span class="line">   temp.<span class="title function_">push</span>(<span class="variable language_">arguments</span>[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> a = arr.<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">b</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> temp.<span class="title function_">indexOf</span>(b) &lt; <span class="number">0</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">destroyer</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], <span class="number">2</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure><h2 id="14-Where-do-I-belong"><a href="#14-Where-do-I-belong" class="headerlink" title="14.Where do I belong"></a>14.Where do I belong</h2><p>数组排序并找出元素索引<br>我身在何处？<br>先给数组排序，然后找到指定的值在数组的位置，最后返回位置对应的索引。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">where</span>(<span class="params">arr, num</span>) &#123;</span><br><span class="line">  <span class="comment">// 请把你的代码写在这里</span></span><br><span class="line">  arr.<span class="title function_">push</span>(num);</span><br><span class="line">  arr.<span class="title function_">sort</span>(<span class="keyword">function</span>(<span class="params">a, b</span>) &#123; </span><br><span class="line">    <span class="keyword">return</span> a - b;</span><br><span class="line">   &#125;);</span><br><span class="line">  <span class="keyword">return</span> arr.<span class="title function_">indexOf</span>(num);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">where</span>([<span class="number">40</span>, <span class="number">60</span>], <span class="number">50</span>);</span><br></pre></td></tr></table></figure><h2 id="15-凯撒密码"><a href="#15-凯撒密码" class="headerlink" title="15.凯撒密码"></a>15.凯撒密码</h2><p>（让上帝的归上帝，凯撒的归凯撒）<br>下面我们来介绍风靡全球的凯撒密码Caesar cipher，又叫移位密码。<br>移位密码也就是密码中的字母会按照指定的数量来做移位。<br>一个常见的案例就是ROT13密码，字母会移位13个位置。由’A’ ↔ ‘N’, ‘B’ ↔ ‘O’，以此类推。<br>写一个ROT13函数，实现输入加密字符串，输出解密字符串。<br>所有的字母都是大写，不要转化任何非字母形式的字符(例如：空格，标点符号)，遇到这些特殊字符，跳过它们。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">rot13</span>(<span class="params">str</span>) &#123; <span class="comment">// LBH QVQ VG!</span></span><br><span class="line">  <span class="comment">// 请把你的代码写在这里</span></span><br><span class="line">    <span class="keyword">var</span> arr=str.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++)&#123;</span><br><span class="line">      num = arr[i].<span class="title function_">charCodeAt</span>();</span><br><span class="line">      <span class="comment">//65~(90-13)</span></span><br><span class="line">     <span class="keyword">if</span>(num &gt;= <span class="number">65</span> &amp;&amp; num &lt;= <span class="number">77</span>)&#123;</span><br><span class="line">        arr[i] = <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(arr[i].<span class="title function_">charCodeAt</span>() + <span class="number">13</span>);</span><br><span class="line">      </span><br><span class="line">       &#125;<span class="keyword">else</span> <span class="keyword">if</span>(num &gt; <span class="number">77</span> &amp;&amp; num &lt;=<span class="number">90</span>)&#123;</span><br><span class="line">         <span class="comment">//+13-90+64</span></span><br><span class="line">         arr[i] = <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(arr[i].<span class="title function_">charCodeAt</span>() -<span class="number">13</span> );</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr.<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">rot13</span>(<span class="string">&quot;SERR PBQR PNZC&quot;</span>);  <span class="comment">// 你可以修改这一行来测试你的代码</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基本排序算法</title>
      <link href="/2018/02/19/2018-02-19%E5%9F%BA%E6%9C%AC%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
      <url>/2018/02/19/2018-02-19%E5%9F%BA%E6%9C%AC%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>排序算法做个复习总结</p><span id="more"></span><h2 id="待更新"><a href="#待更新" class="headerlink" title="(待更新)"></a>(待更新)</h2><h1 id="基本排序算法"><a href="#基本排序算法" class="headerlink" title="基本排序算法"></a>基本排序算法</h1><table><thead><tr><th>排序法</th><th>最差时间分析</th><th>平均时间复杂度</th><th>稳定度</th><th>空间复杂度</th></tr></thead><tbody><tr><td>冒泡排序</td><td>O(n2)</td><td>O(n2)</td><td>稳定</td><td>O(1)</td></tr><tr><td>选择排序</td><td>O(n2)</td><td>O(n2)</td><td>稳定</td><td>O(1)</td></tr><tr><td>快速排序</td><td>O(n2)</td><td>O(n*log2n)</td><td>不稳定</td><td>O(log2n)~O(n)</td></tr><tr><td>二叉树排序</td><td>O(n2)</td><td>O(n*log2n)</td><td>不稳定</td><td>O(n)</td></tr><tr><td>插入排序</td><td>O(n2)</td><td>O(n2)</td><td>稳定</td><td>O(1)</td></tr><tr><td>堆排序</td><td>O(n*log2n)</td><td>O(n*log2n)</td><td>不稳定</td><td>O(1)</td></tr><tr><td>希尔排序</td><td>O</td><td>O</td><td>不稳定</td><td>O(1)</td></tr><tr><td>归并排序</td><td>O(nlog n)</td><td></td><td></td><td></td></tr></tbody></table><p>选择排序和冒泡排序相比较,比较次数基本一致.交换次数少了.</p><h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="type">int</span> nums[] = &#123; <span class="number">55</span>, <span class="number">18</span> , <span class="number">33</span> , <span class="number">22</span> , <span class="number">6</span>, <span class="number">23</span> &#125;;</span><br><span class="line">     <span class="type">int</span> numslen = <span class="built_in">sizeof</span>(nums) / <span class="built_in">sizeof</span>(<span class="type">int</span>);</span><br><span class="line">     <span class="type">int</span> temp = <span class="number">0</span>;</span><br><span class="line">     <span class="type">int</span> min = nums[<span class="number">0</span>];</span><br><span class="line">     <span class="type">int</span> minIndex = <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; numslen - <span class="number">1</span>; i++)&#123;</span><br><span class="line">         <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; numslen - i; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[j] &gt; min)&#123;</span><br><span class="line">                min = nums[j];</span><br><span class="line">                minIndex = j;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">//少比较一次</span></span><br><span class="line">         <span class="keyword">if</span>(minIndex &gt; i)&#123;</span><br><span class="line">           temp = nums[minIndex];</span><br><span class="line">           nums[minIndex] = nums[i];</span><br><span class="line">           nums[i] = temp;</span><br><span class="line">     &#125;</span><br><span class="line">     cout &lt;&lt; <span class="string">&quot;选择排序后:&quot;</span> &lt;&lt; endl;</span><br><span class="line">     <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; numslen ; i++)&#123;</span><br><span class="line">         cout &lt;&lt; nums2[i] &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="type">int</span> nums2[] = &#123; <span class="number">55</span>, <span class="number">18</span> , <span class="number">33</span> , <span class="number">22</span> , <span class="number">6</span>, <span class="number">23</span> &#125;;</span><br><span class="line">     <span class="type">int</span> numslen = <span class="built_in">sizeof</span>(nums) / <span class="built_in">sizeof</span>(<span class="type">int</span>);</span><br><span class="line">     <span class="type">int</span> temp2 = <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; numslen - <span class="number">1</span>; i++)&#123;</span><br><span class="line">         <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; numslen - i - <span class="number">1</span>; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums2[j] &gt; nums2[j<span class="number">+1</span>])&#123;</span><br><span class="line">                temp2 = nums2[j];</span><br><span class="line">                nums2[j] = nums2[j<span class="number">+1</span>];</span><br><span class="line">                nums2[j<span class="number">+1</span>] = temp2;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     cout &lt;&lt; <span class="string">&quot;冒泡排序后:&quot;</span> &lt;&lt; endl;</span><br><span class="line">     <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; numslen ; i++)&#123;</span><br><span class="line">         cout &lt;&lt; nums2[i] &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">     &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>兔子和老虎</title>
      <link href="/2018/02/18/2018-2-18%E5%85%94%E5%AD%90%E5%92%8C%E8%80%81%E8%99%8E/"/>
      <url>/2018/02/18/2018-2-18%E5%85%94%E5%AD%90%E5%92%8C%E8%80%81%E8%99%8E/</url>
      
        <content type="html"><![CDATA[<p><em>围绕着山顶有10个洞，一只兔子和一只老虎住在各自的洞里，老虎总想吃掉兔子，<br>一天兔子对老虎说，你想吃我有一个条件，你先把洞编号1到10，你从第10洞出发，<br>先到第1号洞找我，第二次隔一个洞找我，第三次隔两个洞找我，以后依次类推，次数不限，<br>若能找到我你就可以饱餐一顿，在没找到我之前不能停止，老虎一想只有10个洞，寻找的次数又不限，<br>哪有找不到的道理，就答应了条件，结果老虎跑得昏了过去也没找到兔子，请问兔子躲在哪个洞里。<br>程序中可假定老虎找了1000次</em></p><span id="more"></span><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> i; <span class="comment">//设置兔子所在洞</span></span><br><span class="line"><span class="type">int</span> j; <span class="comment">//老虎寻找次数</span></span><br><span class="line"><span class="type">int</span> Tiger_Seat;<span class="comment">//老虎位置</span></span><br><span class="line"><span class="type">int</span> p; <span class="comment">//判断变量</span></span><br><span class="line"><span class="type">int</span> Tiger_Selection_times;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入老虎寻找次数\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;Tiger_Selection_times );</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">1</span>;i &lt;= <span class="number">10</span>;i++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;放入兔子在%d号洞\n&quot;</span>,i ); <span class="comment">//设置兔子所在的洞</span></span><br><span class="line"><span class="type">int</span> Tiger_Seat = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">1</span>;j&lt;= Tiger_Selection_times;j++ )&#123;</span><br><span class="line">loop:<span class="keyword">if</span>(Tiger_Seat &lt;= <span class="number">10</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(i == Tiger_Seat)&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;老虎在第%d次寻找后在%d号洞找到兔子\n&quot;</span>,j,i);</span><br><span class="line">p = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">Tiger_Seat = Tiger_Seat + j;<span class="comment">//这里修改寻找规则</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//超过10号洞处理，也可以直接写前面。</span></span><br><span class="line">Tiger_Seat = Tiger_Seat%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">goto</span> loop;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(p == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\033[32m兔子在%d号洞暂时安全\033[0m\n&quot;</span>,i );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 小项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS-标准盒模型与怪异盒模型</title>
      <link href="/2018/02/12/2018-02-12CSS-%E6%A0%87%E5%87%86%E7%9B%92%E6%A8%A1%E5%9E%8B%E4%B8%8E%E6%80%AA%E5%BC%82%E7%9B%92%E6%A8%A1%E5%9E%8B/"/>
      <url>/2018/02/12/2018-02-12CSS-%E6%A0%87%E5%87%86%E7%9B%92%E6%A8%A1%E5%9E%8B%E4%B8%8E%E6%80%AA%E5%BC%82%E7%9B%92%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<!--top--><h1 id="一、标准盒模型（w3c-盒子模型）和-怪异盒模型（IE-盒子模型）"><a href="#一、标准盒模型（w3c-盒子模型）和-怪异盒模型（IE-盒子模型）" class="headerlink" title="一、标准盒模型（w3c 盒子模型）和 怪异盒模型（IE 盒子模型）"></a>一、标准盒模型（w3c 盒子模型）和 怪异盒模型（IE 盒子模型）</h1><p>图：<br><img src="/2018/02/12/2018-02-12CSS-%E6%A0%87%E5%87%86%E7%9B%92%E6%A8%A1%E5%9E%8B%E4%B8%8E%E6%80%AA%E5%BC%82%E7%9B%92%E6%A8%A1%E5%9E%8B/1.png" alt="栖木"><br><img src="/2018/02/12/2018-02-12CSS-%E6%A0%87%E5%87%86%E7%9B%92%E6%A8%A1%E5%9E%8B%E4%B8%8E%E6%80%AA%E5%BC%82%E7%9B%92%E6%A8%A1%E5%9E%8B/2.png" alt="栖木"></p><span id="more"></span><h2 id="1-1标准盒模型（w3c-盒子模型）和-怪异盒模型（IE-盒子模型）："><a href="#1-1标准盒模型（w3c-盒子模型）和-怪异盒模型（IE-盒子模型）：" class="headerlink" title="1-1标准盒模型（w3c 盒子模型）和 怪异盒模型（IE 盒子模型）："></a>1-1标准盒模型（w3c 盒子模型）和 怪异盒模型（IE 盒子模型）：</h2><p>共同点:<br>都分为margin、border、padding、content。</p><p>区别：<br>w3c 盒子模型 width和height圈住的部分就是content，不包含 border 和 padding。<br>IE 盒子模型 width和height圈住的部分除了content 还包含 border 和 padding。<br>正是由于有这个区别，浏览器解读时会造成困扰。</p><h1 id="二、怪异模式"><a href="#二、怪异模式" class="headerlink" title="二、怪异模式"></a>二、怪异模式</h1><p>为了正确解读这两个标准，浏览器出现了两个模式。<br>一种我们称为“标准模式”（支持w3c盒子）一种我们称之为”怪异模式“（支持IE盒子）<br>部分浏览器在支持W3C标准的同时也支持IE标准。</p><h2 id="2-1两种模式相互识别"><a href="#2-1两种模式相互识别" class="headerlink" title="2-1两种模式相互识别"></a>2-1两种模式相互识别</h2><p>1.IE某些版本不对doctype进行定义时，会触发怪异模式。了解更多<br><a href="https://hsivonen.fi/doctype/">https://hsivonen.fi/doctype/</a></p><p>2.解决办法。在代码顶部加如下的 doctype 声明，</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype <span class="selector-tag">html</span> public “-//w3c//dtd xhtml <span class="number">1.0</span> transitional//en” “http://www.w3.org/tr/xhtml1/dtd/xhtml1-transitional.dtd<span class="string">&quot;&gt;</span></span><br></pre></td></tr></table></figure><p>使页面以W3C盒子模型渲染。</p><p>3.CSS3的box-sizing可以定义识别怪异模式</p><p>box-sizing语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">box-sizing</span> ： <span class="attribute">content</span>-box || <span class="attribute">border</span>-box || inherit;</span><br></pre></td></tr></table></figure><p>当设置为box-sizing:content-box时，将采用标准模式解析计算，也是默认模式；<br>当设置为box-sizing:border-box时，将采用怪异模式解析计算；<br>当设置为box-sizing:inherit 规定应从父元素继承 box-sizing 属性的值。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-webkit-<span class="attribute">box-sizing</span>: content-box; //safari</span><br><span class="line">-moz-<span class="attribute">box-sizing</span>: content-box;  //firefox</span><br></pre></td></tr></table></figure><h1 id="三、参考"><a href="#三、参考" class="headerlink" title="三、参考"></a>三、参考</h1><p><a href="http://www.w3school.com.cn/css/css_boxmodel.asp">http://www.w3school.com.cn/css/css_boxmodel.asp</a><br><a href="http://blog.csdn.net/dong_pt/article/details/51281372">http://blog.csdn.net/dong_pt/article/details/51281372</a><br><a href="http://blog.csdn.net/quguang65265/article/details/50970601">http://blog.csdn.net/quguang65265/article/details/50970601</a></p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 前端 </tag>
            
            <tag> CSS </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>熬鸡汤什么时候放盐</title>
      <link href="/2018/02/10/2018-02-10%E7%86%AC%E9%B8%A1%E6%B1%A4%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E6%94%BE%E7%9B%90/"/>
      <url>/2018/02/10/2018-02-10%E7%86%AC%E9%B8%A1%E6%B1%A4%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E6%94%BE%E7%9B%90/</url>
      
        <content type="html"><![CDATA[<p>听说天气冷和参鸡汤更配哦<br>外面那么冷so自己在家做吧<br>But先放盐？后放盐?</p><span id="more"></span><p>问度娘<br>input:鸡汤先放盐后放盐 -&gt; search</p><p>放盐的时间在某种意义上能主宰鸡汤的口味。不管是下锅时就放盐，还是半熟时放，都不对。炖鸡如果先放盐，会直接影响到鸡肉、鸡汤的口味、特色及营养素的保存。<br>因为鸡肉含水分较高，有的高达65%～90%。而食盐具有脱水作用，如果在炖制时先放盐，使鸡肉在盐水和咸汤中浸泡，组织中的水分向外渗透，蛋白质被凝固，鸡肉组织明显收缩变紧，影响营养向汤中溶解，妨碍汤汁的浓度和质量，使炖熟后的鸡肉变硬、变老，汤无香味。<br>因此，炖鸡时正确放盐法是，将炖好的鸡汤降温至80至90摄氏度时，再加适量的盐，这样鸡汤及肉质口感最好。喝之前再加少许盐，这样可以限制盐的摄入。此外，浓汤宝中也含大量盐，熬汤时尽量不要放。<br>放盐后转大火10分钟再停火，中途不揭盖，不光味道全进去了，而且汤味更浓。注意，放盐进去后不要搅拌，那会留下一股生盐味。<br>不单单是煲鸡汤放盐时机有讲究，任何时候做菜放盐也有讲究，下面为您介绍：<br>1、烹制结束时放盐。烹制爆肉片、回锅肉、炒白菜、炒蒜薹、炒芹菜时，全部煸炒透时适量放盐，炒出来的菜肴嫩而不老，养分损失较少。<br>2、烹调前先放盐的菜肴。蒸制块肉时，蒸前要将盐、调味品一次放足。烧整条鱼、炸鱼块时，在烹制前先用适量的盐稍微腌渍再烹制，有助于咸味渗入肉体。<br>3、食前才放盐的菜。凉拌菜如凉拌莴苣、黄瓜，放盐过早，会使其汁液外溢，失去脆感，食前放盐更脆爽可口。<br>4、在刚烹制时就放盐。做红烧肉、红烧鱼块时，肉经煸、鱼经煎后，即应放入盐及调味品，然后旺火烧开，小火煨炖。<br>5.烹熟后放盐的菜。肉汤、骨头汤、腿爪汤、鸡汤、鸭汤等荤汤在熟烂后放盐调味，可使肉中蛋白质、脂肪较充分地溶在汤中，使汤更鲜美。炖豆腐时也应熟后放盐，与荤汤同理。<br>1、宰活鸡吃冻鸡。买活鸡自然不用说了，主要是为了保证肉味的鲜美。鲜鸡买回来之后，应该先放冰箱冷冻室冰冻3个小时左右再拿出来解冻煮汤。这么做，跟排酸肉的原理是相同的，这样的鸡肉肉质才是最好的，做出来的汤味道才会更鲜美。<br>2、必需的步骤：飞水。飞水也是有技巧的，如果是冷水煮肉，从冷水到煮沸，肉的营养就会严重流失。最适宜在温水时下锅，然后煮七到八分钟，在煮的过程中，适时地翻动肉块。当然，开水下锅也可以，煮三到五分钟。<br>3、炊具选瓦罐。有实验表明，使用瓦罐熬制的鸡汤色泽乳白，滋味鲜美清甜，口感醇厚，香味浓郁、肉质细腻，在色泽、滋味、香气、肉质四个方面均优于高压锅和电磁炉熬制的鸡汤。因为瓦罐能均衡而持久地把外界热能传递给里面的原料，从而使熬出的汤滋味更鲜醇，原料更酥烂。<br>4、加水量是食材重量的3倍。水既是鲜香食品的溶剂，又是食品传热的介质。水温的变化、用量的多少，对汤的风味有着直接的影响。因此，煲汤时加水量一定要充足，既不直接用沸水煨汤，也不中途加冷水，以使食品中的营养物质缓慢地溢出，最终达到汤色清澈的效果。<br>5、大火烧沸，小火慢煨。旺火能让食品内的鲜香物质尽可能地溶解出来，而文火能使营养物质溶出得更多，而且汤色清澈，味道浓醇。<br>6、时间别超过2小时。在食材允许的情况下，熬汤的时间一定要尽可能短，否则容易破坏食物中的氨基酸类物质，使嘌呤含量增高，营养成分流失。鱼汤的最佳熬制时间在1小时左右，鸡汤、排骨汤一般在1~2小时左右。</p><p>后放盐-&gt;right！<br>But出锅放。。。<br>完全不入味嘛.<br>扔掉手机</p><h1 id="set出锅前10分钟放。"><a href="#set出锅前10分钟放。" class="headerlink" title="set出锅前10分钟放。"></a>set出锅前10分钟放。</h1><h1 id="return美味鸡汤-1"><a href="#return美味鸡汤-1" class="headerlink" title="return美味鸡汤*1"></a>return美味鸡汤*1</h1>]]></content>
      
      
      <categories>
          
          <category> 美食 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美食 </tag>
            
            <tag> 中餐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚函数的使用方法</title>
      <link href="/2018/02/01/2018-02-01%E8%99%9A%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2018/02/01/2018-02-01%E8%99%9A%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>Virtual是C++ OO机制中很重要的一个关键字。在类Base中加了Virtual关键字的函数就是虚拟函数。<br>基类的函数调用如果有virtual则根据多态性调用派生类的，如果没有virtual则是正常的静态函数调用，还是调用基类的。</p><p>例子：</p><span id="more"></span><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Enemy</span> &#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="comment">//virual关键字</span></span><br><span class="line">        <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">attack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Enemy!&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Ninja</span>: <span class="keyword">public</span> Enemy &#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">attack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Ninja!&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Monster</span>: <span class="keyword">public</span> Enemy &#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">attack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Monster!&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//⽤定义好的类创建⼀个对象n m e</span></span><br><span class="line">    Ninja n;</span><br><span class="line">    Monster m;</span><br><span class="line">    Enemy e;</span><br><span class="line">    <span class="comment">//设置指针指向三个对象地址</span></span><br><span class="line">    Enemy *e1 = &amp;n;</span><br><span class="line">    Enemy *e2 = &amp;m;</span><br><span class="line">    Enemy *e3 = &amp;e;</span><br><span class="line"></span><br><span class="line">    e1-&gt;<span class="built_in">attack</span>();</span><br><span class="line">    <span class="comment">// Outputs &quot;Ninja!&quot;</span></span><br><span class="line"></span><br><span class="line">    e2-&gt;<span class="built_in">attack</span>();</span><br><span class="line">    <span class="comment">// Outputs &quot;Monster!&quot;</span></span><br><span class="line"></span><br><span class="line">    e3-&gt;<span class="built_in">attack</span>();</span><br><span class="line">    <span class="comment">// Outputs &quot;Enemy!&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果把 程序中的virtual关键字删掉</p><p>outputs均为”Enemy!”</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> C&amp;#43&amp;#43 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>方法（method）和函数（function）有什么区别？</title>
      <link href="/2018/01/31/2018-1-31%E6%96%B9%E6%B3%95%EF%BC%88method%EF%BC%89%E5%92%8C%E5%87%BD%E6%95%B0%EF%BC%88function%EF%BC%89%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F/"/>
      <url>/2018/01/31/2018-1-31%E6%96%B9%E6%B3%95%EF%BC%88method%EF%BC%89%E5%92%8C%E5%87%BD%E6%95%B0%EF%BC%88function%EF%BC%89%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>学C#突然发现C#里只有方法。然后就搜了下方法和函数的区别。在StackOverflow发现有比较清晰的解答：</p><span id="more"></span><blockquote><p>函数是一段代码，通过名字来进行调用。它能将一些数据（参数）传递进去进行处理，然后返回一些数据（返回值），也可以没有返回值。<br>所有传递给函数的数据都是显式传递的。<br>方法也是一段代码，也通过名字来进行调用，但它跟一个对象相关联，方法在 C++ 中是被称为成员函数。<br>Java中只有方法，C中只有函数，而C++里取决于是否在类中。<br>方法和函数大致上是相同的，但有两个主要的不同之处：<br>1.方法中的数据是隐式传递的；<br>2.方法可以操作类内部的数据（请记住，对象是类的实例化–类定义了一个数据类型，而对象是该数据类型的一个实例化）<br>以上只是简略的解释，忽略了作用域之类的问题。<br>方法和对象相关；<br>函数和对象无关。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C&amp;#43&amp;#43 </tag>
            
            <tag> C </tag>
            
            <tag> C&amp;#35 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐一个高品质免费素材库Unsplash</title>
      <link href="/2018/01/29/2018-01-29%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E9%AB%98%E5%93%81%E8%B4%A8%E5%85%8D%E8%B4%B9%E7%B4%A0%E6%9D%90%E5%BA%93Unsplash/"/>
      <url>/2018/01/29/2018-01-29%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E9%AB%98%E5%93%81%E8%B4%A8%E5%85%8D%E8%B4%B9%E7%B4%A0%E6%9D%90%E5%BA%93Unsplash/</url>
      
        <content type="html"><![CDATA[<p><strong>偶然了解了解到<a href="https://unsplash.com" title="点击进入Unsplash官网" target="_blank" rel="noopener">Unsplash</a>，从此我的图库风格变成了这样子</strong></p><span id="more"></span><p><img src="/2018/01/29/2018-01-29%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E9%AB%98%E5%93%81%E8%B4%A8%E5%85%8D%E8%B4%B9%E7%B4%A0%E6%9D%90%E5%BA%93Unsplash/1.jpg" alt="栖木"><br><img src="/2018/01/29/2018-01-29%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E9%AB%98%E5%93%81%E8%B4%A8%E5%85%8D%E8%B4%B9%E7%B4%A0%E6%9D%90%E5%BA%93Unsplash/2.jpg" alt="栖木"><br><img src="/2018/01/29/2018-01-29%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E9%AB%98%E5%93%81%E8%B4%A8%E5%85%8D%E8%B4%B9%E7%B4%A0%E6%9D%90%E5%BA%93Unsplash/3.jpg" alt="栖木"><br><img src="/2018/01/29/2018-01-29%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E9%AB%98%E5%93%81%E8%B4%A8%E5%85%8D%E8%B4%B9%E7%B4%A0%E6%9D%90%E5%BA%93Unsplash/4.jpg" alt="栖木"><br><img src="/2018/01/29/2018-01-29%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E9%AB%98%E5%93%81%E8%B4%A8%E5%85%8D%E8%B4%B9%E7%B4%A0%E6%9D%90%E5%BA%93Unsplash/5.jpg" alt="栖木"><br><img src="/2018/01/29/2018-01-29%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E9%AB%98%E5%93%81%E8%B4%A8%E5%85%8D%E8%B4%B9%E7%B4%A0%E6%9D%90%E5%BA%93Unsplash/6.jpg" alt="栖木"><br><img src="/2018/01/29/2018-01-29%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E9%AB%98%E5%93%81%E8%B4%A8%E5%85%8D%E8%B4%B9%E7%B4%A0%E6%9D%90%E5%BA%93Unsplash/7.jpg" alt="栖木"></p><p><strong><em><a href="https://unsplash.com" title="点击进入Unsplash官网" target="_blank" rel="noopener">Unsplash</a>是一个免费高质量照片的网站，都是真实的摄影照片，照片分辨率也很大，用来做网页素材已经足够了，所以在此推荐给大家。</em></strong></p>]]></content>
      
      
      <categories>
          
          <category> 精品网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 分享 </tag>
            
            <tag> 图片 </tag>
            
            <tag> 精品网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>栖木之始</title>
      <link href="/2018/01/28/2018-01-28%20%E6%A0%96%E6%9C%A8%E4%B9%8B%E5%A7%8B/"/>
      <url>/2018/01/28/2018-01-28%20%E6%A0%96%E6%9C%A8%E4%B9%8B%E5%A7%8B/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到我的blog，我把它叫做栖木。是希望它成为这嘈杂的世界里的一丝宁静，美好之地。让自己累了，倦了能有一个歇脚之地。同时希望陌生的你能在这里发现一丝生活的美好。</p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
